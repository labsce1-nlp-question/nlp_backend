Name,2 Days,Description,Instructor Notes,Objectives,Objectives count,Preclass Video,Instruction Videos,Code Challenges,Guided Project,Project,Sprints,Status,Curriculum Sets,Objective Count,Level 1 Check,Objective Level 2 Count,Objective Level 3 Count,Objective Level 4 Count,Projected Level,Preferred Pro Tip,Created time,RecordID
Algorithms I,,,,,0,,"Algorithms - How to Write and Analyze I for CS14 w/Beej Jorgensen,Algorithms - How to Write and Analyze II for CS14 w/Beej Jorgensen,Algorithms One for Web15 w/Jonathan Brunt,Algorithms One Part Two for WEB15 w/Jonathan Brunt",,,,,,,0,0,0,0,0,0,,12/7/2017 11:12am,recqAEn1QDiUmTzH7
Algorithms II,,,,,0,,Algorithms Day Two for WEB15 w/Jonathan Brunt,,,,,,,0,0,0,0,0,0,,12/7/2017 11:12am,recYLfmvpnerQMIRt
Applied C,,,,,0,,,,,,,,,0,0,0,0,0,0,,12/7/2017 11:12am,recvyH4bFLRDVfRHa
Computer Architecture I,checked,"In this module, we will learn the basics of how a computer is constructed and functions. Additionally we'll practice manipulating numbers in binary and hexadecimal.

The week-long project is an implementation of an emulator for the LS-8 computer.","This is an aggressive schedule. Try to keep the students on, but if they fall back, it's not a big deal as long as they get mult.ls8 running.  

There is an LS-8 assembler with label and declared data support. Students do not need to assemble anything for this module, but some might want to use it if they're ranging ahead. Instructors can use it for the sample ls8 code.  

Basic functioning of the emulator is needed for the sprint challenge. The challenge does not rely on the stack or interrupts.  

Friday slack intro:  
```  
@channel Guess what!  

Next is _Computer Architecture_! :wooooo: :computer: My favorite!  

For Monday, I have a couple videos for you: _CPU Functional Components_ and _Binary, Decimal, and Hex_, which are the first two videos in TK: https://learn.lambdaschool.com/cs/module/recsujbrrfgbfucrx

We'll be going through a guided demo Monday under the assumption that you've watched those first two videos, so please do so. Apologies that they're on the longer side.  

(There are two modules in this sprint, so the project steps in TK are going to be split over Mo/Tu.)  

The github repo for the entire week is: [https://github.com/LambdaSchool/Computer-Architecture](https://github.com/LambdaSchool/Computer-Architecture)  

Let me know if there are any questions.  
```  

Guided Demo repo for all days: <https://github.com/LambdaSchool/Computer-Architecture-Guided-Demo>

Visualization of the LS8 showing how *print8*, *stack*, and *call* programs affect the registers, stack, PC etc.<br>
* [Link to view in browser](https://docs.google.com/presentation/d/e/2PACX-1vQ4OAWMdhmUnlYtTIvb-q5Q0qptm-fXdKSsIrdKIFdAbL3JxycQ4ZN0X9gAfNNgeocJ5UiFzRzB-ju_/pub?start=false&loop=false&delayms=60000&slide=id.g4582dfa066_0_526)<br>
* [Link to edit](https://docs.google.com/presentation/d/1Wg5cbpRZHJdF-hwepfZqEEHpUbu0PhBJ5xiU_mJVWi0/edit?usp=sharing)


**Day 1 lecture:**  
```
/polly ""How well do you feel you understand the 30,000-foot view of computer architecture?"" ""0 - not at all"" ""1"" ""2"" ""3 - a lot""

/polly ""How well do you feel you understand number bases as a concept?""  ""0 - not at all"" ""1"" ""2"" ""3 - a lot""

/polly ""How confident are you that you can convert between number bases?""  ""0 - not at all"" ""1"" ""2"" ""3 - very""
```

1. Why do we do this?  
   * Demystifying the computer at the most basic level helps you be more comfortable in that medium. This makes you a more effective programmer.  
   * Practice solving hard problems.  
   * Experiment with a data-driven system.  
2. Q&A from precourse vids  
3. Number Conversions
4. Emulators and the LS-8
   * Get a 30K-foot overview of the repo
   * Manually step through `print8.ls8` to get a feel for how the emulator will run
   * Talk about opcodes and operands


Announcement for Day 2

---
@channel There's one more pre-class video for you for tomorrow in TK: _Bitwise Operations_. 

https://learn.lambdaschool.com/cs/module/recsujbrrfgbfucrx

This is something you can make use of to take some shortcuts in your emulator.

---

**Day 2 lecture**

```
/polly ""How well do you feel you understand extracting specific bits from a number?""  ""0 - not at all"" ""1"" ""2"" ""3 - a lot""

/polly ""How confident are you with clearing and setting specific bits in a number?""  ""0 - not at all"" ""1"" ""2"" ""3 - very""
```

1. Bitwise examples
   * Shifting and masking to extract data
   * ORing to turn on bits
   * ANDing to turn off bits
2. File I/O refresher to demo reading in binary from lines of a file (this supports the ""unhardcode the machine code"" part of day 2).
3. Solution for Day 1 (in `solution` branch of main repo).


Announcement for Day 2

---
@channel Tomorrow we'll be talking about the CPU's stack data structure, the one data structure that's built in to the CPU.

Pre-class video on TK: _The CPU Stack_.

https://learn.lambdaschool.com/cs/module/recvqukzz23ntj20g

Tomorrow's goal is to get the CPU stack working with the `PUSH` and `POP` instructions. We'll make use of it on Thursday to implement subroutines (which are the CPU's version of functions).
---
**Day 3/4 lecture**

See the Computer Architecture II module.","perform basic bitwise operations,""convert between and understand decimal, binary, and hexadecimal"",describe the functional components of a CPU",3,,"""Precourse: Conversion between Binary, Decimal, and Hexadecimal"",Precourse: Intro to Computer Architecture,Computer Architecture: Number Bases and Emulators for CS11 w/Beej Jorgensen,Computer Architecture for CS11 w/Beej Jorgensen",,,LS-8 Emulator Multiply,Computer Architecture,,Computer Science,3,1,3,3,3,4,,12/7/2017 11:11am,recsuJbrrFgbFUCRX
Computer Architecture II,checked,"In this module we'll continue learning about computer architecture. We'll see how peripherals connect to and interact with the rest of the system, and how requests to and from the peripherals are processed in a timely manner.","TODO: Precourse video for this module

NOTE: there is a stretch goal for the LS-8 in here: add interrupts. Students can do this if they finish the stuff in the assignment in Arch-One.

Guided Demo repo for all days, which includes some pointers for the interrupts stretch goals, as well: <https://github.com/LambdaSchool/Computer-Architecture-Guided-Demo>

Visualization of the LS8 showing how *print8*, *stack*, and *call* programs affect the registers, stack, PC etc.<br>
* [Link to view in browser](https://docs.google.com/presentation/d/e/2PACX-1vQ4OAWMdhmUnlYtTIvb-q5Q0qptm-fXdKSsIrdKIFdAbL3JxycQ4ZN0X9gAfNNgeocJ5UiFzRzB-ju_/pub?start=false&loop=false&delayms=60000&slide=id.g4582dfa066_0_526)<br>
* [Link to edit](https://docs.google.com/presentation/d/1Wg5cbpRZHJdF-hwepfZqEEHpUbu0PhBJ5xiU_mJVWi0/edit?usp=sharing)

# Rough Schedule:

## Day 3

```
/polly ""How confident are you that you can implement the CPU stack for the LS-8?""  ""0 - not at all"" ""1"" ""2"" ""3 - very""

/polly ""How well do you understand the how and why of interrupts?""  ""0 - not at all"" ""1"" ""2"" ""3 - a lot""
```

* Stack Q&A 
* Interrupts Q&A
* Solution for mult8. This is enough code for the sprint challenge.

You can use this to demonstrate in an editor what happens for the PUSH and POP instructions.

You can also demonstrate stack overflow by pretending that the program starting at 00 is a loop that is repeatedly pushing `0x00` on the stack. Once it overwrites the end of the program, the PC will just continue running until it hits the 32 that was pushed on the stack. This invalid opcode should cause a halt, but could do other things on other platforms.

```
FF: 00
FE: 00
FD: 00
FC: 00
FB: 00
FA: 00
F9: 00
F8: 00
F7: 00
F6: 00
F5: 00
F4: 00 <-- SP
F3: 00
F2: 00
F1: 00
F0: 00
EF: 00
.
.
.
05: 00
04: 00
03: DD
02: CC
01: BB
00: AA <-- PC


R0: 12
R1: 32
R2: 4A

PUSH R0
PUSH R1
POP R2
```

## Day 4

```
/polly ""How well do you understand LS-8 subroutines?""  ""0 - not at all"" ""1"" ""2"" ""3 - a lot""

/polly ""How well do you understand the how and why of interrupts?""  ""0 - not at all"" ""1"" ""2"" ""3 - a lot""
```

* CALL/RET Q&A
* Interrupts Q&A
* Any catchup
* How the stack and heap in C work
* Solution for Day 3 (stack)","describe how the CPU handles subroutines,describe how interrupts work and why they're useful,describe the CPU stack and how it's useful",3,,"Computer Architecture for CS11 w/Beej Jorgensen,Computer Architecture for CS11 w/Beej Jorgensen,Computer Architecture II for CS w/ Beej Jorgensen",,,"""LS-8 Stack, Subroutines, Interrupts""",Computer Architecture,,Computer Science,3,1,3,3,3,4,,12/7/2017 11:11am,recvQUkzz23NTj20G
Data Structures,checked,,"Data Structures takes students through some of the more basic data structures that are commonly used in Computer Science. We'll be covering Queues, Singly- and Doubly-Linked Lists, Binary Search Trees, and Heaps over the next couple of days so do a good job at setting up expectations of the students early. This is crucial this week. Students need to understand that DS and Algorithms are hard, and the subject is one that spans over months and months of CS curriculum. Here at LS we get a Week. ",implement Linked Lists,1,Data Structures I Preclass Video,"Data Structures,Q&A: Data Structures I A (CS4),Q&A: Data Structures I B (CS4),Q&A: Data Structures I D (CS4),Data Structures I Sprint Review (CS4),Data Structures I Solution (CS4),Data Structures Day 1 for CS11 w/Sean,Data Structures Lesson 2 for CS11 w/Sean,Data Structures I for CS13 w/ Beej Jorgensen,Data Structures Day Two for WEB15 w/Jonathan Brunt","TwinPrimes,StringToCamelCase",,,Data Structures,,,1,0,1,1,0,0,,11/21/2017 12:10pm,recuHtt6iuzSG3u6N
Data Structures,,"Up through this point, as you have been working through the Web curriculum, even though data structures were never officially introduced, you were making extensive use of them all the time. Python lists and dictionaries are so useful and versatile that they were included as standard in the language.

Indeed, data structures are extremely prevalent and fundamental when it comes to understanding programming and computer science. By the end of the Computer Science curriculum, you’ll have a good idea of the answers to important questions that were raised during the web curriculum such as ‘how do web servers such as Express effectively and efficiently handle hundreds or thousands of concurrent requests simultaneously?’ or ‘how does a database like MongoDB organize the data that it stores in such a way that it can then retrieve it as quickly as possible?’. Such questions can be answered in part by having an understanding of both the wide berth of all the currently-existing data structures that have been dreamt as well as an adequately deep understanding of how many common data structures work.

As part of your first Data Structures sprint, we’ll be learning about and implementing some very common and fundamental data structures that are very often used to implement more complex and specialized data structures. These are the:

 - Linked List (singly- and doubly-linked)
 - Queue
 - Binary Search Tree
 - Heap

Each of these data structures has its own associated strengths and weaknesses. Think of each of them as a tool in a toolbox. You have entirely different classes of tools such as hammers and wrenches that are each used for entirely different use cases. You also have multiple types of screwdrivers. Both are used for tightening and untightening screws, but the Phillips screwdriver is better for certain screws and the flathead screwdriver is better for other types of screws.

The same can be said of data structures. There are many instances of wildly different data structures that serve entirely different use cases, and then you have data structures that can both perform the same function, but one will be better at it than the other. More specifically, you could emulate the functionality of a JavaScript Array using an Object, but an Object isn’t going to perform as efficiently when it comes to certain tasks that Arrays are really efficient at.","Data Structures takes students through some of the more basic data structures that are commonly used in Computer Science. We'll be covering Queues, Singly- and Doubly-Linked Lists, Binary Search Trees, and Heaps over the next couple of days so do a good job at setting up expectations of the students early. This is crucial this week. Students need to understand that DS and Algorithms are hard, and the subject is one that spans over months and months of CS curriculum. Here at LS we get a Week. ","enumerate how queues work as well as what some of their pros and cons are.,enumerate how heaps work as well as what some of their pros and cons are.,enumerate how linked lists work as well as what some of their pros and cons are.,enumerate how binary search trees work as well as what some of their pros and cons are.",4,Data Structures Preclass Videos,"Data Structures II (CS4),Q&A: Data Structures II B (CS4),Q&A: Data Structures II C (CS4),Data Structures II Solution (CS4),Binary Search Tree for Web15 w/Jonathan Brunt","CollatzSequence,ConsecutiveStrings",,,Data Structures,,,4,1,4,4,4,4,,11/21/2017 12:02pm,recYjZzdDMWnJ4S3g
HTML and CSS Fundamentals,,"In the last lesson, we started down the path of web development by learning about the fundamental building blocks of web dev. This introduced us to HTML (Hypertext Markup Language). Today, we will go a little more in-depth into HTML and also learn about HTML's companion language, CSS (which stands for Cascading Style Sheets). This will allow us to build our first styled web page.",,"""understand the main concepts of CSS (selectors and style rules), and be able to apply them to an HTML page."",understand the concepts of HTML and be able to build a small HTML page.",2,,"HTML and CSS Fundamentals w/Diandra Ryan-Mas,HTML and CSS Fundamentals for Section 4 w/ Dustin Myers,HTML & CSS Fundamentals for Section 7 w/ Diandra Ryan-Mas",,,"Lesson 2: HTML and CSS (3/3),Lesson 2: HTML and CSS (2/3),Lesson 2: HTML and CSS (1/3)",Intro to Web Development,,Precourse FSW,2,1,2,0,0,2,,12/7/2017 11:20am,rec0Vmn34NDFqmwy8
JS VI: Callbacks,,"Throughout these lessons we have been using variables, we know how to create and assign variables, and we know how to pass them around our code. One thing you may not have realized is that functions are variables as well. We can pass functions as values to objects, and we can even pass functions as arguments to other functions. In this lesson we will learn how to do that using a concept called `callbacks`.",,"use two basic array methods using callbacks.,understand and implement callbacks.",2,,JS VI: Callbacks w/ Diandra Ryan-Mas,,,JS VI: Callbacks,Intro to Web Development,,Precourse FSW,2,1,1,0,0,1,,12/7/2017 11:20am,recmYbsWt7xGzlk5l
Introduction To C,checked,"As the students' first introduction to the C programming language, this sprint aims to expose students to topics pertaining to low-level languages, such as strong typing, pointers, and memory allocation. The structure of this sprint mimics the structure of other sprints that introduce students to a new language. ","I found this link of interesting Teaching C advice, so I'm dropping it here so I don't forget it: https://blog.regehr.org/archives/1393

Friday after-class announcement:


-----------
@channel Before we start into the new and exciting world of C programming, we have a couple pre-class vids for you to watch (~30 minutes total).

_Learn to describe and use header files, basic types, arrays, strings, flow control, and functions in C_

_Learn to describe how a computer's memory model works and how pointers relate to this memory model in C_

https://learn.lambdaschool.com/cs/module/reclymrrd7f46rdba

The absolutely hardest thing about C to grok is pointers. Everything else is a variant on something you already know. (Pointers themselves are a variant on something you already know, but it's not always obvious how.)

And I have one more task for you before we meet again: get your C compiler set up. The platform that will take the most effort is Windows, so be prepared if that's the case. Personally, I'm a big fan of WSL.

Instructions: https://github.com/LambdaSchool/CS-Wiki/wiki/Getting-Your-C-Compiler-Installed

Feel free to drop questions as you go. We're not going to be around as much over break, but we will be around.

If you're curious why we teach C, here's the rationale:  https://github.com/LambdaSchool/CS-Wiki/wiki/Why-Learn-C%3F

And the repo for the week: https://github.com/LambdaSchool/Intro-to-C

Have a great weekend!
-----------


## Day 1
On the Q&A poll, allow multiple votes and adding of responses.

```
/polly ""I got my compiler working"" ""Yes"" ""Not yet""

/polly ""Discussion topics (add your own)"" ""Pointers in general"" ""Pointer Arithmetic"" ""Pointers and Arrays"" ""Pointers and strings""
```

Project: get as far as you can on the Intro-to-C repo.

Monday after-class slack announcement:


-----------

@channel Hey all! I have one more pre-class video for you:
* Using Structs in C

You can find it in TK: https://learn.lambdaschool.com/cs/module/reclymrrd7f46rdba

Keep on hacking on the repo! https://github.com/LambdaSchool/Intro-to-C


-----------
## Day 2


On the Q&A poll, allow multiple votes and adding of responses.

```
/polly ""I got my compiler working"" ""Yes"" ""Not yet""

/polly ""Discussion  topics"" ""Pointer Arithmetic"" ""Pointers and Arrays"" ""Pointers and strings"" ""Structs""

/polly ""How confident are we C in general except for pointers?""  ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on arrays?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on strings?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on pointers?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""
```

Project: complete the Intro-to-C repo","use structs to create more complex composite types in C,utilize pointers appropriately in order to work with dynamic memory,describe how a computer's memory model works and how pointers relate to this memory model in C,""describe and use header files, basic types, arrays, strings, flow control, and functions in C""",4,,"Intro to C: Pointers for CS11 w/Beej Jorgensen ,Intro to C: Pointers Day II for CS11 w/Beej Jorgensen,Intro to C (1) - Pointers for CS13 w/ Beej Jorgensen,""Intro to C (2) - Pointers, structs, malloc for CS13 w/ Beej Jorgensen"",Intro to C Day Two for WEB15 w/Jonathan Brunt",,Intro to C,Intro to C,Intro to C,Active,Computer Science,4,1,4,4,4,4,,12/7/2017 11:12am,recLymrrD7f46rdBa
Introduction to Web Development Fundamentals,,"This is the introductory lesson in the Web Dev 101 series. This lesson will help students explore the question ""What does it mean to be a software engineer?"" through high level computer science ideas, as well as a basic introduction to web development and HTML. ",,"use HTML code to create a basic webpage ,""explain what web development is and the roles of HTML, CSS, and JavaScript in creating web content"",start thinking like a software engineer",3,,"Introduction to Web Development Fundamentals w/ Diandra Ryan-Mas,Web Dev Fundamentals for Section 4 w/ Dustin Myers ,Intro to Web Dev for Section 6 w/ Diandra Ryan-Mas,Intro to Web Dev for Section 7 w/ Diandra Ryan-Mas",,,Intro to Web Development and HTML,Intro to Web Development,,Precourse FSW,3,1,3,0,0,2,,11/14/2017 11:13am,rec4LUtFFx6uI9689
Introduction to JavaScript,,"JavaScript is the programming language that lets the Internet work. The Internet would be nothing without JavaScript and in this lesson, you will find out why. ",," explain basic control flow and if/else statements.,explain global object in JavaScript and be able to use the Math object.,explain and use JavaScript functions as properties and methods on primitive data types., explain and use JavaScript primitive data types and variables.,understand what Javascript is and explain its use in web development.",5,,"Introduction to Javascript w/ Diandra Ryan-Mas,Introduction to JavaScript for Section 2 w/ Dustin Myers,Intro to JavaScript for Section 6 w/ Diandra Ryan-Mas",,,Introduction to JS,Intro to Web Development,,Precourse FSW,5,1,5,0,0,2,,12/7/2017 11:23am,recwgcg93B0CCiC5G
JavaScript I ,,"JavaScript I will expose you to some deeper concepts based on some of the things you already have learned during the pre course material. As we dive a bit deeper, you'll gain a better understanding of the fundamentals of the JavaScript programming language. The concepts that you already know about are.

* Variables
* Arrays
* Objects
* Functions

This particular module is designed to go quite a bit deeper into these subjects. We will also be covering these concepts quite rapidly, but each concept lends itself to the next, so you get a lot of exposure while combining some or all of these points. ","This particular module is all about taking the students through a refresher course on some concepts they already know, and then diving deeper into arrays, objects and functions. The first objective lends itself really well to the pre-course material as it stands. In fact most of the material covered on Day 1 of JavaScript Fundamentals week shouldn't be anything 'new' to the students. ","create and use arrays as well as array properties and array methods,create and use object literals as well as describe object properties and methods,""use let, const, var and demonstrate their differences."",""use function declarations, expressions, and arrow functions and describe their differences""",4,,"JS-I Guided Demo for CS9 w/ Josh Knell,JavaScript I (CS4),For Loops and Callbacks (CS4),Q&A: JavaScript I (CS4),JavaScript I Solution (CS4),JS - I Guided Demo for CS11 w/ Josh Knell,JavaScript I for CS12 w/ Russell Kennington,JavaScript I for CS13 w/Josh Knell,Javascript-I for CSPT2 w/ Daniel Frehner,Javascript I for FSW14 w/ Josh Knell,JavaScript I for FSW15 w/ Josh Knell,JavaScript I for FSWPT3 w/ Cameron Pope,JavaScript I for FSW16 w/ Josh Knell,JavaScript I for WEBPT4 w/Cameron Pope,Javascript I for WEB18 w/ Josh Knell,JavaScript I for Web 19 w/ Josh Knell,JavaScript I for WEBPT6 w/ Keiran Kozlowski,JavaScript I for WEB20 w/ Dan Levy,Javascript I for WebPT7 w/Dan Frehner",,,JavaScript-I,JavaScript Fundamentals,,Full Stack Web Development Core,4,1,4,3,4,2,,11/14/2017 11:13am,recCT3KJYTIRYwQMh
JavaScript II  ,,"Throughout JavaScript II we're going to be getting more practice with Callbacks as well as dive into a couple of new concepts. By the end of the day you should be familiar with and have the ability to use the following:
* closure
* callback functions
* advanced array methods",,"demonstrate ability to use `.map` `.reduce` `.filter` and describe their use cases ,demonstrate the proper use a of a callback function by passing a function to another function as a parameter,""describe what closure is, how closure is created in a program and why it is important to understand closures in JavaScript""",3,,"Q&A: JavaScript II A (CS4),Q&A: JavaScript II B (CS4),Q&A: JavaScript II C (CS4),JavaScript II Solution (CS4),JavaScript Fundamentals II for CS8 w/ Ryan Hamblin,Closures for CS8 w/ Ryan Hamblin,JavaScript II for CS12 w/ Russell Kennington,JavaScript II for CS13 w/Josh Knell,Javascript II for FSW14 w/ Josh Knell,JavaScript II for FSWPT3 w/ Cameron Pope,JavaScript II for FSW16 w/ Josh Knell,JavaScript II for WEBPT4 w/Cameron Pope,JS I for WEBEU1 w/Gabriel Cabrejas,JavaScript II for WEB17 w/ Josh Knell,JavaScript Functions Review for WEB17 w/ Josh Knell,Javascript II for WEB18 w/ Josh Knell,JavaScript II for Web 19 w/ Josh Knell,JavaScript II for WEBPT6 w/ Keiran Kozlowski,JavaScript II for WEB20 w/ Dan Levy",,,JavaScript-II,JavaScript Fundamentals,,Full Stack Web Development Core,3,1,3,3,3,4,,11/14/2017 11:13am,rec1oaBmEoSilO2yf
JavaScript III,,JavaScript III introduces us to the `this` keyword and it's many uses.  After we learn about `this` we are prepared to discuss prototypes in JavaScript and explore how they are in every aspect of JavaScript.,,""" describe, and use prototypes, constructor functions the new keyword, and pseudo-classical inheritance to build a small object based video game"",explain the four principles of the 'this' keyword and demonstrate each explanation with an example of their uses",2,,"""The """"this"""" keyword for CS8 w/ Ryan Hamblin"",JavaScript III Part 1 for CS11 w/ Josh Knell,Prototypes Part 2 for CS11 w/Josh Knell,""JavaScript III for CS12 w/ Josh Knell, Part I"",""JavaScript III for CS12 w/ Josh Knell, Part II"",JavaScript III for CS13 w/Josh Knell,JavaScript III for CSPT2 w/ Daniel Frehner,Javascript III for FSW14 w/ Josh Knell,JavaScript III for FSW15 w/ Josh Knell,JavaScript_III for FSWPT3 w/ Cameron Pope,JavaScript III for FSW16 w/ Josh Knell,JavaScript III for WEB17 w/ Josh Knell,JavaScript III for WEB18 w/ Josh Knell,JavaScript III for Web 19 w/ Josh Knell,JavaScript III for WEBPT6 w/ Keiran Kozlowski,JavaScript III for WEB20 w/ Dan Levy",,,JavaScript-III,JavaScript Fundamentals,,Full Stack Web Development Core,2,1,2,2,2,4,,12/1/2017 1:32pm,rec0AWuNLezbpit7m
JavaScript IV,,"JavaScript IV introduces you to the powerful paradigm of Object Oriented Programming (OOP) in JavaScript. We will take a deep dive into these topics:
* The JavaScript Prototype object
* constructor functions
* Pseudo-classical Inheritence
* the `class` keyword

By the end of the day you should be familiar with objects and how to use Constructors and Classes to build out objects and achieve inheritance across these objects. ","Before teaching this module, study up on Pseudo classical inheritance in JavaScript. Study up on the Prototype and how it differs from properties/values on an object. ","convert a pseudo classically instantiated program into class syntax,describe and demonstrate how class syntax works.",2,,"Pseudo Classical Inheritance for CS8 w/ Ryan Hamblin,JavaScript - IV for CS11 w/ Josh Knell,JavaScript IV for CS12 w/ Josh Knell,JavaScript IV for CS13 w/Josh Knell,JavaScript IV for CSPT2 w/ Daniel Frehner,Javascript IV for FSW14 w/ Josh Knell,JavaScript IV for FSW15 w/ Josh Knell,JavaScript IV for FSWPT3 w/ Cameron Pope,JavaScript IV for FSWPT3 w/ Cameron Pope,JavaScript IV for WEBPT4 w/Cameron Pope,JavaScript IV for WEB17 w/ Josh Knell,JavaScript IV for WEB18 w/ Josh Knell,JavaScript IV for Web 19 w/ Josh Knell,JavaScript IV for WEBPT6 w/ Keiran Kozlowski,JavaScript IV for WEB20 w/ Dan Levy,Javascript IV for WebPT7 w/Dan Frehner",,,JavaScript IV,JavaScript Fundamentals,,Full Stack Web Development Core,2,1,2,2,2,4,,12/1/2017 1:32pm,recyS588eOvVUKAMc
Functional Components I,,"Functional Components I will be an introduction to the JavaScript UI library called ReactJS. We will take you through the high level concepts and help you understand some answers to the following questions:
* What is React and what potential problems does it address?
* What tools are required for me to started with a react application? 
* What does react look like syntactically? (How do I write react code using JSX?)
* What are some of the basic patterns I will see when building React Applications? (Components etc.)","Students should be lead through a discussion about ""Why React is important"" and ""what problems it solves"". When learning something as complicated as React it is important to understand context. Providing examples of how the React API works with `React.CreateClass()` and wiring up a simple React App within an HTML document is a really good segway into how react fits together. Once we abstract that away with the `class` keyword it becomes really difficult to understand the context. This is impertive to learning the library and it's api at first.

*Solution Code for the Afternoon Projects* 

Students can follow along building this out during the lecture. Each objective you take it a step further. Starting with `React.createElement()` -> then `JSX` -> then -> `components`. This will allow you to see the progression of this come to fruition right before your eyes. AND the students LOVE it.

https://gist.github.com/ryanhca/b23529ae7aaf28f885ead2eed955852a

I have added a step to the above. I have been creating a custom createElement function that takes in a type, a className, and content and creates a custom element. Then it returns that custom element, and we add it to the DOM. The I replace my custom function with React.createElement. Here is the example gist:

https://gist.github.com/dustinmyers/9a5bd605e2c85aeb3ecbd63315e370a3

*Gotcha* for this lesson - Don't forget to teach how to import/export components in a regular file structure. This is required in the afternoon project, and it will really throw off students if it's not discussed.","""explain how components work, and implement a functional component to render a piece of UI to the screen"",use JSX to mount a DOM element and display that element in a web browser,use an html file set up a react environment and mount an application to a target DOM element using React and ReactDOM.render,describe ReactJS and the problems that it tries to solve",4,What is React?,"React Components I for CS11 w/ Ryan Hamblin,React Components II for CS11 w/ Ryan Hamblin,CS12 - Functional Components I w/ Ryan Hamblin,Functional Components I for FSW13 w/ Dustin Myers,Functional Components I for FSWPT2 w/Dan Frehner,Functional Components I for FSW14 w/ Dustin Myers,Functional Components I for FSW15 w/ Dustin Myers,Functional Components I for FSWPT3 w/ Dan Frehner,Functional Components I for WEB16 w/ Dustin Myers,Functional Components I for WEB17 w/ Dustin Myers,Functional Components I for WEB18 w/ Dustin Myers,Functional Components I for Web 19 w/ Dustin Myers,Functional Components-I for WEBPT6 w/ Dan Frehner","QuickSort,InsertionSort",,React-UI-Components,React,,Full Stack Web Development Core,4,1,4,4,4,4,,11/28/2017 6:34pm,reck045DUabDvwF72
Class Components I,,Today we will learn all about `classes` in React. We will use classes to build out our components. Class Components are a big part of the React ecosystem because they bring a lot of functionality that we normally don't get with the React API when using Functional Components. Learning to use Class components is a fundamental part of learning to work with ReactJS and it's API.,"The last few times I taught this module I used this example : https://codesandbox.io/s/3k8r6k795
https://codesandbox.io/s/n9wz98w8l","respond to events triggered by user interaction and handle user input via forms in React,share data between components using state and props,""explain class components, and use a class component to render some state data to the DOM""",3,,"React Class Components I for CS11 w/ Ryan Hamblin,React Class Components II for CS11 w/ Ryan Hamblin,Class Components I for CS12 w/ Ryan Hamblin,Components and List Iteration for CS12 MBP w/ Eric Hech,Class Components I for FSWPT2 w/Russell Kennington,Class Components I for FSW14 w/ Dustin Myers,Class Components I for FSW15 w/ Dustin Myers,Class Components I for WEB16 w/ Dustin Myers,Class Components I for WEB17 w/ Dustin Myers,Class Components I for WEBPT4 w/Dan Frehner ,Class Components I for WEB18 w/ Dustin Myers,Class Components I for Web 19 w/ Dustin Myers","BreadthFirstSearch,MergeSort",,"React-Sorting-Hat,React Todo",React,,Full Stack Web Development Core,3,1,3,3,3,4,,11/28/2017 6:34pm,recnDKrWb24lgaziC
Security and Cryptography,,,See notes in the objective,"""use crypto/security tools as a developer, know a bit about future direction"",explain asymmetric crypto trust - PKI versus web of trust,list and describe basic crypto operations,list common security exploits and defenses and understand what situations they are relevant in,understand and explain what a threat model is",5,Security and Cryptography Lecture,,,,Secret Gists,,Active,,5,1,5,5,0,3,,12/7/2017 11:12am,recPQ3CBrTPBcqe4i
Theory of Computation,checked,"What _is_ computation? What does it mean to be computable? We'll explore the basis for computation and how it led to the early concept and design of computing machines, algorithms and data structures.","TODO: objective videos

https://github.com/LambdaSchool/Theory-Of-Computation
(Note:  The above repository contains the same info as is in the Training Kit)

#Rough Schedule
This is a two-day module/project.  Don't panic!  There is a huge amount of content here, but this lesson is intended to provide an overview of the fundamentals of computer theory and give context to the work that we do.  

Day 1 lecture:  Theory of Computing and Intro to State Machines
*[Min 0 - 20]  Start with asking for opinions and thoughts on Thomson's videos.  Keep the discussion on track, but let it flow around between the different areas that the students found interesting or pertinent.

*[Min 20 - 40] Using the info in the TK as a guide, review the history of computing and why it is important.  Key points:
**Much of this has been around for a very long time.  The foundations of what became our Boolean algebra started with Greek philosophers in 300 BCE.
**  The formal definition of a Turing machine looks a little complex and confusing.  The important point here is that this represents two things:
1.  Before this, no one knew if general computing was possible.  There were many mechanical computers that did one specific task, such as adding machines, navigational aids, or even the Antikythera mechanism.  But it was unknown if a machine could be constructed that could compute any algorithm that could be calculated by a person by hand.  Turing, Church, and others proved that it was.  Any mathematical process that can be computed by a person, can be computed by a machine of this type.
2.  While they proved that general computing was possible, they also proved that there is a set of problems that are inherently unsolvable by computing/algorithms/computers, whether by hand or by machine (specifically, the halting problem).
[20 mins]  Discuss the background of logic and math as it relates to CS.  Ancient Greek philosophy eventually led to  if(a == b), etc.

[Min 40 - 60] Intro to finite state machines.
**  Digital/Discrete vs. Continuous/Analog.  Computers are very complex, deterministic, finite state machines
**  Important for mindset of computing.  Can you draw a diagonal line with a computer?
**  Also useful for converting abstract processes into computer thinking.  

[Min 60 - 65] Break

[Min 65 - 85] Explain examples of state machines in TK

[Min 85 - 105] Show the state machine creator at madebyevan.com/fsm/  and walk the class through creating an improved version of the vending machine state machine that can handle invalid coins and give change.

[Min 105 - 110] Answer questions

[Min 110 - 120]  Introduce the project (https://github.com/LambdaSchool/Theory-Of-Computation)
Students should complete the state diagram exercise tonight and if they have time should look over the regex challenge for tomorrow.

Day 2 Lecture:  Regular Expressions
[Min 0 - 20] Solution lecture for the blinker diagram and for a video game AI.

[Min 20 - 50] Start with state machines applied to the task of going through a string characters and changes states with the input of certain characters to read through and complete if it finds...
1.  goal
2.  gooooal - or any variant with o's
3.  goooool - also allow for a Spanish varient of the spelling 
4.  Build with letters as input to go forward and not letters [^g], etc. to go backwards.
5.  Reduce the final state machine diagram to a regular expression 
    a.  Use regular expression notation for the inputs - o+ and a?
    b.  It is implied that it will reset if it fails, so get rid of the return to starts

[Min 50 - 55] Break

[Min 55 - 95] Introduce regexr.com and run through the example there
* Different variations of goal and gol
* Discuss flags
* Explore the built in reference and test out other types of symbols that can be used
* Demo attempting to pull email addresses out of a block of text.  Discuss why a full-proof solution is difficult.
* Demo greedy vs. lazy

[Min 95 - 115] Demonstrate regex in JavaScript in a Node instance
*  Share the Mozilla reference page and refer to it in the demo:  https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp
*  Demo s.match with goal: 
s = ""goooal"";
s.match(/go+al/);
* Demo the difference in results when you use capturing groups (parens around parts of the regex)
* Store this in a variable (m = s.match(...)
* Store regex in variable r
* Show r.exec(s) as the inverse of s.match(r)
* Show the /g flag returning all possible results instead of the first


[Min 115 - 120]
Answer questions.  Remind everyone about the second part of the project - pulling links from StackOverflow, and matching phone numbers.

Lead the class to making the decision to start by figuring out the regexes needed for the project using the tools in regexr.

","""describe Turing Machines, Lambda Calculus, and Boolean Algebra and how they apply to programming"",implement and describe how high-level array functions work down to the memory level",2,Theory of Computation,"Theory of Computation for CS11 w/Brady Fukumoto,Theory of Computation - Day 1 for CS13 w/ Brady Fukumoto,Theory of Computation - Day 2 for CS13 w/ Brady Fukumoto,Theory of Computation One for WEB15 w/Jonathan Brunt",,Theory of Computation Demo,Arrays,Theory of Computation/Hash Tables,,Computer Science,2,1,2,1,2,2,,12/7/2017 11:12am,recH0OAnSr6ZcnZ7F
Travelling Salesman Problem,,,,,0,,,,Implementation of both exhaustive and NN TSP,,,,,0,0,0,0,0,0,,12/7/2017 11:11am,recCweZHXHsoiW4Xc
Resume/Linkedin profile building ,,,,"understand the importance of Linkedin and how to utilize it to grow connections and get jobs,put together a well rounded and presentable resume,set up huntr application tracker through the link provided ",3,,"Getting a Job - Finding Open Positions,Resume/Linkedin/Elevator Pitch for Career Readiness w/Sabrina Baez",,,,Career Development I,,Career Development,3,1,1,3,0,1,,12/7/2017 4:28pm,recnUfdM06vSpLah9
Job Search Pro Tips/Networking ,,,,"navigate different job boards for different situations ,schedule and conduct Informational Interviews,start networking in the tech world for referrals and to gain connections,start using huntr as their application tracker ",4,,"Getting a Job - Getting the Interview,Job Search/Networking for Career Readiness w/Sabrina Baez",,,,Career Development II,,Career Development,4,1,0,4,1,1,,12/7/2017 4:32pm,rechSIKJZyO4rIX7r
Nailing the Interview/Offer Negotiations,,,,"feel comfortable and confident in different types of interviews (behavioral and tech). ,successfully negotiate an offer ",2,,Nailing the Interview/Offer Negotiations for Career Readiness w/Sabrina Baez,,,,Career Development III,,Career Development,2,1,0,2,0,1,,12/7/2017 4:33pm,recrPQlnoz1YNAcb2
Negotiating an Offer,,,,"perform market research to help negotiate offers from hiring companies,""identify resources for salary and benefits negotiation, and apply those lessons in a non-confrontational manner"",use the Briefcase Technique to help solidify their position as an ideal candidate for any role",3,,,,,,Career Development IV,,,3,1,0,0,0,1,,12/7/2017 4:33pm,recPeKisb0xbaGR2E
JS II: Control Flow,,"Often times we want our program to act differently based on the information supplied to it. This is known as control flow, and is an integral part of software development. ",," write a basic for loop.,write control flow using if/else statements.,understand and be able to use different operators.",3,,JS II: Control Flow w/ Diandra Ryan-Mas,,,JS II: Control Flow,Intro to Web Development,,Precourse FSW,3,1,3,0,0,2,,12/11/2017 12:28pm,rec1KV0inBAVjipGG
JS III: Functions,,"Functions are required to make our code 'run'. Functions will take data, compute it, and return the computed data. All code that is 'run' in JavaScript is run inside of a function. ",,"explain function scope and the return statement.,write and call functions using arguments and parameters.,""understand JavaScript functions, why we use them, and be able to write correct function syntax.""",3,,JS III: Functions w/ Diandra Ryan-Mas,,,JS III: Function,Intro to Web Development,,Precourse FSW,3,1,2,0,0,1,,12/11/2017 12:28pm,recJbNkk2nWDyAtje
JS IV: Data Structures,,"Often times when writing code, we find the need to group data together. There are two data types, Objects and Arrays, that help us achieve this. Understanding these data structures is a necessity in learning JavaScript.",,"use objects to store and access data,use arrays to store and access data.",2,,JS IV: Data Structures w/ Diandra Ryan-Mas,,,JS IV: Data Structures,Intro to Web Development,,Precourse FSW,2,1,2,0,0,2,,12/11/2017 12:30pm,recjQZNUUIixK26zP
JS V: Classes,,"Now that we have the basics covered we will start to talk about more advanced concepts. Here we will introduce you to the concept of classes. Classes are just Objects, with some more functionality. Classes are used when we want to create many objects with the same keys and methods. ",,"""explain the prototype, how and why we use it. "",""understand when to use classes, as well as write and use ES5 class syntax.""",2,,JS V: Classes w/ Diandra Ryan-Mas,,,JS V: Classes,Intro to Web Development,,Precourse FSW,2,1,2,0,0,2,,12/11/2017 12:30pm,rechsMqDbnJyApTr3
Redux Fundamentals I,,"React is a very sophisticated UI - Component Library that can be used together with a few other libraries to build out large scale Single Page Applications. But as our Application's scale in size so too will the data that we are concerned with within our applications. And you can only start to imagine how difficult it might be manage all of that data inside of React components. Redux is a library that can help solve this problem by providing a single source of truth for our data within our application. As your team grows, and as your application scales, Redux can help offset the pains that can be brought on as a result of complexity.","Redux I is an exposure to the framework. We start the week off small, teaching the students first thing on Monday about Immutability in JS. There is an `immutability.js` file in the Redux Mini project for use during breakout sessions. 

The approach from ""What is Redux and what problems does it solve?"" to ""Here's how to implement Redux in a React app"" needs to be overhauled. 

This is the last time that I taught it (July 9, 2018):
These repls coincide with a follow along. The firstTimeRedux example I give the students to work through with me at times.
The solution is also posted below
What we're trying to build here is a simple Redux app that changes the three fields on the initialState object. 

https://repl.it/@ryan_ham/firstTimeRedux 

https://repl.it/@ryan_ham/ReduxFirstTimeSolution 

This is an example application that I built in class that consumes some data, and toggles some state data as well. It's a bit more sophisticated than the counter example that they'll use in the afternoon, but it's not too drastically different than the Todos app that they'll build over the first two days.

https://codesandbox.io/s/10q101x244 


Here is a codesandbox.io containing everything needed for a super basic react w/ redux implementation: https://codesandbox.io/s/mjv9j1kn4j

Here is the Repl.it that I have the students work on on Day II of redux during the demo. This can be done in breakout rooms, or have them work on it alone for 10 min.

Ask them (w/ polly anonymously) how far they got on implementing the `REMOVE` portion of this project.

https://repl.it/@ryan_ham/redux-breakdown","write Reducers to respond to actions and update state,write Actions and Action Creators to describe state changes,""use the connect() function to """"connect"""" React components to the Redux store"",create a Redux Store and connect it to a React application,explain what Redux is and the problem it solves",5,Redux Preclass Video,"Getting Started with Redux,Up and runing with Redux and React,Redux I for CS8 w/ Luis Hernandez,Redux II for CS8 w/ Luis Hernandez,Immutability + Redux for CS9 w/ Ryan Hamblin,Redux QA for CS9 w/ Ryan Hamblin,Redux React - Combine Reducers for CS9 w/ Ryan Hamblin,Redux Todo for CS9 w/ Ryan Hamblin,Redux Todo - QA for CS9 w/ Ryan Hamblin,Redux for CS10 w/ Ryan Hamblin,Redux review for CS10 w/ Ryan Hamblin,Redux Extended for CS10 w/ Ryan Hamblin,Redux Review + Combine Reducers for CS10 w/ Ryan Hamblin,Redux Fundamentals I for CS11 w/ Ryan Hamblin,Redux Fundamentals II for CS11 w/ Ryan Hamblin,Redux Fundamentals I for CS12 w/ Dustin Myers,Redux Fundamentals II for CS12 w/ Dustin Myers,Redux Fundamentals I for FSW13 w/ Dustin Myers,Redux Fundamentals II for FSW13 w/ Dustin Myers,Redux Fundamentals for FSW14 w/ Dustin Myers,Redux Fundamentals I for FSW15 w/Ashwin Sundarajan,Redux Fundamentals I for WEB16 w/ Dustin Myers,Redux Fundamentals for WEBPT3 w/ Dan Frehner,Redux Fundamentals I for WEB17 w/ Dustin Myers (Part 1/2),Redux Fundamentals I for WEB17 w/ Dustin Myers (Part 2/2),Redux Fundamentals I for WEB18 w/ Dustin Myers,Redux Fundamentals I for Web 19 w/ Dustin Myers","BalancedBrackets,LinkedListCycle",Immutability Exercise ,"Redux Todo,Redux Counter - Starter Assignment",Redux,,Full Stack Web Development Core,5,1,5,5,5,4,,12/11/2017 7:07pm,recba2NUdVmgKYyR3
Operating Systems,checked,,"_Note: the Operating-Systems-Two repo is currently unused._

# Rough Schedule
This is a two-day module/project.

Day 1 lecture:
* [20 mins] Objective: describe the major operating systems and their relative strengths
* [20 mins] Objective: clearly describe the boot process
* [40 mins] Guided demo (see below)
* [remainder] Intro to the Project (see below)

Afternoon work:
* Project

Day 2 lecture:
* [20 mins] Objective: describe the role and function of the kernel, processes, and threads
* [20 mins] Objective: clearly describe the role of memory management, drivers, and filesystems
* [remainder] Q&A/Solutions on the Project
* Afternoon work for students: Project

# Guided Demo Notes
The Guided Demo for day one is a thinking exercise (no code) to have the students come up with a file system ""spec"".

Try to get the students to do this by only asking them questions, if possible.

You can open an editor on your shared screen and diagram and document the filesystem as they go.

The file system organizes things on disk. Part of it is directory information (e.g. file name, size, location information). Another part of it is keeping track of which blocks are allocated.

Start the students off with the following givens:
* You have a disk that is addressable by block (AKA sector) number, blocks 0-9999999.
* Each block holds 1024 bytes of data.
* The filesystem does _not_ need to support subdirectories.
* You should be able to store multiple files of various sizes.

## Known solutions

### Commodore64-ish

* For keeping track of free blocks, some blocks hold a map of boolean values. If a value in the map is false for a particular block, that means the block is available. Think of it as a big array of `bool`s, packed in as individual bits.
* The directory is kept in a well-known location on disk somewhere. It is a list of entries that hold name and size information, as well as the number of the first block in the file data.
* For tracking where file data is, the filesystem uses a linked list structure. The first (or last) bytes of the block are reserved as a pointer to the next block. A pointer value of `0` indicates the last block of the file. The exact size of the file can be determined from the directory entry.

### Unix-ish, inodes

* A list of free blocks is kept in a well-known location on disk. When a new block is allocated, it is removed from the free list.
* The directory is kept in a well-known location on disk. It holds _inodes_, where there is 1 inode per file. The inode holds the name, size, etc. as well as a handful of pointers to the first blocks of the file.
* If those few pointers are not enough to refer to all the blocks the file needs, the inode includes a _single indirect_ pointer to a block. This block is a list of additional blocks in the file.
* If the direct and indirect block lists are not enough, the inode also has a _double indirect_ pointer to a block. This block is a list of pointers to single indirect blocks, which are all pointers to blocks.
* [Image of the above and more info](https://en.wikipedia.org/wiki/Inode_pointer_structure)

# Project Notes
This is the implementation of a web server in C.

All the hard stuff is written in the skeleton on the `master` branch. Networking is included. The main loop is included.

The work the students have to do is:
* Understand how HTTP works, what requests and responses look like.
* Be able to do a lot of string manipulation in C.
   * They have to parse request headers.
   * They have to build responses.
* Be able to add code to an existing codebase.

Introduce this project by describing it as (one of the) first opportunities they have to work on something more like a real world programming task in C.  They will be working in a small part of a larger project.  

They do not need to understand the specific details of the entire project any more than you would need to know the entire layout of a city to follow directions from one address to another.  

Instead, help them get started by walking through the process of orienting themselves to the program and finding their bearings.  To do this, we need to find out where we are and what our first task is to start us in the right direction:
1.  Read over the instructions in detail (this should be done before class)
2.  Skim over the program to get an idea of what it entails.  Don't worry to much about the complicated and esoteric functions at the top.  Just acknowledge that they are complicated and esoteric, then move on.
3.  Recognize the `handle_http_request()` function from the `Main Goals` of the readme.  This is where we start!
4.  Acknowledge that this is where we start, and move on to review the rest of the program.  
5.  Compile!  Then make the minor changes necessary to successfully compile the program.  
6.  We know that we're supposed to do something with `handle_http_request()`.  Write a comment in that function, then compile and 
6.  We are ready to start.  Refer back to the `Main Goals`.  Our first task is the simplest thing we can parse out of here.  In this case, it is to 

[See the README for more info](https://github.com/LambdaSchool/C-Web-Server).","""clearly describe the role of memory management, drivers, and filesystems"",""describe the role and function of the kernel, processes, and threads"",clearly describe the boot process,describe the major operating systems and their relative strengths",4,Operating Systems introduction,,,Design a Filesystem,A Simple Web Server in C,,,,4,1,4,4,0,3,,12/14/2017 10:43pm,recHPT5QiPS6NOCgz
Processes and System Calls,checked,"By now, you've heard us throwing around the term 'process' a number of times, but we haven't gone and dug into what a process really is. Processes are one of the most fundamental abstractions when it comes to understanding how computers operate.

The question we'll be trying to answer this sprint is, what happens under the hood of your machine when you execute an arbitrary program.","https://github.com/LambdaSchool/Lesson-Plans/blob/master/Processes.md


# Day 1

Day before (Tuesday) announcement:


---------

@channel Heya folks! For tomorrow, we have couple more pre-class videos, this time on processes and system calls. They can be found in TK here: 
https://learn.lambdaschool.com/cs/module/rec7ymmv7ukdlk770

This will continue our C exploration by looking at how C can talk to the operating system and do work at that level.

For today, *keep working on the intro repo*. But tomorrow we'll switch to the processes repo here:

https://github.com/LambdaSchool/Processes

Happy hacking!

---------

Announcement (add on your Zoom link)

---------

@channel Good morning!

On deck for today is some Applied C at the OS level. Agenda:

* Why we're covering this
* General C discussion
* Operating System basics
* Processes


Repo for the next two days: https://github.com/LambdaSchool/Processes
If you get up through `ex3` today you're doing OK. Through `ex4` is even better.

---------

Allow the students to add to Discussion topics.

```
/polly ""How confident are we C in general except for pointers?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on arrays?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on strings?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on pointers?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on malloc/free?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""Discussion topics (add your own)"" ""Pointers (be specific in comments)"" ""Structs""
```
Project: Processes repo up through ex3 or ex4. 

# Day 2


Message for night before:

---------

@channel No pre-class vids for tomorrow; just keep crunching away at the assignment.

Happy hacking!

---------

Message for class:

----------

@channel Good morning!

On deck for today is some more Applied C at the OS level. Agenda:

* Questions
* Writing a shell (like bash!) from scratch

Repo is still: https://github.com/LambdaSchool/Processes

Wrap that up today.

----------

```
/polly ""How confident are we C in general except for pointers?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""How confident are we on pointers?"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""

/polly ""Discussion topics (add your own)"" ""Pointers (be specific in comments)"" ""Structs""
```
Project: Processes repo, the rest of it.","describe what system calls are and why they are useful,describe how computers execute programs using the process abstraction",2,,"Intro to C: Processes and System Calls for CS11 w/Beej Jorgensen,""Intro to C: Struct, Fork, and Pipe for CS11 w/Beej Jorgensen"",""Intro to C (3) - Structs, Malloc, Fork"",""Intro to C (4) - Pointers, File I/O, Exec for CS13 with Beej Jorgensen"",Processes Day One for WEB15 w/Jonathan Brunt,Processes Day Two for WEB15 w/Jonathan Brunt",,Intro to C (Processes and Syscalls),Processes and System Calls,Intro to C,Active,Computer Science,2,1,2,2,2,4,,12/15/2017 4:41pm,rec7YmMV7ukDLK770
Client Side Routing,,,,,0,,"SPA Routing Guided Demo (CS4),Q&A: SPA Routing (CS4),SPA Routing Solution (CS4)",,,,,,,0,0,0,0,0,0,,12/14/2017 10:43pm,recZSDlo9mLTUrCvu
Model-View-Controller,checked,"Model-view-controller (MVC) is a software design pattern commonly employed by web application frameworks. The model component holds the data (and abstracts querying the underlying database), the view is the presentation layer and displays data to a user, and the controller is the logic that passes information between the other two layers.

Django is a ""batteries included"" framework (as opposed to a minimalist framework like Express.js), which means it includes packages for each of these purposes (though sometimes with slightly different names). In this module we will go over both MVC as a design pattern and Django as one implementation of that design pattern, and see how we can use it to build our first full Django web application.",,effectively use Django's MVC-equivalent pattern,1,,,,,,Python/Django II/Career Development,,Computer Science Annex,1,0,0,0,0,0,,2/7/2018 4:51pm,recVsikSMFoQ25WZd
REST,,"The back-end of a web application is responsible for exposing an API that allows the front-end to create, read, update, and delete data (CRUD).

Representational State Transfer (REST) has been the dominant approach for API design, and is still a friendly and useful technique for applications that mostly work with single entities. REST is more of a style than a strict standard, but is most characterized by having stateless operations (a request does not depend or even know about preceding requests) and extending standard HTTP methods with a noun-verb paradigm to support CRUD operations on database entities.","This is day 6 (second Monday) of the Django material, and basically after talking/Q&A a bit based on the pre-watch video, the morning lecture is live coding a REST API using the Django REST Framework, and afternoon is them reproducing/stretching as possible.",,0,,,,,,Python/Django II/Career Development,,Computer Science Annex,0,0,0,0,0,0,,2/7/2018 4:52pm,rec7YHjLuXabdlhof
Scheduling,,"Now that we've talked a bit about processes and you know that every program running on your computer is a process that
the operating system kernel much allocate CPU time for, it's time to talk about how the OS kernel performs this task.

In essence, there is a special program the kernel executes called the scheduler, whose sole job is to decide, out of 
all of the processes vying for execution time from the CPU, which one actually gets to go next? There are many algorithms
that can be used to answer this question. Some examples include:

 * First In, First Out: Super simple and easy to implement, but what happens when a really long process comes along
 right before a bunch of short jobs. At that point, our scheduler algorithm is extremely inefficient.

 * Shortest Job First: Also very simple and easy to implement, but it's unfair to processes that may require a lot of
 processing time, but are very important.

  * Round Robin: Definitely the most fair scheduling algorithm, since every process will get attention from the CPU and
  at least make some progress on running to completion, but then performance may be affected since we're spreading CPU
  time between many different vying processes all at once. 

So it turns out, when it comes to deciding on a good scheduling algorithm, there are a number of criteria that need to 
be accounted for and balanced. We want our scheduler to minimize _turnaround time_, which is defined as the amount of 
time from when a process completed execution and when that process first arrived in the queue of processes. This is 
important because we don't want unfinished processes sitting around for longer than they need to.

We also want to minimize _response time_, which is defined as the amount of time from when a process gets scheduled
and when it first arrived in the scheduler's queue. This is also important because we want processes to get scheduled
as soon as possible. Notice though how a scheduling algorithm like Shortest Job First minimizes turnaround time at the 
direct cost of response time, since shortest jobs are prioritized above longer processes, meaning the longer processes
don't get completed (or even scheduled) for a long time. 

Likewise, with a Round Robin scheduling algorithm, better response time is achieved at the direct cost of turnaround 
time, since processes get scheduled and start executing very quickly, but processes take more time overall to complete.

There are other constraints as well placed upon the operating system scheduler that I haven't even mentioned. One of the 
big ones is that the operating system doesn't actually know how long a process needs to run for. That's _impossible_ to 
know. So it turns out that an algorithm like Shortest Job First isn't even actually possible! On top of that, processes
could go into a blocking state, like if it needs to perform some I/O operation. In that case, the scheduler will want 
to be efficient and yield the CPU to another process waiting in line, since the blocking process isn't going to make
progress towards completing until its I/O operation is complete. 

So the fundamental question underlying the concept of scheduling is: what scheduling algorithm will allow us to 
minimize both turnaround time and response time without actually knowing how long each process needs to run for, 
plus account for the fact that processes may enter a blocking state? There are, of course, other factors to 
consider for OS developers who write real, everyday-use scheduling algorithms, but these constraints are enough 
for a relatively simple implementation.

### Multi-level Feedback Queue

One of the most well-known approaches to tackling the problem of scheduling is the Multi-level Feedback Queue, or MLFQ. 
The MLFQ attempts to address the constraints we just mentioned by ""learning"" the characteristics of each process as the 
system runs, so that it can make better scheduling decisions.

The architecture of the MLFQ comprises of a number of distinct queues, each assigned a different priority level. At any 
given time, a process that is ready to run is placed on a single queue. The MLFQ uses priority levels to decide which 
process should run at a given time. Of course, more than one process may be in a given queue, and thus have the same 
priority, in which case the MLFQ runs these processes in round-robin fashion. 

The key to the MLFQ lies in how the scheduler sets priorities. Rather than giving a fixed priority to each process, the 
MLFQ varies the priority of each process based upon its observed behavior. For example, if a process repeatedly relinquishes 
the CPU because it's waiting on input, the MLFQ will keep its priority high, since this process may be interactive, and 
necessitates high response time. If a process uses the CPU intensively for long periods of time, the MLFQ will reduce its 
priority level. In this way, the MLFQ tries to learn about processes as they run, and thus use the history of the process 
to predict its future behavior.",Link to lecture notes: https://github.com/LambdaSchool/Lesson-Plans/blob/master/Scheduling.md,clearly describe the problem that an OS scheduler attempts to solve and how the scheduler algorithm solves it,1,,,,,Multi-Level Feedback Queue,,,,1,0,0,1,0,0,,12/20/2017 2:55pm,recfiYtQDLFXGOBFA
HTTP / AJAX I ,,"In this module we'll learn how to perform asynchronous requests in order to retrieve, create, modify, or remove information that exist on external servers.",,"make GET requests to an external API using axios,explain what HTTP is and the methods used to perform CRUD operations,""explain what AJAX stands for, it's benefits and how to make AJAX requests from a React Application"",describe promises and demonstrate the use of the `.then` and `.catch` methods",4,,"Async JavaScript for CSPT1 w/ Daniel Frehner,Axios and CRUD CS9  w/ Ryan Hamblin,Promises & HTTP/AJAX for CS10 w/ Dan Frehner,HTTP/AJAX I for CS11 w/ Ryan Hamblin,HTTP/AJAX II for CS11 w/ Ryan Hamblin,HTTP / AJAX I for CS12 w/ Dustin Myers,HTTP/AJAX I for FSW13 w/ Dustin Myers,HTTP/AJAX I for FSW15 w/ Dustin Myers,HTTP / AJAX I for WEB16 w/ Dustin Myers,HTTP / AJAX I for WEB17 w/ Dustin Myers,HTTP/AJAX I for webpt4 w/Dan Frehner,HTTP / AJAX I for WEB18 w/ Dustin Myers,HTTP / AJAX I for Web 19 w/ Dustin Myers","LargestContiguousSum,QueueStack",,"HTTP Movies - Stretch Assignment,HTTP-AJAX",Single Page Applications,,Full Stack Web Development Core,4,1,4,4,4,4,,12/22/2017 4:21pm,rec6aIgqChA2V4tDr
React Router I,,"Due to the insane popularity of JavaScript frameworks and what we call Single Page Applications (SPAs) we rely on our modern web browsers today for a lot more than we used to in the past. One of the common trends with SPAs to see today is the idea of `Client Side Routing` or the browser taking care of _""URL"" history_","Idea for a Deeper Dive/ extension of the assignment: Talk about passing props into components using the render prop on the Route component.

A Basic navigation system: https://codesandbox.io/s/qz762l7jy6","use the `Link` component to navigate between routes,create dynamic routes using URL parameters and the `match` object,describe the `Route` component and set up routes within a React Application,add React Router to an application and set up basic routing,explain the difference between client-side routing and sever-side routing",5,,"React Router for CS9 w/ Ryan Hamblin,React Router Demo for CS9 w/ Ryan Hamblin,React Router for CS10 w/ Ryan Hamblin,React Router Day 2 for CS10 w/ Ryan Hamblin,React Router I for CS11 w/ Ryan Hamblin,React Router I for CS12 w/ Dustin Myers,React Router 1 for FSW13 w/ Dustin Myers,React Router I for FSW14 w/ Dustin Myers,React Router I for FSW15 w/ Dustin Myers,React Router 1 for WEBPT3 w/ Dan Frehner,React Router I for WEB17 w/ Dustin Myers,React Router I for WEB18 w/ Dustin Myers,React Router I for Web 19 w/ Dustin Myers","LargestDifferenceInArray,ReverseLinkedList",,"React-Router-Apple-Nav STRETCH ASSIGNMENT,React-Router-Movies,React Router Basic Nav",Single Page Applications,,Full Stack Web Development Core,5,1,5,5,5,4,,12/22/2017 4:20pm,rec2TJ1vrdfcnx2EG
How to Write and Analyze,checked,"Algorithmic problems are everywhere, in literally every domain of computer science / software development. Students need to get comfortable solving these sorts of problems, both for technical interviews, as well as for handling the day-to-day workload that is expected of software developers. 

In this sprint, students are going to be learning about how to approach and tackle algorithmic problems. This sprint will introduce students to a few useful paradigms that can be used to approach and improve algorithm problems. 

- Second example of generating a first-pass solution to a problem, then improving upon original solution
  - [""Only Once"" Array Problem - First-Pass Solution](https://youtu.be/9_3-PuzH26A)
  - [""Only Once"" Array Problem - Improved Solution](https://youtu.be/Fy8b5YAYzw4)","Solution repo for project contains more in-depth notes in the README about the solutions.


https://github.com/LambdaSchool/Algorithms-Solution

See the guided demo repo for (some) of the sample code below.

https://github.com/LambdaSchool/Algorithms-Guided-Demo


Friday slack announcement
__________
@channel Hey all! My name's Beej--I'm one of the instructors here at LS and I'm stoked to be working with you this coming week.

We're about to start Algorithms! :wooooo: 

This is one of the most challenging weeks at Lambda, and it comes out swinging. It's incredibly difficult material for virtually everyone, myself included. If the answers don't immediately spring out at you, welcome to the club. :slightly_smiling_face: 

But no one goes to the gym to have an easy time of things. We're going to work hard and reap those benefits. After this week, normal everyday problems you'll get at work will seem relatively trivial.

The most important thing for these first two days is to _practice_ solving these hard problems. We're less concerned that you get the answer than that you _try super hard_ to get the answer. It's 10 points for copying the answer online, 1000000 points for working hard on the problem, and 1 additional bonus point for getting the answer.

It's the process of attacking the problem that gets you the learning gain. You'll get out what you put in.

We have some pre-class vids to watch on TK to get started with:

* _Runtime Complexity_
* _Recursion_
* _A First Pass Solution_

Give 'em a watch before class so we can hit the ground running.

https://learn.lambdaschool.com/cs/module/recrcuzqmvi6lvxhd

If you want to get a head start on the week's material, you can find the repo here: https://github.com/LambdaSchool/Algorithms

Have a good weekend!
__________

## Day 1

__________
@channel It's day 1 of Algorithms! Let's get started!

* Why are we discussing this?
* Some simple algorithms
* Algorithmic analysis and Big-O
__________

Talk more about recursion in depth. Use recursion to solve the recursive string permutations problem. Also walk students through the problem of implementing a stack class that can always access the largest element in the stack in constant time. Use this problem as an opportunity to talk about how to improve the runtime of some functionality from O(n) to O(1). 
    1. Write a recursive contains function that receives an array and a target and returns True if the target is in the array and False otherwise.

    2. Implement a stack class with all the usual stack functionality, and with the added functionality that it can access the largest element in the stack in constant time. 


___________

@channel More vids for your viewing pleasure!

Back on TK for algorithms, Sean chats about improving a first-pass solution. It's additional coverage on dynamic programming and other techniques.

https://learn.lambdaschool.com/cs/module/recrcuzqmvi6lvxhd

And then on the data structures side, the first two vids, _Linked Lists_ and _Queues_ (~25 mins total) are a good start after you wrap your Algs stuff.

https://learn.lambdaschool.com/cs/module/recuhkmtdyvwmexmz

Remember: when you're working out the algorithms problems, look on them as sources of curiosity rather than frustration. They way problems behave when you attack them is something to be studied and explored here in the safety of Lambda.
___________


## Day 2

```
/polly ""I attacked the following problems (check all that apply)"" ""Stocks"" ""Recipes"" ""Stairs"" ""RPS"" ""Change"" ""Knapsack""

/polly ""I solved the following problems (check all that apply)"" ""Stocks"" ""Recipes"" ""Stairs"" ""RPS"" ""Change"" ""Knapsack""

/polly ""Confidence on Big-O"" ""0%"" ""25%"" ""50%"" ""75%"" ""100%""
```

Talk about some different algorithmic problem-solving approaches such as the greedy approach. Note that the term ""greedy approach"" is different from the greedy heuristic that might be used as a strategy in order to get a ""good enough"" answer to the knapsack problem. Use it to solve the problem of finding the highest product of 3 integers in an array in linear time. Use these problems as an opportunity to look at how to improve the runtime of an initial first-pass algorithm.
    1. Given an array of integers, find the highest product of any three integers in the array in linear time.

    2. Given an array of integers, find the cumulative product of every integer except the one at the current index.
","take an existing first-pass solution to a problem and improve upon it,approach a novel problem and come up with a workable first-pass solution.",2,Algorithms Overview,"Algorithms Review and Lecture for CS11 w/Sean ,Algorithms for CS13 w/ Beej Jorgensen,Algorithms for CSPT1 w/Elissa Thomas,Algorithms Intro Meeting for CS12 w/Sean Checn,Algorithms Lecture 2 for CS12 w/Sean Chen",,,Algorithms,Algorithms,Active,"Computer Science, DS - Computer Science",2,1,2,2,2,4,,1/2/2018 4:23pm,recrCuZQMVI6LvxhD
Introduction to Python I,checked,"Learning new languages is not an uncommon task in the world of software development, and Python is a popular language in the field. This module will introduce students to Python basics, and use those to implement a simple project.","Note: Students from iOS apparently only work in XCode, which provides them with IDE features, so many were not comfortable with just working in a text editor and running their code from the terminal. 

### Day 1  

#### Hour 1  
* Explain the goal: learning to learn new languages, and that you'll need to do a lot of this in the future.  
* Keep in mind the parallels between this and what they know.  
* Why we learn Python  
* It's close to JS  
* Easy to learn  
* Popular  
* Useful  
* Drop links 
* [Repo](https://github.com/LambdaSchool/Intro-Python)  
* [Python main site](https://www.python.org/) 
* [Python official docs](https://docs.python.org/3/) 
* [Python-to-JS cheatsheet](https://github.com/LambdaSchool/CS-Wiki/wiki/Javascript-Python-cheatsheet) 
* [Python tutorials with interactive examples](https://www.learnpython.org/en/)
* [XKCD: Python (2007)](https://xkcd.com/353/)
* [XKCD: Python Environment (2018)](https://xkcd.com/1987/)
* Talk about installation, simple install questions  

#### Hour 2  
* Demo some coding, hello world, etc.  
* Ask them to tell you where to get more information.  
* How to save a file (`.py` extension)  
* How to run a file with `python foo.py`  
* List comprehension practice, time permitting

#### Project  
* Get `pipenv` and `python3` installed and working (ideally this should be done already by most of the students)
* Work on the exercises in the repo

### Day 2  

#### Hour 1 

Go over solutions to the first half of the Python exercises from the day before. Ask students to share what they have and go over it. This might run over an hour.

#### Hour 2  

Go over `rock_paper_scissors.py` or `guessing_game.py` in order to showcase:
* Input loop
* Processing arguments
These concepts will help the students when it comes time to implement the adventure game.

Go over the assignment for `adv.py`.

Goals:
* Get used to reading other people's code
* Get used to modifying and interfacing with code you didn't write
* Practice reading other code and specs
* Have fun!

If you have more time, implement another similar game. Suggestion:

A random 2D grid with some random stars strewn about. Have the player position marked on the grid with some spaceship shape. Allow the player to move by typing a keypad-direction number, 1-9. Don't allow moving into stars.

```
. . . . . . . . . . . . . . .
. . . . . * . . . . . * . . .
. . . . . . . . . . . . . . .
. * . . . . . . * . . . . . .
. . . . . . . . . . Y . . . .
. . . . . . * . . . . . . . .
. . . . . . . . * . . . . . .
```

#### Project  
* Work on `adv.py`","apply basic Python knowledge to a more complex project,break down and solve problems using a consistent strategy,write code that utilizes Python Collections,write code that demonstrates Python basics",4,,"Introduction to Python for CS10 w/ Beej Jorgensen,Introduction to Python Day 2 for CS10 w/ Beej Jorgensen,Introduction to Python for CS11 w/Brady Fukumoto,Intro to Python/OOP II for CS14 w/Sean Chen",,,Intro to Python,Intro to Python/OOP,,"Computer Science, DS - Computer Science",4,1,4,4,4,4,,6/29/2018 6:59pm,recay2erzDlYUPSeO
Graphs I,checked,"Day 1: Overview and introduction to graphs, graph representations, BFS, DFS

* Project - Implement BFS and DFS, returning a path from the starting node to the end node

Day 2: Randomness, generating random graphs

* Project - Populate a random social network","Minutes in this guide are estimates only.  Adapt to the class as needed.

#####################DAY 1:########################

Objectives Covered
* describe what graphs are, describe their components...

Other goals
* get comfortable drawing with bokeh
* this day provides a short breather after the difficult architecture and C weeks before it, so try to have fun!

Precourse Video Topics
The precourse video for this day is a broad overview of the topic of graphs, with descriptions of the content we will be covering below.  At the end, students were asked to: 

Draw examples of the following:

Undirected graph of 4 verts.
Directed graph of 5 verts.
Cyclic directed graph of 6 verts.
DAG of 7 verts.

Be sure to cover the answers during your demonstration.

(Min 0 - 15)
Introduce the topic, poll viewership of the pre-class video and remind of the importance of watching these. 

Set the stage!  Share an overview of what the agenda for the day and week are going to be.

Lead a broad discussion of the content and segue into an overview of what graphs are and what they are used for.  Ask the class to give examples:
* Connecting computers over the internet
* Google maps and directions
* Networks of people
* Trade relationships

(Min 15-20)
Introduce the problem we are going to solve and show the solution.  Open a browser page with the final version of the graphs project running and show it to the students, and explain what is happening. 

(Min 20 - 35)
Open a whiteboard and draw a graph.  Change and modify the graph to demonstrate:
* Weighted vs. Unweighted
* Directed vs. Undirected
* Cyclic vs. Acyclic

Directed Acyclic Graphs are what Git uses for commits

During this portion, provide the answers to the pre-course video exercises: 

Draw examples of the following:

Undirected graph of 4 verts.
Directed graph of 5 verts.
Cyclic directed graph of 6 verts.
DAG of 7 verts.

(Min 40 - 50)
Draw a new, or refer to an existing, simple graph on the whiteboard and discuss the different ways that could be used to organize this information. 

## Using an Adjacency Matrix

```
   A B C D
 +--------
A | 0 0 1 1
B | 0 0 1 0
C | 1 0 0 1
D | 1 0 1 0
```

In the above example B connects to C, but C does not connect back to B.

## Using an Adjacency List

Another way is to store a list of verts that a particular vert connects
to.

```
A -> [ C D ]
B -> [ C ]
C -> [ A D ]
D -> [ A C ]
```

This is the recommended approach for our graph projects.

Discuss the relative strengths and weaknesses.

(Min 50 - 60)
Ask for questions and answer them.

Let the class know that after the break we will be switching gears and learning how to draw with Canvas.

Pause the video, shut down screen share, audio, and video, and take a break.

(Min 60-75)

Ask the class to remind you what it is you are supposed to be doing.  As always, this is a prompt to regularly check the readme/specs/project docs to make sure that you are on track, understand the requirements or task, and are budgeting your time properly.

Review the steps listed in the readme, gather that we are supposed to be using canvas to draw the graph.  This is an excellent opportunity to work with the class to practice reviewing a document and determining where to start implementation - which is not always the item at the top of the page!  In this case, it will be much easier to tell if our graph classes are working properly if we can draw them on the screen.  As such, suggest that we should skip the first task and implement the second - drawing in canvas. 

Open up the project and review the code.  Ask what it does and guide the class to prompt you to test it and try to get it running.  Fix any issues encountered so that it runs (adding variables for canvas size).

Ask the class if it is working or not, and how we can tell.  As always, the answer is testing.  Search the code for references to canvas, find where the background is drawn, and experiment with changing the color.

(Min 75-105)
Ask the class how canvas works and insist that you have no idea.  Guide them to prompt you to use google to research how it works and test out different functions contained within it. 

Demonstrate drawing lines, drawing circles, filling them, and drawing text.  Explore fill and stroke styles and get the students to guide you to how to change them.

Keep adding to your work and work towards some sort of artistic endeavor (it doesn't have to be pretty :) )

Draw particular attention to the fact that this works like a paintbrush and each new step will overwrite any pixels that were previously changed. 

Discuss the pitfalls associated with making sure drawing shapes is bracketed with beginPath() and stroke() and demonstrate the use of the moveTo() function.  Implement this incorrectly at first and lead a troubleshooting exercise to figure out why it doesn't draw what we want. 

(Min 105-110)

Answer any questions.

(Min 110 - 120)

What should the class do with project time?

Send the class off with the day's project - to grow comfortable with canvas by creating several modern art pieces using canvas.  Demonstrate how loops can be used to create gradients, interesting spirograph type shapes, etc.

Remind the class to watch the pre-class video before tomorrow morning. 


#####################DAY 2:########################

Objectives Covered
* describe what breadth-first (BFS) is and its uses...

Other goals
* practice developing your own specs/pseudocode from a problem

Pre-class video
The pre-class video covers how do do a breadth-first search on a simple graph.  This is the first of many times this process will be covered during this lesson.

(Min 0 - 10)
Introduce the topic, poll viewership of the pre-class video and remind of the importance of watching these.  Discuss the demonstration of the breadth-first search and do a quick and very high level review of the process.  Ask the class to keep this in mind when thinking about the day's task.

Set the stage!  Share an overview of what the agenda for the day and week are going to be.

Today we are going to be figuring out what we need in classes that represent the different parts of the graph, how they relate, and how to draw them on the screen using canvas. 

Ask the class where to start.  If need be, ask leading questions to get to the answer for where to go when unsure of what to do - the readme/docs/specs, etc.  Review the six parts of the project and discuss the progress that has been made so far:  That we skipped the first step and went to the second.

Now that we have a way to see what our work does, it is time to implement part 1 of the project.

(Min 10 - 15)

After figuring out what we are going to work on, we next need to figure out where our work should go.  Ask the class where we should write our code and lead them to the answer that we don't know yet, so we should review the existing code base.

Guide an overview of the code, focusing on graph.js, as we covered app.js in Day 1.  Review all of the functions and discuss what they might do.  Look for clues to guide us in the other functions, in both comments that our colleague who wrote the other parts left to help us, and in the functionality and structure of other functions or methods that might interact with the same code or data as we are.  In this case, randomize() and dump() are particularly helpful.

(Min 15 - 30)

Using clues gleaned from the comments and codes, we can determine that our edge function needs a constructor with parameters for the destination and weight of the edge.  Discuss why the edge doesn't need an origin and lead towards the reason that because it is owned by a vertex, that information is already stored.  Also discuss the advantages of storing a reference to the entire destination vertex, instead of just the position of that vertex.

export class Edge {
 constructor(destination, weight=1) {
   this.destination = destination;
   this.weight = weight;
 }
}

Next, implement the Vertex class.  We know from the docs and from other classes that each vertex will need a variable in which to store it's name, called 'value', and the list of vertexes that originate from it.  Although not done in the solution repo, we can go ahead and add an object called pos with x and y variables so that we remember it needs to be there.  By initializing it with a default of -1, -1, we can have a clue to follow if something later goes wrong with the positioning code.

export class Vertex {
 constructor(value='vertex', pos = { x: -1, y: -1 }) {
   this.value = value;
   this.edges = [];
   this.pos = pos;
 }
}

Finally, the graph class has an array of vertexes, so we don't need to do any implementation there.

(Min 30 - 45)

Now we need to find a way to make sure that our edge and vertex classes are built correctly.  How do we do this?

Testing.  But how can we test?  Take a look at the randomize function and discuss its suitability for testing. 

Pros:
* It is already written and committed to the repo.  Although we should never assume other code works, we can say that it will likely produce a valid graph. 
* If we use this for testing, when we get it working, we'll be done implementing it.

Cons:
*. This is a large and complicated function that we might not entirely understand.  It would take time to gain a complete understanding of it so that we know how it works and what to expect.
*. The function creates random data.  This is usually bad for testing, because we can't be sure if a result is because of a mistake in our code, or a random occurrence that appears to be a bug, but is actually an edge case of correct behavior. 

In this case, it's probably best to make some test data so we know exactly what to expect.  But how we do that?  By making a debug function to generate test data.

By asking guided questions, get the class to help you build a very simple graph using our classes:

debugCreateTestData(){
 let vertex1 = new Vertex (""test1"", {x: 50, y: 50);
 let vertex2 = new vertex (""test2"", {x: 50, y: 50);

 let edge1 = new Edge(vertex2);
 vertex1.push(edge1);

vertexes.push(vertex1, vertex2);
}

Now that we have it, what next?  We test!  But where should we call it?  Guide the class in reviewing the code again and settle on the place in app.js where we will eventually call randomize(). 

Now we need to confirm that this is working.  A good test would be to verify that graph.vertexes is being created and populated with our test data.  The first place to test is by doing a console.log(""List of Vertexes in App Constructor"", this.state.graph.vertexes) right under where we called our debugCreateTestData() function.

If this works, it's a good start, but it isn't where we need it, so the next place is to test in the draw function.  Use questions to guide the class to the function where we are drawing in the canvas and try writing to console again.  Discover that this.state... doesn't work here and refresh on how props work in react.js.

(Min 45-60)
Ask the class what to do next and refer back to the readme briefly to get a reminder that we need to draw the graph using canvas.  A good place to start would be the first circle.  We know exactly where it is supposed to be, and what its label is.

Guide the class iteratively through drawing the circle, filling it, and printing the label.  This is a good chance to talk about magic numbers and create a constant for radius rather than putting in an arbitrary number.

(Min 60-75)
After successfully drawing one circle, the next step is to draw all of them.  Guide the class in wrapping a for...of loop around the code and modify it to support iterating through the entire array of vertexes and drawing them.  This is a good opportunity to discuss refactoring code and renaming variables as needed to make sense after the changes. 

(Min 75-90)
[[Depending on cohort and pacing, it may be better to have this be the task for project time.  I did that for CS7 and 8 -Brian]]

Use the same process as for the circle to guide the class to draw the lines for the edges.  Allow mistakes in drawing order to be made and guide corrections of them.

We may end up with two iterations through the graph.vertexes array.  If this happens, fix it if there is time.  If the lesson is running behind, use this as a teaching example that code can always be made better, but our first task is to get it completely functional.  Leave a ""TODO""  comment to optimize it later.

(Min 90 - 95).
At this point, the drawing code appears to be complete and functional, but we can't be sure yet.  More testing is needed to validate our code.  Return to debugCreateTestData().  Add, modify, and remove several vertexes and edges to confirm the drawing code is working as expected.

(Min 95-100)
The great thing about our approach is that we have built our drawing code to draw whatever is in graph.vertexes.  It doesn't matter where the data originates.  This means that we can do a 1 for 1 swap of our debug function and randomize().  Guide the class to discover and implement this revelation.

Min 105-110)

Answer questions.

(Min 110 - 120)

What should the class do with project time?

Review the readme, because whenever we are unsure of what to do next, this is where we look - specs/docs/etc.  This is another opportunity to discuss time management, and picking which part of a project to implement next. 

Phase 4 is a doozie.  There is little information on what we need to do, and a quick google search suggests that this is a complicated topic!  Some of our time should definitely be spent researching and preparing for this.  As such, the project work for tonight should focus on doing a BFS on paper or whiteboard and working out pseudocode and/or a process for how it works. 

Phase 5 looks less difficult.  It would be good to spend some time researching and testing methods to draw vertexes using random colors. 

Phase 6 is pretty straightforward.  Students who remember their react may want to go ahead and implement this now.  If they do, they can help the rest of us figure it out when we do it in class on Thursday.

Remind the class to review the pre-class video on connected components before tomorrow.","""describe what breadth-first search (BFS) is and its uses, and can manually run a sample BFS"",""describe what graphs are, describe their components, what they're useful for, and can draw graphs of different types"",""describe what connected components are on a graph and their uses, and can implement an algorithm for finding connected components"",""describe a depth-first search and its uses, and can manually run a DFS on a graph""",4,,"Graphs and Canvas Q&A for CS5 w/ Brian,Graphs I for CS5 w/ Brian,Introduction to Graphs for CS11 w/Brady Fukumoto,Graphs BFS and DFS for CSS11/Brady Fukumoto,Graphs One for WEB15 w/Jonathan Brunt",,Graphs 1,Graphs,Graphs,,"Computer Science, DS - Computer Science",4,1,4,4,4,4,,1/4/2018 1:26pm,recBMbHtb8AOXq3UL
Graphs II,checked,"Day 3: Maze traversal

* Project - Traverse a large maze

Day 4: Maze traversal continued

* Project - continue working on maze traversal","The project for this Module is a continuation of the project from Graphs I.

Minutes in this guide are estimates only.  Adapt to the class as needed.

#####################DAY 3:########################

Prep
* Use the solution branch to generate a three half-sized versions of the graph and take screenshots.  Have these ready in a white-boarding or drawing tool for the lesson.

Objectives Covered
* describe what connected components are on a graph…

Other goals                                                                                                                                                                                                                                                                                                                                                                                                                 
* practice figuring out a complex and difficult process on paper before turning them into code.

Precourse Video Topics
The precourse video covers connected components. 

(Min 0 - 15)

Check in with the class and poll viewership of the pre-course video. 

Set the stage!  Share an overview of what the agenda for the day and week are going to be.

Today we are going to do a whiteboard exercise and learn how to do a breadth-first search.  During this process, we will document our process and end up with a pseudo-code version of the algorithm.

Review what the task is by taking another look at the readme.  Cover what we’ve done so far, and what our next tasks are.

Ask how the class did with their attempts to do a BFS on paper.  Also find out if anyone was able to implement random colors and/or the reset button.

(Min 15-30)
As you complete the demonstrations in the next few segments

Open up the whiteboard and show the demo for the test.  Ask about connected components and have the class identify the ones present.  Discuss how it is easy for us to see this, but it is a more difficult problem for the computer, because the computer can only look at one thing at a time.  It can’t see the bigger picture like we can.

Pick a starting spot.  Add this step to the process and ask the class to guide you through walking step by step across the graph.  Think about what we need to write down to do so - the places we’ve been, is the first thing, so write that down, and add this to the process.

Next, we need to look at it’s connections.  Since we can only look at them one at a time, we need to figure out which order to go in.  We know from our research that the BFS should start at the origin and expand outward.  Add exploring connections to the process. 

Demonstrate that it doesn’t matter which order we go in, but it is important that you keep track of where you have been so that you don’t get stuck in a loop.  Demonstrate following a few different orders of edges and add “places visited” to the list of things you need to keep track of.
This is a good place to reinforce the concept that this type of search does not find THE best answer to the problem.  It only finds an answer that is A best solution.  There may be many others that are equally good.

(Min 30-60)
Although the order we visit each edge of a particular vertex doesn’t matter, the order in which vertexes are visited does matter.  In a breadth first search, the definition states that they should be visited in the order that they are discovered.

Ask what kind of programming structure is used to process items in a first-in-first-out basis and find the answer of a queue.  Add a queue to the paper structure and demonstrate it in operation.

Demonstrate that process can be modified to add vertexes to the visited list when they are discovered, rather than when they are actually visited, so that the presence or absence of the vertex in the visited list can be used to determine if it should be added to the queue or not.  

Further demonstrate the search and use this demonstration to further refine the written process.

(Min 60-65)
Break

(Min 65-90)
Further refine the process to

Create a group designation and mark each discovered vertex with that group
Handle situations where the queue is empty
Go to the next unvisited vertex going by order of label
Increment the group number

Finish the run-through of the process on the first graph, further refining it if necessary.

(Min 90-105)

Pull up the second graph.  Ask the class to lead you through a complete run through.  Follow their instructions and only correct if they are off track.  Try to get as many students as possible to participate in giving instructions.

Show that the process can also be modified to track the parent of each vertex.  This gives the shortest path from any vertex, back to the first in the collection.

Further refine the process into pseudo-code if needed.

Min (105-110)

Answer questions.

(Min 110 - 120)

What should the class do with project time?

Refer to the readme for remaining tasks.  Project time today should be used to implement BFS in code.  A few pointers to share:
The stated goal is to color each connected component.  There are two approaches that will work.  
Create a random color for each set and mark the color of each vertex when it is visited.
Create a list of connected components and use the list do the colors at drawing time
The BFS algorithm should find one connected component.  It needs to be called several times to find them all


#####################DAY 3:########################


Objectives Covered
* describe a depth-first search and its uses...

Other goals                                                                                                                                                                                                                                                                                                                                                                                                                 
* Complete the BFS in code.

Precourse Video Topics
The precourse video covers depth first searches. 

(Min 0 - 10)

Check in with the class and poll viewership of the pre-course video. 

Set the stage!  Share an overview of what the agenda for the day and week are going to be.

Today we are going to switch gears for a moment, and start with learning how to do a depth-first search on the whiteboard, and come up with pseudo-code - the same process we did yesterday, but a different approach.

Ask the class to explain a depth first search and how it differs from BFS.  A DFS can be thought of as being the opposite of a BFS.  Rather than moving outward in rings, and dealing with vertexes in the order that they are discovered, we move outward as far as possible, and explore any vertex immediately on discovery.  When we get to a dead end, we retreat until we can move outward again.

Do a quick demonstration of the path that is taken without worrying too much about the process for this pass.

Discuss how the result of a DFS is A minimum spanning tree, showing the smallest connection between the vertexes.  As with BFS, the result can be one of many possible best results, but it will be tied for the best.

(Min 10-40)
Open the third sample graph in the whiteboard.

Repeat the process from yesterday to build a process for a depth first search.  Start with discussing the differences in which vertex is given priority and using a stack vs. a queue.

The process from yesterday can be modified, or a new one created.  The end result should be similar to:

If the stack is empty, add the next unvisited node to the stack and increment the group number and mark it visited and as being in the new group
Move to the node at the top of the stack
If the node has an unvisited connection, mark that connection as visited and add it to the top of the stack and go to step 2
If there are no unvisited connections, remove the node from the top of the stack and go to step 2

Guide the class as needed to stay on time, but try to let them devise the solution.

(Min 40-50)
Let the class know that we are switching back to BFS.  Erase the whiteboard marks from the DFS, and lead the class through a fast repetition of the BFS.

(Min 50-55)
Break

(Min 55-70)
Now, it is time to convert our process and/or pseudocode into actual code.  First, we need to figure out where to do this.

Ask the class how to approach the problem and where to put the code.  We could start a new files, or put it in one of our existing ones.

As always, the answer is to check the docs and existing code.  In this case, the docs aren’t very helpful, though the do include another pseudocode version of BFS.  A re-review of the code gives the answer - our colleague has set up stubs for where this code should go.
We should also think about how we are going to test the large and complicated function we are about to write.  

Ask the class why randomize might not be the best function to test with.  The answer, as before, is that anything that produces random data has a higher risk of obscuring issues with debugging and may give the appearance of a correct result when bugs still remain.  As such, we should switch back to our test data.

Adjust debugCreateTestData() so that it will build a few small sets of connected components.

We also need to figure out where to call BFS.  Lead a discussion with the class and come to the conclusion that for now, it makes sense to call BFS immediately after graph.vertexes is filled by debugCreateTestData().  Add the call.  It needs an argument for the start parameter, so feed it graph.vertexes[0] for now.

(Min 70-105)

Next it would be good to do a simple test to make sure that it is being called and everything is connected the way we think it is.  

A good way to start would be to use the function to change the color of a vertex.  Create a variable for groupColor and initialize it as “red”. 

Ask how we should tell the first vertex to be the groupColor, and have the class prompt you that vertex has a variable for color.  Make start.color = groupColor.

Run it and ask why it hasn’t changed the color of the vertex.  The answer is that we still have the fill color in our drawing code hard-coded to be “white”.  Change this to vertex.color.

The first vertex should now render red.  Now we need to get more of them to be changed to groupColor.  We need to convert the pseudo-code into actual code.  What was our pseudo-code again?

As always, the answer is to look at the docs.  In this case, we’ve actually made the documentation ourselves!  Refer back to the whiteboard where the process is written down.  Copy it, and paste it as comments into bfs().

Ask the class to look at the pseudocode/process.  We already have our variable for group, is there anything else we need?  We need a queue.  What type of data structure makes the most sense to store a list of items in a specified order?  An array.  Create an array for queue.

Next take a look at the overall process.  We know that we need to do some kind of loop involving the queue array,, but we’re going to be adding and removing stuff, and we don’t know at the start how many items we need to deal with.  Ask what kind of loop is best for this - a while loop.  

What is the condition that we should keep going?  If the queue is not empty.  This also means that we need to “prime the pump”  

Add the while loop, and above it add the vertex in start to the array.  

What’s next?  According to the pseudo-code, we need to loop through each edge in the vertex, and add where it points to the queue, and mark it as being visited.  Since we know exactly how many times we need to iterate, we can use a for each loop.  

How do we tell if a vertex has been visited?  We could make a list of the ones that have been visited and check against that, but we can also use the properties within each vertex.  They start with a color of “white”, so we can change the color when we find each one, and use that to both tell if it is undiscovered and change the color for drawing.

Inside the loop, if an edge has a destination that has a color that is not white:
Change the color to groupColor
Add the destination to the end of the queue array (push)

Run and test the code several times.  Fix any bugs, and ask the class to observe what is happening and theorize why.

Whatever connected component the first vertex is in will turn red, but no other components will change.  Why?  Because we haven’t yet done the last part of the pseudocode - if the queue becomes empty, we are done with this set and should move to the next connected component.

How can this be translated to code?  There are several approaches, but a clue was given to us by our colleague in the connected components stub.

We can use the getConnectedComponents() function to call bfs() for each vertex, if that vertex has not yet been visited.  Add a for each loop of the vertexes list and call bfs on each vertex that has not yet had its color changed.

Test and observe that nothing has changed - because we forgot to call the new function.  Ask where this should go, and lead the class to the answer that it should replace where bfs() is called in app.js

We’re almost done, but everything is turning red, and that’s not what we want - we want each connected component to be a different random color.

Ask the class how to generate a random color, then use google and grab a function and add it to graphs.js.  Discuss other potential locations for this type of function.  If there are going to be a lot of similar types of functions in the project, it’s often good to move them to a separate file of helper functions.  But for now, it’s fine to add it above bfs().

Now, all that is needed is to use the random color function to generate groupColor, rather than hardcoding.

Build, run, debug, and test.  Time permitting, change the debug data around to confirm that it still works.

The last step is to swap out debugCreateTestData() with randomize() again.  Test to confirm that it works, and we are done.

Min 105-110)

Answer questions.

(Min 110 - 120)

What should the class do with project time?

Review the readme, because whenever we are unsure of what to do next, this is where we look - specs/docs/etc. 

We have phase 5 and 6 left, except for students who have already completed it earlier.  The remaining project time should be used to complete those phases, then work on the stretch to add weights to the project and implement Djikstra.


",,0,,"Graphs Day 3 - Random Graphs for FSW11 w/Brady Fukumoto,Graphs Day 4 DFS & BFS for FSW11 w/Brady Fukumoto,Graphs Two for WEB15 w/Jonathan Brunt,Graphs Day Three for WEB15 w/Jonathan Brunt,Graphs Four for WEB15 w/Jonathan Brunt",,Maze Traversal,,Graphs,,"Computer Science, DS - Computer Science",0,0,0,0,0,0,,1/4/2018 1:27pm,reck4RVWsg82eiYPZ
Cellular Automata,,,"Send students to the training-kit site for precourse work and vids.

Project is to implement the Game of Life. This will probably take one A-Day afternoon and one B-Day afternoon.

The main repo is here:

ls

There is a `solution` branch that has a complete solution for the assignment.

Guided demo on A-Day: This is found in the guided-demo directory. The `master` branch has a skeletal version of the CCA app that might be a useful start to livecoding. It's a React app. All changes to build out should be filling out the functions in App.js. The `solution` branch has the complete version.

###Important Note###
If you use an iterative building process, beware that if you implement step() for only one direction, the image will immediately stabilize
qwqw3.  It will look like it isn't working, but it's just become static.

There is no Guided demo on B-Day, but it could be used for partial solutions, Q&A, etc.

Sprint challenge solution can be found here:

https://github.com/LambdaSchool/Sprint-Challenge-Solution--Security-CA
","""describe what a cellular automaton is and how they are useful, describe the rules to Conway's Game of Life and how the Game is Turing-complete"",animate a canvas in React with requestAnimationFrame(),describe how HTML canvas and screen buffers work",3,,,,Cellular Automata,Game of Life,,,,3,1,1,3,0,1,,1/4/2018 5:52pm,rec7mRPcxen15AVeR
Preprocessing I,,"Preprocessing is simply a more robust syntax for CSS written in a different language.  That language is then compiled into normal CSS.  

This is the most straightforward explanation of CSS preprocessors:

Syntax (LESS) -> Compiler (JavaScript) -> CSS

Beyond that is just syntax and study of the documentation.  With practice, preprocessing can increase productivity and decrease errors.  Once you learn how to use a preprocessor, you won't want to use CSS without it ever again!","Preprocessing is simply a more robust syntax for CSS written in a different language.  That language is then compiled into normal CSS.  
<br>
This is the most straightforward explanation of CSS preprocessors:
<br>
Syntax -> Compiler -> CSS
<br>
For our module we will be using LESS because it can easily be installed via npm and will stay in line with our React curriculum later.  For what we are teaching, the above diagram looks like:
<br>
LESS -> JavaScript -> CSS
<br>
For this module we will focus on installing LESS, compiling LESS, and introducing basic concepts of LESS.  Those basic concepts are:
<br>
Variables: When designing a layout for any company, having a theme based on variables is a massive time saver for the whole team.
<br>
Nesting: Proper nesting can make CSS beautiful and easy to read and maintain.  Remember that nesting can get out of control and to teach moderation in using it.
<br>
Mixins: Having the ability to call pre set styles in to save the day is used every day by professional software engineers.  Mixins make our code DRY and allow for easy updates across apps.","""implement variables, mixins, nesting, nested at-rules in LESS."",""install Node, Yarn, LESS, and less-watch-compiler on Mac (if needed)"",""install Node, Yarn, LESS, and less-watch-compiler on Windows (if needed)""",3,,"Preprocessors - I for CS11 w/ Josh Knell,Preprocessing I for FSW16 w/ Josh Knell,Preprocessing I for FSW15 w/ Josh Knell,Q&A Session: Preprocessors for FSWPT3 w/ Dan Frehner,Preprocessors I for CSPT2 w/ Daniel Frehner,Pre-Processing I for CS13 w/Josh Knell,Preprocessors - I for CS12 w/ Josh Knell,Preprocessing I for WEBPT4 w/Cameron Pope,Preprocessing I for WEB17 w/ Josh Knell,Preprocessing I for WEB18 w/ Josh Knell,Preprocessing I for Web 19 w/ Josh Knell,Preprocessing I for WEBPT6 w/ Keiran Kozlowski,Preprocessing I for WEB20 w/ Dan Levy,Preprocessing I for WEB21 w/ Dan Levy,Preprocessing I for WEB21 w. Dan Levy",,,Preprocessing I: Digital Resume,Advanced CSS,,Full Stack Web Development Core,3,1,2,2,3,1,,1/9/2018 4:47pm,reculyBhIYkuoBRqh
DOM & Manipulation with Vanilla JS,,,,DOM placeholder,1,,,,,,,,,1,0,0,0,0,0,,1/9/2018 4:47pm,recLojWB8DwWnPmYi
Responsive Design I,,"Responsive design covers topics that range from fixed layouts to fully responsive websites.  Responsive design addresses accessibility challenges and how developers can use flexible units to overcome them.  On top of being accessible, fully responsive websites are a joy to use and push web development forward into the future. ","
**All solution for the week’s projects can be found here:**
https://codepen.io/collection/a5e1a882bd176d62b733f3b9d14a8886/

**Sprint Challenge Solution:** https://codepen.io/lambdaschool/project/editor/98fb6fda80dcef7c46d59b1ec5de1ecf


Suggested instruction flow for Day 1 of RWD:
* What is responsive design / development? 
    * Use a good example like thegoodline.com 
    * Explain that mobile devices are gaining ground and surpassing desktop usage by going to https://www.netmarketshare.com/ and navigating to Devices > Types and showing the desktop and mobile percentages.
* So how do we start getting to a responsive layout?  Viewport links and examples would be super nice.  Using a device emulator to show case how things look without a viewport.  Good examples and non-examples would be great here.  
    * https://developer.mozilla.org/en-US/docs/Glossary/Viewport
* Go from viewport to actual code examples that start with max and min width.  Explain that max is width and down and min is width and up.
    * https://codepen.io/lambdaschool/pen/JLmWPb?editors=1100
* Introduce media queries and explain how they are important.
    * https://developer.mozilla.org/en-US/docs/Web/CSS/@media
* Give code examples of media queries and ask the students to update the 3 boxes based on media queries
    * https://codepen.io/lambdaschool/pen/eMPpZx
* Move into what mobile first and desktop first approaches look like.  Have examples and non-examples ready
    * A good example of mobile first is https://getbootstrap.com/
* Show the project design material and address the mobile navigation.
    * https://github.com/LambdaSchool/Responsive-Web-Design","build responsive layouts using an effective approach.,demonstrate knowledge of media queries by correctly implementing them in a project.,""describe the differences in fixed, fluid, adaptive, and responsive layouts.""",3,,"Responsive Web Design - I for CS11 w/ Josh Knell,Responsive Web Design - II for CS11 w/ Josh Knell,Responsive Web Design for CS12 w/ Josh Knell,Responsive Web Design I for CS13 w/Josh Knell,Responsive Design I for CSPT2 w/ Daniel Frehner,Responsive Design I for FSWPT4 w/Dan Frehner ,Responsive Design I for WEB17 w/ Josh Knell,Responsive Design I for WEB18 w/ Josh Knell,Responsive Design I for WEBPT5 w/Cameron Pope,Responsive Design I for Web 19 w/ Josh Knell,Responsive Design I for WEBPT6 w/ Keiran Kozlowski,Responsive Design for WEB20 w/ Dan Levy,Responsive Design for WebPT7 w/Josh Knell,Responsive Design I for WEB21 w/ Josh Knell",,,Responsive Web Design Project 1,Advanced CSS,,Full Stack Web Development Core,3,1,3,2,3,2,,1/9/2018 4:48pm,recuDrqSGpWcepCMs
User Interface II,,"Basic HTML and CSS are fundamental to any web site or web app on the internet.  Being able to create layouts using CSS is the next progression on your journey to a full stack web developer.  In this module we will cover CSS resets, box model layout, display types, and positioning.  ","Take time to showcase the chrome developer tools.  Inspect elements and showcase the box model in the elements panel.  This is paramount to future success of the students.

Usual order concepts are taught:

* Quick overview of yesterday's fundamentals
* Introduction to chrome dev tools
* Box model: content, padding, border, and margin
* box-sizing: border-box.  This is a tough concept, be sure to showcase how padding adds to the total width and expands elements where box-sizing pushes in from the border.
* Shorthand properties of box model.  Top Right Bottom Left === ""TRBL.""  I will often say ""You will be in TRBL if you forget the shorthand order!""
* Display types: none, block, inline, inline-block, brief mention of flexbox for tomorrow but don't cover it today.
* Positioning: static, relative, absolute, fixed
* HUGE concept with positioning absolute or fixed is the parent must have relative assigned or it will try to match the window's position.
* z-index explained in combination with position fixed/absolute
","implement a CSS reset and understand why it’s important for cross browser development,use CSS display properties to build user interface,identify and use all properties in the box model",3,,"User Interface II for CS12 w/ Josh Knell,User Interface II for CS13 w/Josh Knell,User Interface II for CSPT2 w/Daniel Frehner,User Interface II for FSW14 w/ Josh Knell,User Interface II for FSWPT3 w/ Dan Frehner ,User Interface II for FSW15 w/ Josh Knell,User Interface II for FSW16 w/ Josh Knell,User Interface II for FSWPT4 w/Cameron Pope,User Interface II for WEB17 w/ Josh Knell,UI: II - Guided Project for Web 18 w/ Josh Knell,User Interface II for Web 18 w/Josh Knell,User Interface II for Web 19 w/Josh Knell,User Interface II for WEBPT6  w/ Dan Frehner,User Interface II for WEB20 w/ Dan Levy,User Interface II for WebPT7 w/Cameron Pope,User Interface I and II for WEB21 w/ Dan Levy,User Interface II for WEBPT8 w/Keiran Kozlowski",,,User Interface Project: Great Idea Web Page,"Introduction to User Interface and Git,Web for UX: Intro to HTML and CSS",,"Full Stack Web Development Core, UX Web and Labs Prep Unit",3,1,3,3,3,4,,1/9/2018 4:48pm,recGvXyWT6AvGtMHR
Async Redux - Redux Thunk,,"By nature Redux is synchronous. Because of this we need to apply some middleware to extend the functionality of our Redux package to allow for things like, promises (which are asynchronous). This module will teach you how to set up Redux-Thunk as a middleware for Redux. You will also learn how to use the Redux-Thunk package to extend your actions so that you have the ability to consume promises. ","Redux II exposes the students to the idea of async-redux. We introduce packages called `redux-thunk` and `applyMiddleware`. These together, allow us to tap into the Redux synchronous system and turn our action creators into async functions.","effectively use `redux-thunk` and asynchronous action creators to consume data from external API's,implement Redux Middleware libraries into a Redux Store using `applyMiddleware`,describe the Finite State Machine pattern and it's relationship to building Redux applications",3,,"Redux II for CS8 w/ Luis Hernandez,Async Redux - Redux Thunk for CS9 w/ Ryan Hamblin,Redux Swapi Project Solution for CS9 w/ Ryan Hamblin,Redux Thunk POST & GET for CS9 w/ Ryan Hamblin,Redux Thunk for CS10 w/ Ryan Hamblin,Redux Todo Solution for CS10 w/ Ryan Hamblin,QA - Review of Redux TODO for CS10 w/ Ryan Hamblin,Redux Thunk - Day 2 for CS10 w/ Ryan Hamblin,Async Redux I for CS11 w/ Ryan Hamblin,Async Redux - Redux Thunk II for CS12 w/ Dustin Myers,Async Redux - Redux Thunk for FSW13 w/ Dustin Myers,Async Redux - Redux Thunk for FSW13 w/ Dustin Myers,Async Redux for FSW14 w/ Dustin Myers,Redux Middleware for FSW14 w/ Kamry Bowman,Async Redux I for FSW15 w/ Dustin Myers,Async Redux - Redux Thunk I for WEB16 w/ Dustin Myers,Async Redux - Redux Thunk I for WEBPT3 w/ Dan Frehner,Async Redux - Redux Thunk I for WEB17 w/ Dustin Myers,Async Redux - Redux Thunk for WEB18 w/ Dustin Myers,Redux Thunk for Webpt4 w/Brian Kirkby,Async Redux - Redux Thunk for Web 19 w/ Dustin Myers","BinaryArraySortInLinearTime,GetAllProductExceptAtIndex",,"Redux-Friends,Redux-Swapi",Redux,,Full Stack Web Development Core,3,1,3,3,3,4,,1/9/2018 4:49pm,recSoiWNJzGURrXYh
Introduction to Node.js and Express,,"On this lecture we will:

- introduce `node.js` and `Express`.
  - what is `node.js`, what can it do? what can't it do?
  - what is `Express`? why use it?
  - relationship between `Express` and `node.js`.
- see a high level overview of the main features of `Express`.
- learn how to manually test our Web API using a tool called `Postman`.services.
- create our first CRUD Web API.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

Coming into the lecture students should have a basic understanding of HTTP (methods and status codes) as it was covered in the `Single Page Applications` module on the front end. At this point we do not introduce `REST` yet.

On this lecture we should provide a gentle introduction to the following topics:

- introduction to node.js and express. (augmented by preclass reading/videos)
  - what is node.js, why do I care?
  - what is express, why do I care?
  - relationship between express and node.js.
- high level overview of the main features of Express.
  - routing.
  - middleware.
  - sub-applications (Express Routers).
  - views
- introduce routing and request handler functions

Each topic is broken down into three parts:

- I do: in the form of a short demo or explanation of concepts that require no code.
- We do: where students follow along with code or provide ideas on concepts still not explained by the instructor.
- You do: small code challenge related to what was just covered on the prior to sections. For explanations (no code) have review questions for students to answer.

We don't need to go deep into `Node.js`, the focus is on building `RESTful APIs` using `Express`.

We do, however, provide a strong conceptual understanding of the `Express` framework, it's main features and gotchas.


BY THE END OF THE WEEK A STUDENT SHOULD HAVE COMPLETED THIS SERVER DURING THEIR RECORDED LECTURES BEFORE CLASS (https://gist.github.com/ryan-hamblin/f112a8e2f7656ae02bd47cb1fc819b41)","use postman to manually test Web APIs.,create an API that can respond to GET requests.,explain what Express is and its core features.,explain what Node.js is and its core features.",4,Introduction to Node.js and Express for WEB18 w/ Luis Hernandez,"Introduction to Node.js and Express w/Luis Hernandez,Intro to Node.js and Express for webpt4 w/ Diandra","RouteBetweenNodes,ArmstrongNumbers",Hubs Guided Project,Users API,Building RESTful Web APIs with Express and Node.js,Active,Full Stack Web Development Core,4,1,4,4,4,4,,1/2/2018 1:14pm,recZiPP8Oyg1WlHxT
Server-side Routing,,"Node's HTTP server uses a single `request handler function` for all requests. Express provides a way to break the application into different request handlers for each URL+ HTTP method combination.

This feature is called **Routing** and is one of the main features of `Express`.

In this module we will take a deeper look at routing. We will:

- use the `routing` feature of express to build several endpoints.
- cover different ways to pass data to a Web API.
- introduce `REST` as a way to guide the architecture of our web 
- using Express Routers to organize our code.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

Students should have a basic understanding of:

- What an API is in this context.
- The use of `Request Handler Functions` and how to write them.
- How to write an API that responds to GET requests.
- JSON and how it's used when writing APIs.
- REST as a set of principles to drive the design of an API.

Cover examples of performing DELETE, POST and PUT operations.

Cover passing data to an API using the `query string`, the `request body` and `route parameters`.

Introduce Postman and give an overview of how to use it.","use Express Routers to organize Web API code.,explain the basics of the REST architectural style.,""read data from the query string, request body and route parameters."",explain how routing works in an express application.",4,Server-side Routing for WEB16 w/ Luis Hernandez,"Server-Side Routing for WEB15 w/ Luis Hernandez,Server-side Routing for Web17 w/Luis Hernandez,Server-side Routing for WEB18 w/ Luis Hernandez,Server-Side Routing for webpt4 / Diandra,Server-Side Routing for Web 19 w/ Luis Hernandez","StackMachine,SumAndProduct",Web API Chat,Web API II,Building RESTful Web APIs with Express and Node.js,Active,Full Stack Web Development Core,4,1,4,4,4,4,,1/2/2018 1:14pm,recBjiSulq0PYLCIj
"Querying Data, Migrations and Seeding",,"On this lecture well learn about:

- Grouping data.
- Performing multi-table queries using joins.
- using Knex migrations.
- seeding test data using Knex.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

The exercises should be written in the language of the business, instead of: ""calculate the sum of sales ordered by month"" it should be: ""As a sales analyst, I'd like to know the sales totals for the last year organized by month"".","use knex seeding to add test data,use knex migrations to build a schema,query data from multiple tables,understand and explain the role of a foreign key",4,"""Querying Data, Migrations and Seeding for WEB16 w/ Luis Hernandez""","""Querying Data, Migrations and Seeding for Web17"",""Querying Data, Migrations and Seeding for WEB18 w/ Luis Hernandez"",""Querying Data, Migrations and Seeding for Web 19 w/ Luis Hernandez""",,Web DB III Guided Project,Web DB III Module Challenge,Adding Data Persistence to Web APIs,Active,Full Stack Web Development Core,4,1,2,2,1,1,,12/12/2017 3:10pm,recw2ezN22yjehidj
Managing API Data,,In this module we'll learn how to perform  CRUD operations from a Web API using `knex`.,,"extract data access code to a data layer,use Knex.js to manage API data",2,Inserting and Modifying Data for WEB16 w/ Luis Hernandez,"Inserting and Modifying Data for FSW13 w/ Luis Hernandez,Inserting and Modifying Data for WEB15 w/ Luis Hernandez,Inserting and Modifying Data for Web17 w/Luis Hernandez,Inserting and Modifying Data for WEB18 w/ Luis Hernandez,Managing API Data for Web 19 w/ Luis Hernandez",,Web DB II Guided Project,Web DB II Module Challenge,Adding Data Persistence to Web APIs,Active,Full Stack Web Development Core,2,1,1,2,1,1,,12/12/2017 3:06pm,recIbfNn9xRhLTOv4
Mongo I,checked,,,"demonstrate the ability to use basic CRUD commands on the mongo shell,""describe the difference between a MongoDB instance, a collection and a document."",start and stop a local instance of MongoDB,understand what data persistence means and how we use MongDB to achieve persistence.",4,Please watch this video before class.,"Mongo 2 Guided Demo 2 for CS9 w/Luis Hernandez,Mongo 1 Guided Demo 1 for CS9 w/Luis Hernandez,Mongo 1 Guided Demo 2 for CS8 w/Luis Hernandez,Mongo 1 Guided Demo 1 for CS8 w/Luis Hernandez,Mongo on Windows Installation Troubleshooting for CS7 w/Luis Hernandez","PrimeReduction,ChainedFunctions",,"Mongo Friends,Mongo Bears",,,,4,1,2,1,0,1,,12/22/2017 4:39pm,recjoYsEIq24eMpTL
Mongo II,checked,,,"write Custom Validators for mongoose schemas,add Virtual Properties to mongoose schemas",2,,"Mongo 2 Guided Demo 1 for CS9 w/Luis Hernandez,Mongo 2 Guided Demo 2 for CS8 w/Luis Hernandez,Mongo 2 Guided Demo 1 for CS8 w/Luis Hernandez,Mongo 2 Guided Demo 2 for CS9 w/Luis Hernandez,Mongo II day 1 for CS10 w/ Ryan Hamblin,Mongo II day 2 for CS10 w/ Ryan Hamblin","NextPalindromicNumber,DeepEquality",MongoDB Sprint Mini,Mongo Films,,,,2,1,2,1,0,2,,12/22/2017 4:39pm,recHgbWiWoi9oue4L
Using Sessions and Cookies,,"The HTTP protocol, and by extension the web, is stateless. It has no memory across requests. By default whenever we change pages all previous information the server had about the client is lost, this includes authentication information.

Imagine logging into your favorite server and as soon as you change pages the server asks you to login again as it doesn't _remember_ who you are. That would make for a bad user experience. Fortunately there are ways around this and in this section we'll take a look at one: **sessions**.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

We are instructing the students on the use of 'bcrypt, sessions (express-session), and middleware'. The intent is to be able to provide context to the students about how these three things can be put together to start designing their own authentication systems.","""restrict access to resources, allowing access only for authenticated users"",implement logout using a sessions based API,use in-memory sessions to persist authentication information across requests",3,Using Sessions and Cookies for WEB16 w/ Luis Hernandez,"Using Sessions and Cookies for WEBEU1 w/ Gabriel Cabrejas,Using Sessions and Cookies for Web17 w/Luis Hernandez,Using Sessions and Cookies for WEB18 w/ Luis Hernandez,Sessions and Cookies for webpt4 w/Jason ","LogicGates,DigitsRaisedToConsecutivePowers",Web Auth II Guided Project,Web Auth I Module Challenge,Authentication,Active,Full Stack Web Development Core,3,1,3,3,3,4,,12/9/2017 9:19pm,recvIPgHwxF194c7q
Using JSON Web Tokens (JWT),,In this module the student will build a full stack (an Express API and a React web application) authentication workflow using JSON Web Tokens.,"Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

Implementing user registration, login, logout and how to protect resources from being accessed by unauthenticated clients.","produce and send a JSON Web Token (JWT),explain the three different parts of a JSON web token.",2,Using JSON Web Tokens for WEB16 w/Luis Hernandez,"Using JSON Web Tokens (JWT) for WEB15 w/ Luis Hernandez,Using JSON Web Tokens (JWT) w/ Gabriel Cabrejas,Using JSON Web Tokens (JWT) for WEB18 w/ Luis Hernandez","OverlappingRectangles,RandSevenToRandFive",Web Auth III Guided Project,Web Auth III Module Challenge,Authentication,,Full Stack Web Development Core,2,1,2,1,0,2,,12/13/2017 3:47pm,reciCHdNjavSKaaLt
Unit Testing I,,"In this module we will learn about automated testing, and more specifically how to write unit tests with Jest.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

* _Progress without understanding is just moving forward in a random direction._
* I always like to start off Testing week with a discussion on ""how"" software gets built. I end up spending more time than I probably ought to fleshing out for the students the different examples of dev teams that I've been a part of.
* This commonly leads to a discussion about `project/feature planning`. I love giving the following story to the students as piece of advice.

While at Nokē our software team was constantly working under the gun. We had a product, that many big important companies were beta testing. Our software was unique in that it was an application that interfaced with hardware. As goes the story with many start ups, our CEO was running around trying to land certain investments and projects to keep us a float while we were able to show off to investors how effectively our team was able to perform.

We ended up building a prototype lock that could be installed to work with a storage unit, and of course, we needed an app to deliver along with it. Because the hardware was so drastically different we had to approach this as a nearly brand new app, not just a skin/clone of our previous system. Our deadline? 3 weeks!

With a tight deadline, and a CEO out in Georgia on business, (leaving us to our own devises) our dev team did what we do best, we planned. Three business days of planning and writing tests, and boiler-plating, and white boarding, and arguing/discussing we came up with a battle plan. We knew how fast we could work as a team, dividing our expectations and tasks up into different portions of work and finally, began writing real code.

We not only ended up shipping the app on time (and it wasn't trivial), but we got MVP a few days early which gave us time to flesh out bugs + add on features we didn't think we'd be touching. The moral of the story here is that planning out your understanding of the problem at hand, and breaking down the work will help you immensely as a developer. As I got to my desk on Thursday morning of Week 1, I had the majority my tests written for what my code should look like, how it should perform and what any expected/anticipated behaviors we might encounter. Of course not everything accounted for. But It allowed me to move forward confident, and build rapidly each feature that needed to be a part of the project.","use Jest to unit test functions,explain what automated testing is and its importance",2,Testing I for Web17 with Luis Hernandez,"Testing I for WEBEU1 w/ Gabriel Cabrejas,Testing I for WEB18 w/ Luis Hernandez",,Web Testing I Guided Project,Web Testing I Module Challenge,Testing,Active,Full Stack Web Development Core,2,1,2,2,2,4,,1/9/2018 4:52pm,rechTQVfCg4p85Hoi
Testing React,,In this module we introduce common techniques used for testing React components.,Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.,"use Snapshot Testing to detect regressions,fire events and test async operations,select DOM nodes using queries,Use a popular library for testing components",4,Testing React for WEB18 w/ Luis Hernandez,"Testing II for WEBEU1 w/ Gabriel Cabrejas,Testing II for Web17 w/Luis Hernandez",,Web Testing II Guided Project,Web Testing II Module Challenge,Testing,Active,Full Stack Web Development Core,4,1,4,4,4,4,,4/19/2018 9:11am,recS9H6qCj0dQe32B
Testing the Back End,,"Following the same testing methodology that pervades this week, we move now into testing a database-backed API and its endpoints. 

With server testing, there is much more of am emphasis on using stubs, mocks, faux network requests, etc. in order to facilitate proper isolation of the many different components that make up the API. 

In this module, students utilize the methodology of Test-Driven Development in order to implement an API with adequate code coverage. ","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

Link to github repository showcasing a simple mongoose-connected API with tests for each endpoint and associated model: https://github.com/LambdaSchool/Server-Testing-Example-Doc",test a simple Web API.,1,Testing IV for WEB16 w/ Luis Hernandez,"Web Testing IV: Testing an API,Testing IV for WEBEU1 w/ Gabriel Cabrejas,Testing IV for WEB18 w/ Luis Hernandez",,Web Testing IV Guided Project,Web Testing IV Module Challenge,Testing,Active,Full Stack Web Development Core,1,0,1,1,1,0,,12/18/2017 2:06pm,reciXdxRA8zXJXDID
Delivering a Backend Web Server,,,,,0,,"Backend Project Guided Demo 2 w/Luis Hernandez,Backend Project Day 3 for CS10 w/Luis Hernandez,Backend Project Day 4 for CS10 w/Luis Hernandez,Backend Project Kickoff for CS11 w/Luis Hernandez,Deployment Process CS11 with Luis Hernandez ,Backend Project Demos for CS11 w/Luis Hernandez,Deployment to Heroku for FSW13 w/ Luis Hernandez",,,Backend Project Week,Build Week: Back End,Active,Full Stack Web Development Core,0,0,0,0,0,0,,3/16/2018 9:29am,reclXlVbkj28KNTn8
Dev-ops - Deployment I,checked,"As is with the majority of the concepts we cover here at Lambda School, Dev-ops and Deployment is a very large subject. We can certainly give you a taste of what these concepts entail, however, people spend their lives as Dev-ops engineers because the field is so vast. ","The main goal here is to get students to see how they can deploy their projects. Throughout multiple channels. Some of my favorite deployment tools for this would be, ngrok, Netifly and Heroku.",deploy a web-api to Heroku,1,DevOps and Deployment ,,,,,,,,1,0,1,1,0,0,,1/9/2018 4:53pm,recAfPGH4aVYYJ7wB
DevOps II,,,,,0,,,,,,,,,0,0,0,0,0,0,,1/9/2018 4:53pm,recn5J6Gk0JTzt3v5
Project Planning,,"For this sprint we will take a look at what a week in the life of a front end engineer feels like by building a small project. We will also go over project planning, time management, and accountability and how it all relates to being a professional in the workplace.","The PMs will represent you as company project managers and you will be the client.  You need to make sure your PMs are hounding the students for project requirements all week long.

This spreadsheet is super helpful in tracking progress throughout the week.  Be sure to copy it and make a new one for your cohort:

https://docs.google.com/spreadsheets/d/1ytLEJv1nt2CEbdzhIEYM9mWyMbfjnJCLXzJ2xrahYkQ/edit#gid=0

* Morning code challenges were removed for this week to allow more time on the project.

* The normal guided demo time should instead be used as a short (45 mins max) demo of the objective topics and NOT code reviews.

* The first day of the project should be used to explain the format of the week.  The format can be however you like it but an effective way is to break down the days like this:

Day 1: Trello board and initial pull request committed for PM to review.

Day 2: MVP could be complete by several students at this stage but the general expectation is that most students will be finished with 1 to 2 features.

Day 3: Students should be near completion of the MVP. 

Day 4: MVP should be complete and new features being looked at

Day 5: MVP completed, some features added, and a demo afternoon is used to showcase work.  We used 2pm PST as the deadline for the MVP project.

Demo Format:
Some groups will be larger than others, if your project managers have a larger group, encourage them to reduce the time to just 2 minutes.  It's very important that every student demos even if they aren't 100% complete.  

Cohort Wide:
* 2 demos per group
* 2 minute demos showcasing their features

Group Wide:
* Everyone demos 2 mins max with a 3 minute Q&A
* Prepare to talk briefly talk about what was most challenging
* Prepare to talk briefly talk about what was most rewarding

NOTE: Finishing the MVP is not as important as the learning behind it.  Stress this with your group of project managers and students.  If you feel a student is completely over their head after the week is over, report progress to our Director of Student Success.


Here is the color scheme /fonts for the students: 

```md
Heading font: Roboto Bold
Everything else font: Raleway Medium

Heading and main font color: #4A4A4A
Button font color: #FFFFFF

Sidebar background: #D8D8D8
Main background: #F3F3F3
Main button background: #2BC1C4
Delete button background: #D0021B
Border color used throughout: #979797
```","build a React app in one week from the ground up based on project requirements,report on project requirements with their project manager through daily check ins,follow specific time management techniques to accomplish tasks in a project,build a kanban board based on project requirements,describe the importance of frequent git commits and follow best practices",5,Front End Project Kick Off for CS10 w/ Ryan Hamblin,"Front End Project Intro for CS8 with Josh Knell,Frontend Project Intro for CS9 w/Luis Hernandez,Front End Project Kick Off for CS10 w/ Ryan Hamblin,Pomodoro Technique for CS10 w/ Ryan Hamblin,Agile Musings for CS10 w/ Ryan Hamblin,Project Week Intro for CS11 w/ Ryan Hamblin",,,Front End Week Long Project,,,,5,1,4,0,0,1,,2/2/2018 9:50am,reccD1CNXuQ8oz4YP
Getting started with Python and Django,,"You've learned how to build back-ends with node.js, using the minimalist Express framework. Now you're going to get started with another language, another ecosystem, and another framework - Python and Django. Your first goal - get set up, learn a bit about the system, and be able to make a simple ""Hello Django"" application.

Python is a pragmatic multiparadigm general purpose programming language with a healthy community and large ecosystem/package library, convenient for small to medium sized projects (and larger ones with proper discipline). Usually when people say ""Python"" they mean CPython 3, which is the reference implementation and what we will use, but other flavors exist as well (IronPython, Jython, PyPy, etc.). Django is, like Python, a pragmatic ""one right way to do it"" system, specifically a web application framework built on the principles of convention over configuration and fast iterative design. It is ""batteries included"", which means it comes with ways to do most common web application tasks (data models, ORM, templates, forms, validation, auth, etc.).

The Django ecosystem bills itself as ""the web framework for perfectionists with deadlines"" - these many included features are what makes it quick to build an MVP with. We will start by learning about and using these components, and then move on to extend the system and (to some extent) pick and choose the modules we actually want.

For now - get started by setting out on the objectives, setting up a Python/Django development environment and making a basic Django app. There are also many linked resources to check out for each objective, Django has an excellent community with lots of helpful tutorials and documentation.

Good luck, and have fun getting started with Django!","This module encompasses day 1 of Python/Django I, and is meant to be a semi-freebie day material wise, focused on setup. The end result should be a PR to the ""Hello Django"" repo that shows students have successfully installed Python/Django and can start a project (but the project itself is just complete given boilerplate, except for the occasional student who digs into the tutorial and gose further).","describe and use the Django migration system,setup and use basic Python/Django development environment",2,,,,,,Python/Django I,,Computer Science Annex,2,1,2,2,2,4,,2/12/2018 3:58pm,rec4yg0hRHaeOmBGN
Object-Oriented Programming,,"Object-oriented programming (OOP) is an important paradigm, and one that everyone is exposed to but fewer people explicitly study. Our goal is to formally understand the motivation, structure, and vocabulary of object oriented programming, and how it can enable useful software designs (as well as where it can go wrong).","This is day 2 of the Python/Django material, the morning coding demo starts with a pure Python class and then an actual Django model (the Bookmark model for the Djorg app), which is also a class. The activity for the rest of the day is to start your own Djorg application, and potentially go further using material from the official tutorial.",define the key terms used in object-oriented programming,1,,,,,,Python/Django I,,Computer Science Annex,1,0,1,1,0,0,,2/6/2018 11:09am,recHhVqI4Y3j6UgLa
Software Design Patterns,checked,"Design patterns are part of the vocabulary of software engineering, allowing us to refer to commonly repeated approaches to solve problems. They are more specific than a paradigm (like OOP or functional programming), and can potentially be compatible with multiple paradigms (though many tend towards OOP). They are less specific than an algorithm - they don't solve a problem, rather they inform you how to design a solution to a problem.","This is for days 3-4 of Django, in the mornings live code the Bookmarks app and take it as far as reasonably possible with vanilla Django features (models, views, templates, forms). In the afternoons, encourage students to as an MVP reproduce the morning work, and as a stretch goal take it further/customize it. Also, apply a basic CSS style using django-bootstrap4, and encourage students to customize from there.

There are a ton of design patterns, and not all of them really ""caught on"" - the material focuses on factories, decorators, lazy initialization, and iterators as the most commonly seen in practice. MVC and ORM could also both be seen as design patterns, but are treated as separate modules, but can be foreshadowed a bit here if time allows.","understand commonly used design patterns,know about common anti-patterns and how to avoid or mitigate them",2,Software Design Patterns,,,,,Python/Django I,,Computer Science Annex,2,1,0,0,0,1,,2/6/2018 11:10am,recgVHqW0RShuQn1Z
User Interface I,,Even the most complex web applications start with simple HTML elements.  Knowing how to use HTML and style it with CSS has a massive impact for your future as a developer.  This module will explore the fundamentals of HTML and CSS.,"
Set up a successful classroom for your first day!

Introduce Yourself
* Talk about why you started to program
* Give some work history to establish your expertise

Introduce how you want to communicate
* Use slack not zoom
* Introduce threads in slack
* Introduce polls
* Introduce the red question mark

Introduce how to solve problems at Lambda School
* 20 minute rule > Cohort Help Channel > PM > SL > Instructor
* Use the Training Kit, look at the deeper learning links

Introduce Codepen
* Talk about how it works as a teaching tool
* Talk about forking code

Introduce your teaching style
* I do, we do, you do
* Fingers on keyboards!

The following code is used as starter templates.  

****Please remember to FORK the pen and rename it after the cohort you’re working with.****

**All guided demo code used in the past for this week can be found here:** https://codepen.io/collection/naJBKN/

**All solution for the week’s projects can be found here:**
https://codepen.io/collection/fe8b0dace468faa903400d75890ba27a/

Each cohort is unique in their initial knowledge of HTML and CSS.  Take time to get a grasp of where this cohort is so you can be more adaptable to your teaching.

Don't assume they know everything because they did pre-course work.  Address each subject as if it's not been taught and remember to be empathetic since this is the first full-time week in the whole program.

Usual order concepts are taught:
* Why HTML?  Web standards are important across browsers and devices.
* Doctype for HTML5 is how we follow rules across browsers
* HTML tags and how they work with content
* Most common HTML tags: p, headings, div, a tags, list items
* Semantic HTML and what that means: section, header, nav, footer, aside are the main 
* CSS - how we bring it into the page, external/style/inline
* CSS - explain the ""C"" in CSS by describing the cascade and inheritance
* Specificity - explain selectors: universal *, elements, classes, ID
* Specificity weight - explain how selectors and weight combine together to create layered styles. 
* Specificity weight continued - explain that the external, style tags, and inline styles actually come into play with the cascade.","demonstrate CSS specificity and inheritance to create and update styles,demonstrate the use of CSS selectors to style markup,describe and use semantic HTML tags to markup content",3,,"User Interface I for CS12 w/ Josh Knell,User Interface I for CS13 w/Josh Knell,User Interface I for CSPT2 w/Daniel Frehner,User Interfaces I for FSW14 w/ Josh Knell,User Interface I for FSWPT3 w/Dan Frehner,User Interface I for FSW15 w/ Josh Knell,User Interface I for FSW16 w/ Josh Knell,User Interface I for FSWPT4 w/Cameron Pope,User Interface I from WEB17 w/ Josh Knell,User Interface I for Web 18 w/Josh Knell,User Interface I for WEBPT5 w/ Cameron Pope,User Interface I for WEBPT5 w/ Cameron Pope,UI-I Guided Project for Web 19 w/Josh Knell,User Interface I for WEBPT6 w/ Dan Frehner,User Interface I for WEB20 w/ Dan Levy,User Interface I for WebPT7 w/Cameron Pope,User Interface I for WEBPT8 w/Keiran Kozlowski,NSLayoutAnchors Supplementary Video for iOS6 with Spencer Curtis",,,"UI I: Project 2 - Sweet Eats Bakery Style,UI I: Project I - Sweet Eats Bakery Markup","Introduction to User Interface and Git,Web for UX: Intro to HTML and CSS",,"Full Stack Web Development Core, UX Web and Labs Prep Unit",3,1,3,3,3,4,,2/7/2018 3:35pm,recl0IyzS2Vl89lZa
Responsive Design II,,Understanding the problem vs fixing a problem are two different things.  We aim to fix the problems presented by the thousands of devices we are required to develop for.  This module will address techniques that will push your ability to code a responsive website or app further.  ,,"describe why responsive design impacts accessibility,describe and use responsive units to create a fully responsive website",2,,"Responsive Web Design II for CS8 w/ Josh Knell,Responsive Web Design II for CS13 w/Josh Knell,Responsive Design II for CSPT2 w/ Daniel Ferhner,Responsive Design II (Part I) for FSW14 w/ Josh Knell,Responsive Design II (Part II) for FSW14 w/ Josh Knell,Responsive Design II for FSW15 w/ Josh Knell,Responsive Design II for FSW16 w/ Josh Knell,Responsive Design II for FSWPT4 w/Cameron Pope,Responsive Design II for WEB17 w/ Josh Knell,RWD II for WEB18 w/ Josh Knell,Responsive Design II for Web 19 w/ Josh Knell,Responsive Design II for WEBPT6 w/ Kieran Kozlowski,Responsive Design II for WEB20 w/ Dan Levy,Responsive Design II for WebPT7 w/Dan Levy,Responsive Design II for WEB21 w/ Dan Levy",,,Portfolio Website,Advanced CSS,,Full Stack Web Development Core,2,1,1,0,2,1,,2/7/2018 3:36pm,recE3IqPtDxaVI0DW
Relational Databases,checked,,,,0,,,,,,Python/Django III/Career Development,,Computer Science Annex,0,0,0,0,0,0,,2/7/2018 4:50pm,recU6Q1DLISGvt0dk
Object-relational mapping,checked,"Traditional web applications tend to serve and consume REST APIs - noun-verb centered interactions with entities represented in a database. Rather than force developers to handcraft SQL queries for these interactions, most web application frameworks encourage the use of an object-relational mapping (ORM) that allows the developer to naturally use classes/objects that represent their data and builds/executes the appropriate queries for them.

There are many advantages to this approach, most notably abstraction from the specific underlying database (allowing you to swap them more easily) and protection from SQL injection and other security risks. The cost is it's difficult for an ORM to be as expressive and powerful as SQL, and it's possible to misuse an ORM to accidentally build really inefficient queries (granted it's also possible to misuse SQL in the same way). The Django ORM does a pretty good job of balancing usability and power, and with proper use can efficiently perform the vast majority of database interactions you are likely to need to do.","This is day 9 (second Thursday) of Django material, and is important for prepping them for the sprint challenge. Suggested approach - look at the second Django sprint challenge yourself, and then spend Thursday demonstrating setup and related (but not the sprint challenge answer) queries.",,0,,,,,,Python/Django III/Career Development,,Computer Science Annex,0,0,0,0,0,0,,12/19/2017 9:14pm,reccrn1If8mhlIymc
Bootstrap I,checked,"What if you could take all of the user interface skills you have learned and then increase your productivity by an exponential amount? User interface frameworks like Bootstrap allow you to do just that! An army of talented developers have already put countless hours into bootstrap and we have the opportunity to use their ideas to expand our projects quickly and efficiently.  We can leverage CSS components, JavaScript plugins, and even themes to get fully responsive layouts built in minutes that would otherwise take hours.  ","Documentation for bootstrap 4.0: https://getbootstrap.com/

This is super helpful to see student's examples for project 1:
https://htmlpreview.github.io/

Sprint Challenge PREVIEW video:  https://youtu.be/Bff-ewrsQDM

Just pop a github link in there and it will render their pages!

Key things to know when approaching a bootstrap project:
* Bootstrap 4 is built off of SASS under the hood but you can use any preprocessor to overwrite styles.  In our case, we will be using LESS.  
* When using your own styles to overwrite bootstrap, use custom classes with heavier specificity as a best practice.
* DO NOT try to go into the bootstrap core files and make updates there.  This will lead to bootstrap performing in ways the documentation does not guarantee. 
* Teach students that CSS is still king and their styles will always win in a specificity war against bootstrap.
* Go under the hood a bit and show students that bootstrap is simply CSS and JS.","build 4 different kinds of utilities in a bootstrap 4 project,build 3 different JS components in a project,build a form and style it's contents in a project,build and customize CSS components in a responsive layout project,demonstrate the proper use of content rules by implementing responsive images and tables,demonstrate knowledge on how to use the bootstrap grid by creating a responsive layout in a project,install bootstrap into a project",7,,"Bootstrap II for CS11 w/ Josh Knell,Bootstrap I for CS11 w/ Josh Knell,CC Operators for CS11 w/ Benjamin Campbell,CC Sort String for CS11 w/ Brian Durbin,CC Operators for CS11 w/ Jason Metten,Bootstrap - I for CS12 w/ Josh Knell","PrimeList,ToBinaryString",,"Bootstrap - Project 2,Bootstrap I - Project 1",,,,7,1,5,2,0,1,,2/9/2018 3:25pm,recz5LYEQl0kWLo7U
Bootstrap II,,"With the grid in place, we can now operate in a fully responsive way for all our layout decisions.  What we lack now is more functionality within our components.  In this module we will cover how to use powerful JavaScript components to make our site much more dynamic.  We will also look at forms and see how easily bootstrap can validate on the front end. ","Documentation for bootstrap 4.0 JS: https://getbootstrap.com/docs/4.0/getting-started/introduction/#js

Remember that you must have jQuery as a dependency for the JS components to work.  Remember to load jQuery in first then bootstrap’s bundled JS files.

Solution to Project 2:
https://codepen.io/joshlambda/pen/zRPoBG","build 3 different JS components in a project,build 4 different kinds of utilities in a bootstrap 4 project,build a form and style it's contents in a project",3,,"Bootstrap II for CS8 w/ Josh Knell,Bootstrap II for CS10 w/ Josh Knell,Bootstrap II for CS9 w/ Josh Knell","SumOfDigits,DaysBetween",,Bootstrap - Project 2,,,,3,1,1,0,0,1,,2/9/2018 3:26pm,reckrpO1nYaIQZbBM
Preprocessing II,,"Preprocessing opens up tools earlier web developers could never dream of. Mixins, functions, and namespaces were never available to CSS until now preprocessors came along.  Understanding how to use these new tools can separate an average user interface developer from a great one.  Knowing these skills will make layouts so easy that the programmer can spend their valuable time on deeper logic in other more advanced languages.","Cross browser compatibility is a huge issue with modern web development and mixins can really shine in this area.  Take time to explain web prefixes as a problem that preprocessors solve with ease. 

Understanding importing and how it works can be a huge asset when building bigger projects with more team members coding LESS.  Explain how committing just LESS files and NOT CSS impacts a git repo. ","create a master LESS file and use importing to create a project. ,""create parametric mixins, use functions, and incorporate escaping""",2,,"Preprocessors II for CS10 w/ Josh Knell,Preprocessing II for CS8 w/ Josh Knell,Pre-Processing II for CS13 w/ Josh Knell,Preprocessing II for CSPT2 w/Daniel Frehner,Preprocessing II for FSW14 w/ Josh Knell,Preprocessing II for FSW15 w/ Josh Knell,Preprocessing II for FSWPT3 w/ Cameron Pope,Preprocessing II for FSW16 w/ Josh Knell,Preprocessing for WEBPT4 w/Cameron Pope,Preprocessing II for WEBPT4 w/Cameron Pope,Preprocessing II for WEB18 w/ Josh Knell,Preprocessing II for Web 19 w/ Josh Knell,Preprocessing II for WEBPT6 w/ Keiran Kozlowski,Preprocessing II for WEB20 w/ Dan Levy,Preprocessing II for WebPT7 w/Dan Frehner,Preprocessing II for WEB21 w/ Dan Levy",,,Preprocessing II - Fun Bus Website,Advanced CSS,,Full Stack Web Development Core,2,1,2,1,2,2,,2/11/2018 12:06pm,rec1hRu3bO6L0uxn2
GraphQL,,"GraphQL is a newer approach to building an API, introduced by Facebook and with a focus on JSON and more general/large-scale querying. Querying is essentially a matter of specifying ""just the keys"" of the JSON you want, and the server figures out and returns what data you need. While not as natively supported by Django, there are packages that facilitate it and it is worth understanding as an alternative paradigm to designing an API.","This is day 7 of Django material, and is mostly useful as a quick more modern contrast with REST. I tend to emphasize that REST can still be quite nice in some cases (despite Facebook pitching GraphQL *hard* in the official tutorial), and we build a GraphQL endpoint with django-graphene.",,0,,,,,,Python/Django II/Career Development,,Computer Science Annex,0,0,0,0,0,0,,2/12/2018 3:59pm,recjIPIwz5Pn5WbPh
DOM I,,"Now that we can build a basic static web page with HTML and CSS, we need to add functionality to the page. The first step in building vibrant dynamic web pages and applications is learning about the DOM. What it is, how it affects our page, and how to access and manipulate it. DOM manipulation is at the core of every framework and before we start using frameworks we need to understand the DOM. ","This example code goes really well with the objectives:
https://codepen.io/lambdaschool/pen/VGEpVe

Concept order:
- What is the DOM exactly? (Rendering engines create DOM nodes from HTML)
- Learn how to access the DOM API by using multiple selector methods like querySelector/querySelectorAll etc
- Manipulate the DOM with style, setAttribute, and innerText/innerHTML
- Create elements from JS by using createElement() and then appending or prepending those elements to DOM selectors","""create a new element, manipulate it, and add it to the DOM"",Use different properties and methods to manipulate a selected element.,""Use DOM selectors, and describe the differences in the behavior of each."",""Explain what the DOM is, and how it relates to an html page""",4,,"DOM-I for CS10 w/Josh Knell,DOM - I and DOM - II combined for CS11 w/ Josh Knell,DOM I for CS12 w/ Josh Knell,DOM I for CS13 w/Josh Knell,DOM I for CSPT2 w/ Daniel Frehner,DOM I for FSW14 w/ Josh Knell,DOM I for FSW15 w/ Josh Knell,DOM I for FSWPT3 w/ Cameron Pope,DOM I for WEBPT4 w/Cameron Pope,DOM I for WEB18 w/ Josh Knell,DOM I for Web 19 w/ Dan Levy,DOM I for WEBPT6 w/ Keiran Kozlowski,DOM I for WEB20 w/ Dan Levy,DOM I for WebPT7 w/Dan Frehner",,,DOM I,Applied JavaScript,,Full Stack Web Development Core,4,1,4,3,4,2,,2/22/2018 6:47pm,rectn5PUU5ubcQkPu
Components I,,"As we build larger and more feature rich web pages, we may notice a trend in our code; elements that are essentially using the same functionality and styling with minor differences in the data they present. In an effort to keep our code readable, reusable, and most of all DRY, we can build on these repeating patterns and create components. Components are reusable pieces of code that can be used to build elements sharing functionality and styling. Components are the heart of any dynamic web application and Javascript framework.","Components-Constructors-Solution: https://github.com/LambdaSchool/Components-Constructors-Solution 
","use a component to update a styled HTML element on the DOM,build a class that creates multiple elements,describe what a component is and identify different parts of a component",3,,"Components-I for CS10 w/Josh Knell,Components for CS11 w/ Josh Knell,Components I for CS12 w/ Josh Knell,Components I for CS13 w/Josh Knell,Components I for FSW15 w/ Josh Knell,Components I for FSWPT3 w/ Cameron Pope,Components I for FSW16 w/ Josh Knell,Components I for WEB17 w/ Josh Knell,Components I for WEBPT4 w/Ryan Hamblin,Components I for WEB18 w/ Josh Knell,Components I for Web 19 w/ Dan Levy,Components I for WEBPT6 w/ Keiran Kozlowski,Components for WEB20 w/ Dan Levy",,,Newsfeed,Applied JavaScript,,Full Stack Web Development Core,3,1,2,1,0,1,,2/22/2018 6:48pm,rec847sNXZX9CVDNl
DOM II,,"Events are the way we users interact with the page. Any time there is some interaction by way of a mouse, keyboard, etc., the DOM creates and propagates an event object. This event object carries information about the event so that it may be handled at any point up the tree from the point of origin.",,"recognize event propagation and the method used to prevent it.,add event listeners and event handlers to elements.,""Explain what events are in the browser window, and how event listeners can listen for those events.""",3,,"Greensock Intro for CS 10 w/Josh Knell,DOM II for CS10 w/Josh Knell,DOM - I and DOM - II combined for CS11 w/ Josh Knell,DOM II for CS12 w/ Josh Knell,DOM II for CS13 w/Josh Knell,DOM II for CSPT2 w/ Daniel Frehner,DOM II for FSW14 w/ Josh Knell,DOM II for FSW15 w/ Josh Knell,DOM II for FSWPT3 w/ Cameron Pope,DOM II for FSW16 w/ Josh Knell,DOM II for WEB17 w/ Josh Knell - Part 1,DOM II for WEB17 w/ Josh Knell - Part 2,DOM II for WEBPT4 w/Tylar Pierson,DOM II for WEB18 w/ Josh Knell,DOM II for Web 19 w/ Dan Levy,DOM II for WEBPT6 w/ Keiran Kozlowski,DOM II for WEB20 w/ Dan Levy,DOM II for WebPT7 w/Dan Frehner",,,DOM-II,Applied JavaScript,,Full Stack Web Development Core,3,1,3,2,0,2,,2/27/2018 8:24am,recJWv3RIfa4NFXbn
React Tooling,,"So far we've been working with React applications that have been previously built out for us. The React environment used to be one that, when diving into, tripped up a lot of developers coming into the ecosystem. The problems weren't just for beginners either, many experience and seasoned developers had a hard time getting into the React ecosystem at first. 

The idea through this module is to get you prepared to demonstrate the ability to use `Create React App` to build out an application on your own from scratch. This week you'll be working on one single project. Today's focus for that project is to get your project off the ground, and show your PM that you have the ability to think about the Components you'll need for a larger project. Then you'll just be using the tools that you worked on learning last week.","I have pushed 4 solution branches to the GitHub repository: 
https://github.com/LambdaSchool/React-Insta-Clone

Each solution branch is a reflection of the work that is to be completed each day by each student. Remember that if a student doesn't finish off the day in it's entirety that's ok, but remind them they can reflect on the solution branches for inspiration if that is the case.

Day 1 should look a lot like this: https://codesandbox.io/s/7mkor5l550

Today is all about getting students to use `Create React App` and scaffolding out their application. Use PropTypes to validate the data that they're passing around through the application as well.","describe and be able to use PropTypes to 'type check' specific data being passed down to a child component,demonstrate the ability to use create-react-app to scaffold a react application",2,,"React Composition Patterns I for CS11 w/ Ryan Hamblin,React-Friends Solution Video,React Composition Patterns I for CS11 w/ Ryan Hamblin,React Tooling for CS12 w/ Ryan Hamblin,React Tooling for FSW13 w/ Dustin Myers,React Tooling for FSW15 w/ Dustin Myers,React Tooling for FSWPT3 w/ Ryan Hamblin,React Tooling for WEB16 w/ Dustin Myers,React Tooling for WEB17 w/ Dustin Myers,React Tooling and Proptypes for WEBPT4 w/Dan Frehner,React Tooling for WEB18 w/ Dustin Myers,React Tooling for Web 19 w/ Dustin Myers,React Tooling for WEB20 w/ Dustin Myers",,,React Insta Clone,Intermediate React,,Full Stack Web Development Core,2,1,2,2,2,4,,3/15/2018 12:18pm,recA9ETD6dlffpQX0
CSS in JS,,"As your application grows, it is safe to assume your codebase will grow a long side it. One of the concepts we strive for as engineers is the idea of scalability. React does this really well and is one of the important factors ","Day 4 final project nice and polished:
https://codesandbox.io/s/zkz55327z3 

Friend example using ReactStrap https://codesandbox.io/s/7w21vm8lo0","use styled-components to add functional styles to their React Components,understand how to style React components using CSS as well as Reactstrap",2,,"Insta-Clone-React,Class vs Functional Components & PropTypes Demo,React Strap and PropTypes,React Compositional Patterns IV for CS11 w/ Ryan Hamblin,CSS in JS for CS12 w/ Ryan Hamblin,CSS in JS for FSW13 w/ Dustin Myers,CSS in JS for FSW14 w/ Ryan Hamblin,CSS in JS for FSW15 w/ Dustin Myers,CSS in JS for WEBPT3 w/Dan Frehner,CSS in JS for WEB16 w/ Dustin Myers,CSS in JS for WEB17 w/ Dustin Myers,CSS in JS fro WEBPT4 w/Dan Frehner,CSS in JS for WEB18 w/ Dustin Myers,CSS in JS for Web 19 w/ Dustin Myers",,,,Intermediate React,,Full Stack Web Development Core,2,1,2,2,1,3,,3/15/2018 12:18pm,recNDoSqyUw3eq1y3
TensorFlow,,,,"create dataflow graphs for convolutional neural nets,write gpu-parallelized graph dataflows",2,,,,,,Cloud AI,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 11:26am,recinDwTdjUdItcNp
Accessing built-in corpuses and building custom corpuses,,"A corpus is a collection of text documents, and a corpora is the plural of corpus. When working with real-world Natural Language Processing (NLP) problems, there is a need to work with huge amounts of data. This data is generally available in the form of a corpus externally on the World Wide Web or as an add-on of the NLTK package. For example, to create a spell checker, you need a huge corpus of words to match against. In this session, we will explore how to access and work with the built-in corpora and we will walk though the process of creating a custom corpus; a custom corpus is essentially just a bunch of text files in a directory.",,"""Load, access and perform operations on a built-in corpus"",Load and access an external corpus,""Use WordNet, which is part of the NLTK corpus to find the meanings of words, synonyms, antonyms, and more"",Set-up a custom corpus and use a corpus reader to extract the contents",4,,,,,,Natural Language Processing,,Machine Learning Core,4,1,0,0,0,1,,4/23/2018 12:05pm,recCZyHbx8yY7KCDg
Backpropagation,,,,compute backpropagation through hidden layers,1,,"DS1: Backpropagation with Ryan Allred,Backpropagation",,,,Neural networks,,Machine Learning Core,1,0,0,0,0,0,,4/23/2018 12:05pm,recU22sI50giR3dES
Functions and Optima,,"The basics of Machine Learning depend on the ability to visualize basic mathematical ideas. The most basic of these ideas is the common function

    y = f(x)

This unassuming function is the foundation of all modern industry and science. It also is important to Machine Learning.

In this sprint we will learn about functions. Some functions are specified with perfect knowledge by a mathematician, and other functions are only observed. When we observe a function, we don't know the underlying function but only the data observations we have made.

Machine Learning - and data science and statistics more broadly - is the process of building models that can identify the unknown function. Lets talk about known and unknown functions.

Before we can start studying functions for Machine Learning, we need a good working `python` environment. Fortunately, Google recently produced an online python environment that makes learning ML a snap:

https://colab.research.google.com","* Don't forget to teach that functions are maps that can't necessarily be drawn, but that usually can be drawn for better information.
","graph some of the typical shapes of a 2d function,link a function with a table of values,calculate the derivative of `f(x)`",3,,Module: Functions and Optima,"Implement five simple numerical functions in python,Programmatically take the derivative of a function",Functions and Optima,Plot functions with colab,Mathematical Foundations,,Machine Learning Core,3,1,3,3,0,3,,4/23/2018 12:05pm,recmhvfIr58blVgOj
Linear Algebra,,"The second mathematical foundation of Machine Learning (ML) is linear algebra.

Linear algebra is really cool. It is the mathematics of objects in coordinate spaces, the first three of which are intensely familiar to we humans. Linear algebra is the basic manipulation of numbers in two-dimensions, three-dimensions, four-dimensions, and ""n-dimensions,"" that is, a coordinate in any possible size of dimensions.

Data, an important element in building and training ML models, is almost always represented using linear algebra and manipulated with it.

This module will expose you to the basics of linear algebra - the basic, important mathematical principles that will enable you to begin visualizing and reasoning about data.

Important concepts in linear algebra:

* addition and subtraction
* multiplication and division
* magnitude, or length
* dot product of a and b `<a \dot b> = |a||b|cos(\theta)`
// http://www.falstad.com/dotproduct/
* matrix multiplication
* projection from N to M dimensions
* matrix inversion
* matrix transposition
","* talk about pep8 here as part of the code example
* talk about the importance of using WSL or a VM, and defaulting to VM or dual-boot.","create and edit a vector of scalars with numpy,add two vectors together,subtract a vector from another vector,calculate the magnitude of a vector in numpy,multiply a simple affine matrix with a vector,invert a matrix and describe what it does,transpose a matrix",7,,,"Compute the average value from a tuple,""Calculate the magnitude of vectors in 2d, 3d, 5d, and 100d""",Linear Algebra,Multiply a set of vectors in matrix form by a transform Matrix,Mathematical Foundations,,Machine Learning Core,7,1,7,5,0,2,,4/23/2018 12:05pm,recnDkOzpU2aadAvd
Data Visualization,,"There are three ways to interpret data:

#### 1. Numerical analysis.

The first and most classical way to interpret data is to enter all of the values into some equation, then solve the equation for the desired result. Linear systems of equations are one of the more common approaches, but even our ever familiar `y = f(x)` is an example of this approach.

This approach works well when the data is simple enough to work out  by hand, though there are automated matrix approaches to compute these solutions that work with linear and nonlinear regressions.

Consider a dataset of local weather values:

| baro press | date | time | yesterday high| 
precip chance | temp
| --- | --- | --- | --- | --- | ---|
| | | | | | |
| 1.1 | 2018-01-01 | 12:00 | 34 | 15 | 39 |

With this data it is easy to create an equation to solve for the temperature given any other dataset (though the equation isn't likely to be correct)

<img src=""https://www.dropbox.com/s/hogy1q2nyxd9hj1/Data_Visualization-NumericalAnalysis.gif?raw=1"" alt=""1.1a + b + 12c + 34d + 15e = f"">

This approach works well for small datasets and can produce some information about the data, but becomes immediately unwieldy when the data is large.

#### 2. Machine learning model

Instead of computing the result of the above equation directly, models have been designed to provide an answer without requiring the mathematician to solve the above equation. We will be studying these models, their implementation, and their usefulness over the rest of this course.

#### 3. Visualization

Getting good results with Machine Learning means choosing the right model for the job. Before you as an ML engineer can choose the right tool, you need to learn how to visualize your data.

In this section, you're going to learn how to visualize data in the three most popular mathematical programming environments: numpy, R, and matlab/octave.

<a href=""https://matplotlib.org/mpl_toolkits/mplot3d/tutorial.html"">Many great 3D plots and their code samples in matplotlib</a>","Objectives: Graphing in Matlab, Graphing in R, Topologies, Dimensionality Reduction, Datasets","draw a 3d topology plot as an oblique heat map,draw a 3d topology plot as an image,draw a histogram of 2d data,draw `y = sin(x)` in matlab/octave,draw `y = sin(x)` using R",5,,,Draw a histogram of home sales prices,Data Visualization,"""Draw 3 3d plots: a topo map, a heatmap, and a point cloud.""",Data and Visualization,,Machine Learning Core,5,1,5,5,0,3,,4/23/2018 12:05pm,recYCnNNtKPxwqC6p
Dimensionality Reduction,checked,Principal Components Analysis is an important statistical technique for decreasing the dimensionality of a dataset.,,"graph the top two dimensions using PCA of a high dimensional data set,""compute the eigenvalues and eigenvectors of a nonsingular matrix (SVD, PCA)"",add kI to a singular matrix to make it nonsingular,write a singular value decomposition of 1000 points in R^15 in python",4,,,,Dimensionality Reduction,Find and graph eigenvalues and eigenvectors of 2d and 3d datasets.,High Dimensionality,,Machine Learning Core,4,1,1,2,0,1,,4/23/2018 12:05pm,recmIbIY0yQUq4oi5
High Dimensionality,checked,"Humans are great at visualizing and interpreting 1d, 2d, and 3d data. When the number of measurements per sample goes above this point, things get more difficult to understand. 4d and up are High Dimensional, that is, humans aren't natively wired to conceptualize data from this space. Machine Learning gives us methods to find subdivisions in high dimensional data, sometimes by reducing the data to a lower dimensionality, and sometimes by finding patterns in the high dimensional data.

![A 4-dimensional polytope](https://www.dropbox.com/s/gjsg0usbvmokrcu/Screenshot%202018-03-23%2014.29.57.png?raw=1)

This module will flex your muscle in visualizing, manipulating, and simplifying high dimensional data.",,"normalize a vector into a magnitude and a unit vector,compute the L1 and L2 distances of a pair of vectors,explain the decreasing value of rmse as dimensions increase,compute rmse between pairs of vectors and select the smallest",4,,,"find the nearest pair of points in 1000 points in R^50,""Compute the magnitudes of random vectors in R^3, R^10, and R^1000""",High Dimensionality Demo,"""Experiment with RMSE in R^1, R^2, R^3, R^10, and R^100""",High Dimensionality,,Machine Learning Core,4,1,4,3,0,2,,4/23/2018 12:05pm,recNwjyxBKrTkLz2K
Presenting for the public: LaTeX and D3,checked,"Every Machine Learning (ML) tutorial that you find on the internet is there because someone collected their knowledge into a presentation. Because ML always involves discretion, intuition, and interpretation of results, presenting is a fundamental part of your job.

This module teaches you to use what I think are the two most important presentational tools in a ML expert toolset: LaTeX for writing reports that you share with colleagues, and D3 (the web framework) for building presentations on the web that you can share with anyone.",,"""create a simple website with a description, data, and d3 template"",find suitable d3 template projects for great web presentations,write a short LaTeX report about results,create math equations in LaTeX",4,,,"modify a d3 template to source your own data,Write python code that matches LaTeX equations",Presenting for the public: Data Driven Design (D3),"Write a presentation using LaTeX with equations,Make a website based on D3",Presenting,,Machine Learning Core,4,1,2,1,0,1,,4/23/2018 12:05pm,rechzxpc1i47l4Oyf
Clustering,,,"* Clustering
* Association rule learning","give two examples of unsupervised learning providing new insight via data mining,identify other unsupervised ML models other than clustering,describe the general implementation of two clustering algorithms",3,,"DS1: Clustering with Ryan Allred,Clustering for DS2 w/ Ryan Allred,Clustering for DS4 w/ Ryan Allred","Calculate point distances in R^2 and R^3 from 10 different centroids,""Find the shortest pairwise set of points in a dataset of 100,000 in R^5""",Unsupervised Learning,"Use an existing clustering implementation to gain an insight on a dataset from Kaggle,Write k-means clustering from scratch in python against 1000 points in R^15","Unsupervised Learning,Unsupervised Learning",,"Machine Learning Core, DS - Annex",3,1,0,0,0,1,,4/23/2018 12:05pm,recqIvM6Ez7ZTlRnf
Supervised Learning,,"* Logistic Regression
* SVM
* Gaussian Mixture Models
* Neural Nets",,"save a model parameterization for use during productization,evaluate results in the context of business objectives,adjust hyper parameters of three supervised learning algorithms,run a library for three supervised learning algorithms,introspect any dataset to prepare for ML modeling,approach a new dataset with the goal of improving the above objective,reason about an ML problem from a business perspective",7,,,,Supervised Learning,"Build an ROC curve from the following three prepared training results,Classify a Kaggle dataset using three models available in numpy and tensorFlow",The Machine Learning Framework,,Machine Learning Core,7,1,2,2,0,1,,4/23/2018 12:05pm,rectmPKo54Q6bfbPd
Convolutional Neural Networks,,"Convolutional neural networks are a deep learning architecture that further draws from biological inspiration, using a neuron connectivity pattern that resembles the visual/receptive fields of a real brain. Neurons are more or less receptive to different parts of the input, depending on the transformation (convolution) that is applied.

The resulting models are extremely effective at image recognition and classification problems, requiring little data pre-processing and exhibiting results competitive with (or better than!) humans. They can also be applied to other areas, including content-based recommender systems, video recognition, and NLP tagging/predictions.","Overall emphasis - CNN are probably the main success story of NN/deep learning in the past few years, and really are being run by e.g. major tech companies to do things with images.","use transfer learning to run a cutting edge CNN for high accuracy image classification,understand and run a basic CNN with Keras",2,,"DS1: Convolutional Neural Networks with Aaron Gallant,Convolutional Neural Networks for DS2 w/ Jon-Cody Sokoll",,,,Major Neural Network Architectures,,DS - Machine Learning,2,1,0,0,0,1,,4/23/2018 12:05pm,recqHJdPj1QXiVpAP
Deep CNNs,checked,"This is more important than learning to write a neural net from scratch.

Deep Convolutional Neural Nets are George Hinton's home run in Krizhevsky, Sutskever, and Hinton's seminal paper ImageNet Classificaiton with Deep Convolutional Neural Networks.

Hinton built a large (aka deep) CNN and ran against a 1000 class image classification problem, crushing the previous SVM-based results. Welcome to the new age of Machine Learning!

Understanding Hinton's NN architecture is our first goal. Understanding how one might optimize this to run on GPUs is our second goal.

Before the class is over, you will be able to run this particular neural network against a remote host, competing with and potentially beating Hinton's great results.",,"explain why Deep Learning depends on remote processing resources,explain in detail the layers and their structure in Hinton's seminal CNN,describe convolution as signal processing,describe convolution mathematically,""use a remote service to implement Hinton's benchmark CNN, with comparable results""",5,,,"Implement 1d and 2d convolution with a simple mask,Describe the exact structure of Hinton's CNN in 2012",Convolutional Neural Networks and Deep Learning,"Create a Google ML Job that runs Hinton's CNN and gets comparable benchmark results.,Create a Google ML Job that runs your convolutional neural network",Major Neural Network Architectures,,Machine Learning Core,5,1,2,2,0,1,,4/23/2018 12:05pm,recjIlnYmfSPu8L3a
Computer Vision,checked,"Photographs are just points in an extremely high-dimensional space. Learn how to process and perform calculations on images.

Computer Vision is an artificial intelligence study for ""teaching computers to see"". The goal of CV is to convert pictures (and video) into semantic labels, actions, and measurements. Most of CV has been concentrated on Object Recognition - labelling objects in a photo or frame in ways that correspond with human labelling. This is very hard problem.

Computer Vision components:
* Iteration
* Convolution
* Scale space
* Feature Vectors
* Mapping

Fundamentally, Computer Vision is iterating over a stored image as a 2d or 1d array and performing convolutions as you iterate, storing results and capturing mathematical details and structure.

Today, the most powerful CV technique is the Deep Convolutional Neural Net, a departure from the above canon. However, learning the fundamentals will enable much better understanding and implementation of even Deep networks.",,"describe three examples of important image processing techniques,find corners in an image,template match a simple template on a black and white image,describe an eigenface",4,,,"Allocate memory for a 2d rgb image with 3 bytes per triple and fill with a pattern,Convolve a template with an image to find the best matching location",Computer Vision and Image Processing,"Soften an image with a gaussian blur convolution,Find the 15 strongest corners in a 200x200 greyscale image",Major Neural Network Architectures,,Machine Learning Core,4,1,2,2,0,1,,4/23/2018 12:05pm,reck8FZDSsfYFQuRB
Computer Vision for Self Driving Cars,,"Automatically piloted cars are exciting upcoming news. They are enabled by careful advances in range finding, gps assisted mapping, computer vision, and input control for vehicles.

# YOLO: Autonomous car detection

https://www.datasciencecentral.com/profiles/blogs/autonomous-driving-car-detection-with-yolo-model-with-keras-in","Object recognition, cost function, edge detection","compute a cost function for a pair of road lines,use the Hough transform to find road lines,describe object recognition and feature collection",3,,,,,,Reinforcement Learning,,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,rechSESO0xcZawTbq
Building an ML Portfolio,,,,"copy data from a spreadsheet or matrix into a d3 website,use heroku to create a simple static portfolio site,make list of three interesting portfolio pieces worth developing into their personal website,build a simple resume showcasing CS and ML skills for job applications,create a website demonstrating PCA using d3 or another JS graphing library",5,,Youtube: Building an ML portfolio,convert a csv of data into a matrix format,Building an ML portfolio,Do PCA on a 15d dataset and plot the 3 best basis vectors in 3d on your website,Presenting,,Machine Learning Core,5,1,0,0,0,1,,4/23/2018 12:05pm,reckXNBrzMQiiWE3L
Simultaneous Location and Mapping (SLAM),,,,"update initial gps map with sensor inputs,use weather data to inform driving behavior,use road data to predict expected speeds and other driving conditions,identify important road objects with CNN,identify methods of correlating road lines with expected gps data",5,,,,,,Reinforcement Learning,,Machine Learning Core,5,1,0,0,0,1,,4/23/2018 12:05pm,rechIQtsotu6Pdtaa
Reinforcement Learning,,,,"fit historical road lines to best fits of the current frame,use the Hough transform to find road lines,identify the reward function of a car attempting to center in the lane,explain the fundamentals of using a reward/punishment for model training",4,,,,,,Reinforcement Learning,,Machine Learning Core,4,1,0,0,0,1,,4/23/2018 12:05pm,recMm5Y0AZPOpYQFa
Support Vector Machines,,,"8



","describe the decision boundary produced by optimizing support vectors,use non-linear kernels in SVM to produce non-linear classification boundaries",2,,,,,,Artificial Intelligence,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,recQlKJ4MMrrK22LL
Evolutionary Algorithms,,,,"describe and implement simulated annealing,describe and implement a basic ant colony optimization,describe and implement a basic genetic algorithm",3,,,,,,Artificial Intelligence,,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,reckXKadBU5F6R6Nr
Google TPUs,,,,access Google TPU computation resources through Google account,1,,,,,,Cloud AI,,Machine Learning Core,1,0,0,0,0,0,,4/23/2018 12:05pm,recwrN1kwYw0PnwHy
Amazon AI,,,,use AWS to configure instances and servers for ML model productization,1,,,,,,Cloud AI,,Machine Learning Core,1,0,0,0,0,0,,4/23/2018 12:05pm,recpZqB13x1YBozbb
Map/reduce,,,"* CouchDB
* Recursive reduce
* Parallelized map
* Large distributed datasets
","use map/reduce functional notation in python code,describe the remote architecture that enables rapid lookup via map/reduce",2,,,,,,Big Data Tools,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,reca4agYVa2IAsb8a
Spark/Hadoop/Hive,,,,"create hadoop server filled with >5GB of indexable data,search and index big data via colab ML project",2,,,,,,Big Data Tools,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,recsXYOrsAYSEHgj6
Project CNN Reproduce Hinton's Benchmark,,,Deep Convolutional Neural Nets are better at image classification than any preceding algorithm by leaps and bounds. Being able to compare your models to Hinton's will make you able to identify what the next great algorithms are.,"read and review Hinton's paper,understand the techniques in convolutional neural nets,find and train against the ImageNet database",3,,,,,,"Portfolio Projects,Portfolio Projects 1",,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,recTrr14RioBGjNlR
Project Predicting Real Estate Market,,,"Kaggle has phenomenal real estate data available from Zillow. Estimate what the future prices of homes in your neighborhood will be, create new and better metrics for predicting home sales, and put the American Association of REALTORS(tm) out of business!","predict location of home sale based on data,predict future real estate inventory availability,predict cost of future home sales",3,,,,,,"Portfolio Projects,Portfolio Projects 1",,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,rec16VP1qSGZv8UID
Project Kaggle Contest,,,"Project Kaggle provides an awesome collection of great datasets to train and test your Machine Learning algorithms. If you can get a better score than anyone ever has before on a Kaggle dataset, you might get paid!","join online kaggle competitions,download and clean competition dataset from Kaggle,""select, configure, and train a model to produce competitive results"",submit classification results back to Kaggle contest for scoring",4,,,,,,"Portfolio Projects,Portfolio Projects 1",,Machine Learning Core,4,1,0,0,0,1,,4/23/2018 12:05pm,recol8jUrhOyaamtw
Project Email Content Clustering,,,Text processing is great for advertising and government monitoring. Lets identify relationships between email messages and then classify new ones.,"identify information about the sender and receiver based on text content,propose a model to classify emails based on their content,obtain access to an interesting email content database",3,,,,,,"Portfolio Projects,Portfolio Projects 2",,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,recCfvWQD67dWBt6y
Project Building Alexa,,,"In this project, we will pursue an ensemble of ML techniques that can match spoken english language to written sentences and their grammatical form.","tokenize a written verbal command into a software API,convert audio signals into written text,explain programmatic concepts in audio processing",3,,,,,,"Portfolio Projects,Portfolio Projects 2",,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,recCnq6VhfeBPqet9
Project NN Recognizing Handwritten Digits,,,"One of the most canonical cases of useful applications of Machine Learning. Neural Nets have been accurately classifying handwriting at the post office, and so can you!","load MNIST data,train a model to recognize letters from the MNIST database,""productize a system to classify new, freshly written digits""",3,,,,,,Portfolio Projects 3,,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,recTkyhVYNFHjxn0y
Project Copy Deep Dream Generator,,,Deep dream is one of the coolest things to come out of deep learning. Google's image processing system has become powerful enough to create hallucinogenic pseudo-images that reflect subconscious image processing in the human brain. Lets do it too!,"build or utilize a strong CNN for image classification and training,create images from principal dimensions of a trained model,create an image input after selecting an output class",3,,,,,,Portfolio Projects 3,,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,reckAEDHC0bSYuxhH
Ordinary Least Squares Regression,,"Ordinary Least Squares Regression is the most basic model in the Machine Learning (ML) toolkit. It is the basis for mathematical prediction of unknown (or unobserved) values and is the inspiration of many ML models.
",,"use the matrix method to manually compute linear regression,predict a vertex value v_i from v_0...v_i-1 via linear regression,predict a vertex value v_i from v_0...v_i-1 via cubic regression,use gradient descent to manually compute linear regression,""explain how regression is the simplest model for """"learning"""" `y = f(x)`""",5,Regression PDF,"DS1: Linear Regression with Ryan Allred,Regression for DS2 w/ Ryan Allred,Ordinary Least Squares Regression w/ Ryan Herr",,,,"Modeling,Regression",,Machine Learning Core,5,1,2,0,0,1,,4/23/2018 12:05pm,recwo9lYfEc7iPmfV
Containers,,,,"anticipate platform inconsistencies and incompatibilities with ML software,build docker containers",2,,,,,,Computer Architecture,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,rech7JZX2z7crcUCz
Monoservices and microservices,,,,"describe how the internet works,describe how computers work at an architectural level",2,,,,,,Computer Architecture,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,reczEtqr9DdxBqx7O
Operating Systems,,,,"identify the difference between local and remote OSes for ML purposes,knows the three fundamental jobs of an operating system,list operating systems used in the ML world",3,,,,,,Operating Systems and Parallelization,,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,recIrF189uI5U8cu0
Parallelization,,,,"understand in which cases it is possible to spread out the work across different cores,describe a simple way of parallelizing a NN model training,describe a simple way of parallelizing a convolution",3,,,,,,Operating Systems and Parallelization,,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,recIlY1SyjLjOfkT3
Make C do linear algebra,,,,"compare the performance of LAPACK native C with that of python LAPACK,write convolutions and other matrix operations from scratch",2,,,,,,C Programming: Get 'er done faster,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,recK2NdLoP4FOn8eN
Call C from python,,,,"load and write a basic function to import via Cython,import a C library for use in python",2,,,,,,C Programming: Get 'er done faster,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,rec56jFCg0LRrnBLw
CS Algorithms,,,,"write and optimize BFS and DFS,create and describe Hash map algorithms,create array algorithms,list three NP-Hard/Complete algorithms that can't be solved with algorithms",4,,,,,,Algorithms and Theory,,Machine Learning Core,4,1,0,0,0,1,,4/23/2018 12:05pm,rec6xzhwXABiLKMup
Deep Learning,,,,"write ML code that takes advantage of GPUs,describe the expected speedup available when using GPUs or TPUs,productize an ML model for execution on the cloud or on local GPUs",3,,,,,,"""CUDA, OpenCL, and Shaders""",,Machine Learning Core,3,1,0,0,0,1,,4/23/2018 12:05pm,recQdTvLPVLTzSdeE
Shader Programming,,,,"load and utilize CUDA,load and utilize OpenCL,run ML training code on a GPU,explain how to perform GPU synchronization to parallelize deep learning",4,,,,,,"""CUDA, OpenCL, and Shaders""",,Machine Learning Core,4,1,0,0,0,1,,4/23/2018 12:05pm,rec9nGz3NIeu4oDSA
Capstone Week 1,,,,,0,,,,,,Capstone Week,,Machine Learning Core,0,0,0,0,0,0,,4/23/2018 12:05pm,recgeDXLNXD82VtLn
Capstone Week 2,,,,,0,,,,,,Capstone Week,,Machine Learning Core,0,0,0,0,0,0,,4/23/2018 12:05pm,recqNmyqeNCATPXQE
Capstone Week 3,,,,,0,,,,,,Capstone Week,,Machine Learning Core,0,0,0,0,0,0,,4/23/2018 12:05pm,recdVr9eEjffXs2BI
Product for Hire,,,,,0,,,,,,Marketing Week,,Machine Learning Core,0,0,0,0,0,0,,4/23/2018 12:05pm,recgbur5iBj6ulAyD
Natural Language Processing - Introduction,,"Natural Language Processing (NLP) is experiencing significant growth; it is being used everywhere from search engines to voice interfaces such as Amazon Alexa or Siri and is increasingly playing a central role in our daily lives. 

In this session on NLP, we will cover a number of key concepts including 1) Tokenization 2) Analyzing Sentence Structures 3) Named Entity Recognition 4) Information Extraction and Text Classification  5) Sentiment Analysis and 6) Building a Custom Corpora

As we step through the different topics, we will use Python 3.0 and make use of Natural Language Toolkit (NLTK) and spacy to get hands-on with text processing. NLTK and spacy (a more recent introduction) are comprehensive Python libraries for natural language processing and text mining/analytics. 

Some terms that you need to be aware of:

Corpus (singular) – is a body of text. The plural of the term is Corpora. An example is a collection of architectural journals

Lexicon comprises of words and their meanings. Various fields will have different lexicons. There is a lexicon for doctors, financial professional, mechanics, etc.",,"Tokenize a body of text,Filter out Stop Words,Utilize stemming to derive the base form of a word,Understand how Lemmatization differs from Stemming",4,,"DS1: Introduction to Natural Language Processing with Ryan Allred,Natural Language Processing - Introduction for DS2 w/ Jon-Cody Sokoll,Finding words and Phrases with Spacy",,,,"Natural Language Processing,Natural Language Processing",,"Machine Learning Core, DS - Machine Learning",4,1,0,0,0,1,,4/23/2018 12:05pm,rec5r3BWhwU0xnsUg
Comparing documents or words,,"A common task in NLP is to determine the similarity between documents or words. In order to facilitate the comparison between documents or words, we will utilize vectors. 

A vector contains a sequence of numbers; therefore, comparisons are possible since you can measure the difference between the numbers. In this section, we will be converting documents and words to vectors. We will make use of ""Gensim"" which is a free Python library. 

More details on Gensim is available here:

https://radimrehurek.com/gensim/intro.html
","Students will need to install Gensim. Instructions on how to install Gensim is provided here:

https://radimrehurek.com/gensim/install.html
","Determine document similarity using TF-IDF,Leverage Word Vectors (Word2vec)  to compare words",2,,,,,,Natural Language Processing,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,reccUhgpnhIR73wBm
Sentiment Analysis,,"Sentiment Analysis which focuses on analyzing sentiment of various text resources ranging from corporate feedback surveys to movie reviews is probably the most popular application of text analytics. The main aspect of sentiment analysis is to analyze a body of text in order to decipher the opinion expressed by it including factors like emotion, feelings and mood. 

Sentiment Analysis works best on text that has a subjective context rather than an objective context. When a body of text has an objective perspective, it usually reflects real factual statements with no emotion or feelings associated with it. In contrast, subjective text includes opinions encompassing emotions and feelings that are expressed by humans. Given the proliferation of social media channels, Sentiment Analysis is increasingly being leveraged by a host of entities (be it a business, a public sector organization, government, etc.) to extract the subjective and opinion related information like emotions, attitude, mood and use the extracted subjective information to the detect the sentiment of people.

Sentiment analysis can be defined as a classification problem in which the classification is either —binary classification (positive or negative) and multi-class classification (positive, negative, or neutral). 

In this module, we will explore a range of related topics encompassing 1) Constructing a Sentiment Analysis Model, 2) Determining the subjectivity of text, 3) Examining the intensity or polarity of a sentiment and 4) Performing sentiment analysis on tweets. As we step through the topics, each subsequent topic will build on the previous one. We will start off with text classification for sentiment analysis.",,"Classify text in preparation for Sentiment Analysis,Utilize Sklearn within NLTK,Utilize a Sentiment Dictionary to decipher the sentiment of text,Build a Twitter Sentiment Analyzer,Graph sentiment polarity extracted from tweets",5,,,,,,Natural Language Processing,,Machine Learning Core,5,1,0,0,0,1,,4/23/2018 12:05pm,recUwnXc4GYS4NcJv
Diagnosing the structure of text,,"In this session, we will leverage a range of related techniques to uncover the structure of text. The first technique that we will examine is Part-Of-Speech tagging (POS) which is used to label words in a sentence as nouns, pronouns, adjectives, verbs, etc. Following that, we will explore the concept of ""Dependency Parsing"" which parses a body of text to uncover chunks of meaning and relations. Then, we will look at how to find the ""head"" of a sentence which denotes the most important word in the sentence. Finally, we will review the topic of ""Named Entity Recognition"" which helps in finding named entities within sentences such as places, people, things, monetary figures, etc.",,"Use Part-Of-Speech (POS) Tagging to label words in a sentence,Utilize Dependency Parsing to glean chunks of meaning and relations,Determine the head of a sentence,Find Named Entities in a body of text",4,,,,,,Natural Language Processing,,Machine Learning Core,4,1,0,0,0,1,,4/23/2018 12:05pm,recUrvgxCW57oGCQm
Statistics Foundations,,"Statistics can help us compute uncertainty. It can help us decipher whether results are providing us with a true representation of a situation, or whether the results are presenting us with a biased view. In this session, we will start off by reviewing the mathematical concepts required to get a better understanding of the shape of the data. We will hone in on the following 2 topics:

1) Explore the spread or variability (i.e. standard deviation) of the numbers in the data set
2) Compute the “Z-Score” i.e. how many standard deviations do the data points lie from the mean

We will build on the concepts learned in this session in the subsequent sessions within this module.



 
",,"Compute Standard Deviation to get an understanding of spread of the data,Compute the “Z-Score” to determine how many standard deviations do the data points lie from the mean",2,,,,,,Probability and Statistics,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,recrQskz8wFVtogr7
Probability Demystified,,"The most basic definition of probability is what is the likelihood that an event will take place. For example: What is the chance that it will rain tomorrow? What is the chance that I will get 2 3's on the next roll of the dice? What is the probability that the Golden State Warriors will win the NBA championship in 2018? Probability is usually depicted as a ""ratio"" or a ""percent"" and is computed by dividing the desired outcome by the total # of possible outcomes. 

A key point to note is that the probability of all possible outcomes will sum to 100%. To illustrate this point, let's look at an example: When you toss a coin, you can can either a heads or a tails. What is the probability of getting a heads? It is 1 (desired outcome) divided by 2 (# of possible outcomes). There is a 50% chance you will gets a heads and there is a 50% chance you will get tails. The sum of all possible outcomes is 100%.

In this session, we will cover the following range of topics:
1) Probability of multiple events (including Bayes Theorem)
2) Model continuous random variables with a Probability Density Function",,"Compute the probability of multiple events,Model continuous random variables with a Probability Density Function",2,,,,,,Probability and Statistics,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,recO34vQRS9Gp12PJ
"Sampling, Confidence Intervals and Hypothesis Testing",,"In this module, we will cover *sampling* and other key topics related to sampling such as *confidence intervals* and *hypothesis testing*. Sampling is a process that is related to the selection of individual observations; it helps us make statistical inferences about the population. Accumulating all the information about the population (a census) is time consuming and expensive. Therefore, sampling is performed to make inferences about the population. In sampling, we assume that samples are drawn from the population and sample means and population means are equal. 

Given that a sample is a group of individual observations drawn from a population, the # of individual units or observations that constitute a sample is known as the sample size. Since the intent of the sample is to provide a representative picture of the entire population, the larger the sample size, the more accurate is the measurement and the more confidence we have that the sample is actually representative of the whole population. 

We will delve further into sampling and sample sizes which will help us grasp the topic: What is the standard error of a sample? Let's say we have a distribution of continuous random variables. From the distribution, we take a sample of 10 observations and plot the average of the 10 observations.

We repeat this exercise several times, on each occasion we gather a sample of 10 observations from the distribution and plot the average of the 10 observations. As we keep repeating this exercise, the sampling distribution of the sample mean will represent a normal distribution.

If we were to repeat the entire exercise with larger sample sizes, the curve would become narrower, taller and the standard deviation would be tighter. You will notice that with larger sample sizes, the sample mean will approach the population mean. The Standard Error (SE) tells you how far your sample mean deviates from the population mean.

Remember, the larger your sample size, the closer your sample mean is to the actual population mean. Note that the Standard Error is very similar to the Standard Deviation. Both are measures of spread. The higher the number, the more spread out your data is.

However, there is a key difference between the Standard Error and Standard Deviation. The standard error uses statistics (i.e. sample data) whereas the standard deviation uses population data. The standard deviation of the sampling distribution of the sample mean is also called the standard error of the mean and is computed as follows: sd of sampling distribution of sample mean/square of n (i.e. sample size).","Focus simple and frequentist first, and proper interpretation of results. Also discuss IID sampling and pitfalls.","determine the level of confidence for a possible outcome,use hypothesis testing to determine an outcome is significant or just the result of chance",2,,"""DS1: Sampling, Confidence Intervals and Hypothesis Testing with Aaron Gallant"",""Sampling, Confidence Intervals and Hypothesis Testing for DS2 w/ Aaron Gallant"",""Sampling, Confidence Intervals and Hypothesis Testing for DS3 w/ Ryan Allred"",""Sampling, CI, and Hypothesis Testing for DS4 w/ Ryan Allred"",""Sampling, confidence intervals and hypothesis testing for DSPT1 w/ Alex Kim""",,,,Statistical Tests and Experiments,,DS - Statistics Fundamentals,2,1,2,2,2,4,,4/23/2018 12:05pm,recSyGHdvxNJxWob7
Model Tuning,,"
* Cross Validation
* ROC
* Test/Training/Validation sets
* Hyper parameter tuning
* Loss minimization
",,"can use an AUC library to validate a set of experimental results,can describe with some proficiency what AUC means,manually select a test/train/validation set to run a single controlled experiment,use grid search to automatically explore some hyper parameters,""disambiguate a """"hyper parameter"""" from a """"parameter"""""",identify available hyper parameters for tuning,use cross_validation library to run many experiments",7,,,"Separate a dataset into 5 specific test/training sets,identify the accuracy and precision of 3 sets of model result data",Hyperparameter Tuning Lecture,,The Machine Learning Framework,,Machine Learning Core,7,1,2,2,0,1,,4/23/2018 12:05pm,recDUyEkrAnHJVQd3
Goodness of fit,,"The Goodness of fit test is utilized to conduct hypothesis tests in order to compare 2 or more populations. In this module, we will leverage the ""Chi-square"" technique to compare 2 or more populations. Note that the ""Chi-square"" method is the appropriate choice when evaluating ""categorical"" data sets. 

Now let's review an example of a data set wherein it makes sense to leverage the ""Chi-square"" technique to compare 2 or more populations. 

At a medical conference, a hospital supervisor reported that at the hospital she oversaw, historically, the rate of admissions for cardiac emergencies by season of the year were as follows:

35% of admissions for cardiac reasons were in Winter 
25% of admissions for cardiac reasons were in Spring 
20% of admissions for cardiac reasons were in Summer and Fall

In order to verify whether the rate of admissions for cardiac emergencies followed the stated seasonal distribution as depicted above, the rate of admissions by season for last year were gathered. 

For the 300 total admissions for cardiac emergencies for last year, 
30% of admissions for cardiac reasons were in Winter
20% of admissions for cardiac reasons were in Spring 
25% of admissions for cardiac reasons were in Summer and Fall

Now we want to examine whether the observed frequencies for the last year provided sufficient evidence to support the seasonal rates of admissions for cardiac reasons? How do we perform this validation? We will utilize the Goodness of Fit Test or in this case the “Chi-square” technique.

To summarize, the Goodness of Fit Test will help us determine whether our observed data for last year follows the “historical” probability distribution.
",,"""Use the """"Chi-square"""" technique to compare 2 or more populations""",1,,,,,,Probability and Statistics,,Machine Learning Core,1,0,0,0,0,0,,4/23/2018 12:05pm,recmu15maSOsMedFG
An Overview of Regression Analysis,,"Regression helps ascertain the relationship between 2 variables. For example: does greater preparation lead to higher scores on the Chartered Financial Analyst (CFA) Exam? 

Let's say we have the following data:

Student             Preparation Time (weeks)             Exam Score

John                  One                                                80%
Sally                  Two                                                85%
Roger                Four                                               90%
Matt                  Two and a half                               75%
Thomson           Three                                             95%

We can express the above data plots in a scatter plot with the X axis representing the # of weeks in preparation time and the y axis representing the exam score. The objective of regression is to identify a line that will fit the data points.  We are not going to have a single line that can touch each one of the data points, so regression analysis tries to locate the formula for the line that will best fit the distribution at hand.

The objective of regression is to identify a line that will fit our data points.  We are not going to have a single line that can touch each one of the data points, so regression analysis tries to locate the formula for the line that will best fit the distribution at hand.

In this module, we will learn how to arrive at the formula for the regression line. We will get exposed to 2 key concepts:

We will use R-Square to determine whether the regression line is a good fit for the data.

The correlation coefficient which will provide an insight into the tightness of fit of our data points.",,"Compute R-squared to determine whether the regression line is a good fit for the data.,Use the correlation coefficient to examine the tightness of fit of the data points.",2,,,,,,Probability and Statistics,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,recRnhZCsyCsfxJPn
Data Preparation: An Overview,,"Data comes in many shapes and formats. Data can be structured, semi-structured or unstructured. It can be numeric, in the the form of paragraphs of text, and even in picture form such as charts, graphs and maps. Given that data comes in many forms, it is important to prepare the data before it can be used to train your Machine Learning algorithms.

Data preparation involves a range of activities from 1) joining two or more data sets together to 2) reducing data sets to only a select group of variables to 3) cleansing data to eliminate anomalies such as outlier observations or missing data to 4) re-formatting data for consistency purposes.

The more disciplined you are in preparing your data, the more consistent and better results you are like likely to achieve from your Machine Learning algorithms. The process for getting data ready for training a machine learning algorithm revolves around 3 key steps:

1. Selecting the data
2. Pre-processing the data i.e. treat missing values and eradicating duplicates
3. Concatenating and Transforming the data 

In this module, we will touch on each of the aforementioned topics.","Please note that you came want to cover the topic of ""Feature Scaling"" as part of Data Preparation after you have covered the topics listed below. I have included instructions on Feature Scaling here:

https://colab.research.google.com/drive/19bqF_uYLjDwKiOV9W_AdDs-pQb9fAFoC#scrollTo=oI5L8p-ua5Wa
","Select and filter the data - the first step in the data preparation phase,Treat missing values and de-duplicate data - the second step in the data preparation phase,Concatenate and Transform data to get it ready for the ML algorithm - the 3rd step in the data preparation phase",3,,,,,,Data and Visualization,,Machine Learning Core,3,1,0,1,0,1,,4/23/2018 12:05pm,recJlTx1zW7tCWXz7
Association,,,,"identify frequent itemsets and association rules,use matrix factorization to identify user ratings and movie ratings",2,,,,,,Unsupervised Learning,,Machine Learning Core,2,1,0,0,0,1,,4/23/2018 12:05pm,recm1Sh1g8eqlKCYc
Data Structures,checked,"Up through this point, as you have been working through the Web curriculum, even though data structures were never officially introduced, you were making extensive use of them all the time. Python lists and dictionaries are so useful and versatile that they were included as standard in the language. 

Indeed, data structures are extremely prevalent and fundamental when it comes to understanding programming and computer science. By the end of the Computer Science curriculum, you'll have a good idea of the answers to important questions that were raised during the web curriculum such as 'how do web servers such as Express effectively and efficiently handle hundreds or thousands of concurrent requests simultaneously?' or 'how does a database like MongoDB organize the data that it stores in such a way that it can then retrieve it as quickly as possible?'. Such questions can be answered in part by having an understanding of both the wide berth of all the currently-existing data structures that have been dreamt as well as an adequately deep understanding of how many common data structures work.  

As part of your first Data Structures sprint, we'll be learning about and implementing some very common and fundamental data structures that are very often used to implement more complex and specialized data structures. These are the:
 
 - Linked List
 - Queue
 - Binary Search Tree
 - Heap

Each of these data structures has its own associated strengths and weaknesses. Think of each of them as a tool in a toolbox. You have entirely different classes of tools such as hammers and wrenches that are each used for entirely different use cases. You also have multiple types of screwdrivers. Both are used for tightening and untightening screws, but the Phillips screwdriver is better for certain screws and the flathead screwdriver is better for other types of screws. 

The same can be said of data structures. There are many instances of wildly different data structures that serve entirely different use cases, and then you have data structures that _can_ both perform the same function, but one will be better at it than the other.  More specifically, you _could_ emulate the functionality of a JavaScript Array using an Object, but an Object isn't going to perform as efficiently when it comes to certain tasks that Arrays are really efficient at. 

## A Note About Data Structures in Different Language Contexts
Let's go back to the topic of linked lists seeming redundant in Python. Why do we need to learn about linked lists when Python already provides for us such a full-featured array implementation (via lists) that can already do everything a linked list can do? Sure, linked lists have marginally better performance on certain operations when compared to arrays, but does that really justify the existence of the linked list data structure? 

These are all entirely valid points; working in Python _does_ obviate the need to implement certain data structures such as linked lists and hash tables. This brings us to a core tenet of the Computer Science curriculum: the material that you'll be exposed to and learning about in the Computer Science curriculum will be almost entirely language-agnostic. Seasoned developers and programmers learn to sever the connection between coming up with a solution to a problem they're facing, and actually implementing that solution. That probably doesn't mean a lot right now, but as you go on to expand your knowledge horizons by learning about other programming languages such as C, you'll come to realize that different languages place different constraints on the programmer. Notably, in C, there is no full-featured array implementation. There's also no built-in hash table. Thus, you'll find that when it comes time to work in C, knowing how to implement data structures that seem obsolete in Python will have a payoff.

## Additional Resources

1. https://www.interviewcake.com/article/python/data-structures-coding-interview?course=dsa does a great job of motivating and introducing most of the data structures we cover in this sprint. 

2. A great video explaining heaps and how they work: https://www.youtube.com/watch?v=WCm3TqScBM8","# Day 1

_____________
@channel Good morning! On deck for today:

1. Some solutions for Algorithms
2. Why Data Structures?
3. Some data structure fun: reversing a linked list
_____________



Get an idea for how to organize solution lecture, since you probably won't have enough time for it all:

```
/polly ""If we were going to only cover one Algorithms solution, what would it be? (We'll cover more--just using this to prioritize.)"" ""Stocks"" ""Recipes"" ""Stairs"" ""RPS"" ""Change"" ""Knapsack""
```
Day 1 wrap up:

_____________

@channel For today and tomorrow, hack on Data Structures:

https://github.com/LambdaSchool/Data-Structures

This is a 2-day module, so however you want to split this code over two days. Recommendation:

Day 1: Linked List, Queue, and some of BST
Day 2: BST and heap

For videos, see all the material in trainingkit: https://learn.lambdaschool.com/cs/module/recuhkmtdyvwmexmz

Remember the 20 minute rule: if you make zero progress for 20 minutes, reach out on the help channel.

Happy hacking!


______________

A few topics that can be covered during live lecture are:
1. Binary search. An interesting application of binary search is the `git bisect` command for debugging codebases. 

Point students to the resources linked to Big O notation and algorithmic analysis as pre-class resources for them to look over before actually starting the sprint.

https://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/

https://www.interviewcake.com/data-structures-and-algorithms-guide","enumerate how heaps work as well as what some of their pros and cons are.,enumerate how binary search trees work as well as what some of their pros and cons are.,enumerate how queues work as well as what some of their pros and cons are.,enumerate how linked lists work as well as what some of their pros and cons are.",4,Data Structures: Overview,,,,Data Structures,Data Structures,Active,"Computer Science, DS - Computer Science",4,1,4,4,4,4,,4/30/2018 5:26pm,recuhKMtdYvWMeXMz
Classification,,,,"calculate `k=0` and `k=1 of small logistic regression set of equations,evaluate the results of the predictions using root-mean-squared-error,make predictions using a test set on the trained model,choose a training set and train a logistic regression model with it,use logistic regression to classify Titanic data",5,,,,,,Modeling,,Machine Learning Core,5,1,0,0,0,1,,5/4/2018 2:54pm,recqNARYGVtJFXwtz
Brownbag Presentations,,Lambda School Guest Lectures.,,,0,,"Android Development,Pair Programming Demo for All Students w/Johnathan Justinn and Perry Ahern,""Text Editing, Git, and GitHub"",Web App Security Vulnerabilities,The Viper Architecture for iOS,GraphQL,.NET Core,How to Freelance,The Interview Playbook: Nailing Behavioral Interviews,Design Good Tech,.NET Entity Framework Core,Lightning Talks for Success with Lambda Staff,Planning Like a Pro,Your Choice: A Mental Framework for Success on Your Terms,Computer Vision in the Browser,First Experiences at Work,Building a Transit App for the Blind,Creating Iteration from Scratch in JS,Dijkstra's Algorithm,How to Wow Our Company Presenters,Git Workflows on Enterprise Scale,Equity Compensation and Stock Options,Personal Finance Bootcamp (Updated),Basics of Successful WebDev Freelancing,How to Get Hired,CS10 Capstone Demos,Visual Studio Code Live Share,My Worst Interview Ever,Hiring Partner Panel Discussion,Data Science/ Machine Learning Capstone Demo,Job Search Process,Imposter Syndrome,Vue.js,Better Living Through Components,How to Craft a Killer Outreach Email,CS9 Capstone Demos,UX Copywriting,Ten Things to Do in a Career Transition,Hustling For Your First Developer Job,Closures in JavaScript,The Power of Powershell,Ruby on Rails Crash Course,Getting Started with Information Architecture,JWT: Straight from Docs,CS7 Capstone Demos,Build Charts in React Using React-Chart,Navigating Jr Dev to Sr Dev,Learning on the Job/Imposter Syndrome Brownbag,Linked Lists in C,Personal Finance Bootcamp,Big O Notation,Insertion Sort,Intro to Firebase,Intro to Gatsby,GitHub/Git Best Practices,CS6 Capstone Demo,Inclusion in Tech,How to Solve NLP,CS5 Capstone Demo,React Context,User Testing Crash Course,CS4 Capstone Demo,CS3 Capstone Demo,Modern JavaScript Tooling,Web Engineering,Log All The Things,Startups and VC Funding,Typescript,Git and Emacs,Penetration Testing,JavaScript Debugging,Promises,State of Lambda School,Command Line Interface,Product Management,CS3 Capstone Practice,CS2 Capstone Demos,Parallel Algorithm Design,Personal Finance for Beginners,Hadoop and Big Data,Intro to Unity,Intro to Machine Learning,CS1 Capstone Demo,CS1 Capstone Practice (Pt. 1),CS1 Capstone Practice (Pt. 2),Intro to Docker,React Testing with Jest,The Modlet Pattern,Open Source Software,Making Music,LABS8/CS11 Capstone Demos,React Next,Lambda School Winter 2019 Hackathon,Async Assembly,Progressive Disclosure w/Alec Davis",,,,Brownbags,,Brownbag Presentations,0,0,0,0,0,0,,5/12/2018 9:36pm,rec1B2Ztk60TSVVe3
Lambda Labs Kickoff,,"Welcome to Lambda Labs! During this kickoff, you'll get into your teams, and learn how to succeed at Labs by following best practices for how to work together in a team to deliver an awesome product by the end of your time here.

Here's a quick reminder of what Lambda Labs is all about:

Lambda Labs is our immersive capstone experience. Students will be split in to small teams and assigned a project to work on and a PM to work with. 

Each team will start the week with a Trello board full of tasks to complete, wireframes, and a design document. This experience will look and feel like a job at a real world dev shop. 

Students will start each day with a stand up meeting, led by their PM, they’ll have sprint objectives to complete, participate in code reviews and pair programming, and have a client to impress. 

We also focus heavily on “Job Interview Preparation” during Lambda Labs so students will participate in mock interviews and whiteboard interview practice sessions as well as workshops lead by our Career Services team. The Career Services curriculum is documented in a separate Sprint.

The Labs experience culminates with a Capstone Defense, where each student individually will present their capstone project to a panel of Lambda School instructors, staff, and outside hiring partners. This is the “Final Exam” of the program.","Before delivering the Lambda Labs Kickoff, you'll need to have completed the following:

* Ensured you have proper Project Manager staffing
* Project Descriptions
* Project Trello boards
* Themeforest theme for each project
* Business requirements spec for each project

You'll also need to have completed the Project Draft. To do so, do the following:

* Send out a job application-like form to incoming students to get a feel for personality, fit, interest, etc. (including asking who they might want to work with, and who they definitely would not want to work with)
* Invite the Project Managers who've been working with the students, and the instructor who most recently worked with them
* Create a spreadsheet with a projects column and spaces for each of the students
* Divide the students to create equitable teams, dividing up students who will need more attention, and the all-stars

Here's an example of a message you might send to incoming students before this module:

> (Insert Ryan's cool message here.)","track progress using the kanban(Trello) board.,attend all team meetings and Labs events,complete assigned tasks,contribute to high quality standup meetings,use asynchronous communication tools to communicate with your teammates,follow a consistent branching strategy using git and GitHub",6,,"How to create a GitHub Organization for Labs w/ Ryan Hamblin,How to Create a Product Canvas (TDD) for Labs 12 w/ Alice Karsevar,How to Scope and Analyze Sprints for Labs w/ Alice Karsevar",,,,,,,6,1,0,0,0,1,,5/24/2018 12:15pm,recgJ2XQEjQ5ZgpTa
,,,,,0,,,,,,,,,0,0,0,0,0,0,,5/29/2018 1:04pm,rec1s2bO4VEDlBmFl
Project Milestones - Start Up,,"In the first sprint, students will focus on building a team and getting a strong start to their project.","This sprint is critical for getting all of the teams off to a strong start.  There are a few major risks that are commonly present in the first sprint:

* Cowboys trampling over their teams:  Often the strongest coders will completely ignore the process and their teams and simply start doing a large amount of work without talking to anyone or pulling tasks.  Strong adherence to the standup reporting process will mitigate this on the first or second day.  It is critical that the PMs are aware of what everyone is actually working on.

* Pre-production hell:  When faced with an intimidating array of new tasks, some teams will get bogged down in ""research"".  They will want to try out different APIs, explore deployment platforms, and do many other things that feel like work but don't really result in tasks getting done.  This is not the focus of the first sprint, except for consideration of deployment platforms.  Ensure that the teams are not researching feature-related items and keep them focused on standing up the servers and database.  Encourage them to make decisions after a short conversation, rather than a lengthy evaluation of options. It is almost always better to just try it and change things if they don't work.  ","work with a team to implement user account models,work with a team to deploy the front and back end servers for their project,work with a team to analyze a technical specification and plan an approach to meeting it.",3,Labs I - Team Rubric,,,,,Labs I - Project Planning,,Lambda Labs,3,1,3,3,0,3,,5/29/2018 1:11pm,recKwS1IlnGMC5KtB
Labs Career Services,,,,"pass off resume,submit portfolio for capstone defense ",2,,,,,,,,,2,1,0,0,0,1,,5/29/2018 1:12pm,recjI0OTmMlSBgxSe
Project Milestones - Feature Complete,,"During this sprint, students build out the main functionality of their application. The sprint culminates in a functional demo of all features of their application.",,"work with a team to interpret a wireframe to deliver all features in the design specification,work with a team to apply an appropriate responsive design to ensure that the features of the application can be accessed regardless of the user’s device",2,Labs III - Team Rubric,,,,,Labs III - Understanding Scope,,Lambda Labs,2,1,0,0,0,1,,5/29/2018 1:19pm,recSeKRealVuWndA5
Project Milestones - Presentation,,,,"work with a team to deliver a product that allows an end user to easily access all of the applications functionality without needing to be trained or taught.,""work with a team to deliver a product that an end user will perceive as being done, professional looking, and largely similar to the other apps and sites the use every day""",2,Labs IV - Team Rubric,,,,,Labs IV - User Testing and UX Planning,,Lambda Labs,2,1,0,0,0,1,,5/29/2018 1:19pm,recGlKTG65GBq1OHj
Labs Capstone,,,,"deploy a complete and polished app to production and manage initial user acquisition.,self-evaluate performance in capstone defense.",2,,,,,,Labs VII,,,2,1,0,0,0,1,,5/29/2018 1:19pm,recXe04ul7AiEtNTC
,,,,,0,,,,,,,,,0,0,0,0,0,0,,5/29/2018 1:28pm,reccBGfSniEF0UY46
Delivering a multi-page marketing website.,,,This project uses all objectives from the past 4 weeks of training.,,0,,"Introduction to Project Week for CS11 w/ Josh Knell,Project Day 2 for CS11 w/ Josh Knell,Project Week: User Interface Intro for FSW14 w/ Josh Knell,Project Week: User Interface for FSW16 w/ Josh Knell,Pomodoro Technique for FSW16 w/ Josh Knell,Project Kickoff for WEBPT4 w/Cameron Pope",,,,Build Week: User Interface,,Full Stack Web Development Core,0,0,0,0,0,0,,6/2/2018 4:11pm,reccMNdVMqGN9DJwI
Intro to iOS,,"This is the introductory lesson to the iOS 101 course. This lesson will introduce students to Xcode, and the basics of building an iOS app.","This lesson is meant as a fun, gentle introduction to iOS development. It focuses on Xcode itself, Interface Builder, and the process for creating a project, editing it, and running an app. It intentionally avoids using very much Swift at all. You should focus on visible results and making students comfortable with the development environment. The most important thing students can leave this lesson with is a feeling that they're capable of learning iOS development. Subsequent lessons will teach Swift in more detail.","build and run an app on the device,change a property of the view controller's view,create and connect IBActions,create and connect IBOutlets,use Interface Builder to add controls to a storyboard,use Xcode to create a new project",6,,"iOS Dev 101 - Section 1 - Intro to iOS,Intro to iOS for Section 2 w/ Johnny Hicks,Intro to iOS for Section 4 w/ Johnny Hicks,Intro to iOS for iOS w/ Johnny Hicks",,,Rainbow,Intro to iOS,Active,Precourse iOS,6,1,0,3,0,1,,6/9/2018 12:03pm,recPmuRLpiQvag2QD
,,"This is the introductory lesson in the iOS 101 course. This lesson will introduce students to the fundamental tools for doing iOS development, including Xcode and Interface Builder.",,,0,,,,,,,,,0,0,0,0,0,0,,6/9/2018 12:04pm,recMgZxybr80sCG3y
Intro to Swift,,"This lesson will introduce students to the Swift programming language. It covers constants and variables, arithmetic operators, and the print statement.","This lesson is meant as an introduction to Swift. As it will be many students' first introduction to programming, be sure to explain any jargon you use, and to use plenty of explanatory metaphors, analogies, and examples.","use comments to make code easier to understand,""use arithmetic operators to add, subtract, multiply, and divide variables"",""understand and use different types of variables and constants, including Int, Float, Bool, etc."",understand when to use var vs let,understand and use variables (var) to store and change values,understand and use constants (let) to store values,use `print()` to output text to the console,use Xcode to create a playground",8,,"iOS Dev 101 - Section 1 - Intro to Swift,Intro to Swift for Section 2 w/ Johnny Hicks,Intro to Swift for Section 2 w/ Johnny Hicks,Into to Swift for iOS w/ Johnny Hicks",,,Introduction,Intro to iOS,Active,Precourse iOS,8,1,0,4,0,1,,6/10/2018 7:14pm,recQ41SjMfSMvRHag
Conditionals and Optionals,,"Introduces conditional statements including if-else, switch, and the ternary operator, along with boolean expressions. Introduces the basics of Swift's Optional type.",,"use an if let statement to unwrap an optional variable,understand and explain the purpose of optionals,use the ternary operator to choose one of two options ,use a switch statement to choose which code to execute,""use AND, OR, NOT to combine boolean expressions"",use an if-else statement to choose which code to execute",6,,"iOS Dev 101 - Section 1 - Conditionals and Optionals,Conditionals and Optionals for iOS w/ Andrew Madsen,Conditionals & Optionals for Section 2 w/ Johnny Hicks,Conditionals and Optionals for Section 4 w/ Johnny Hicks,Conditionals and Optionals in Swift for iOS with Johnny Hicks",,,ConditionalsAndOptionals,Intro to iOS,Active,Precourse iOS,6,1,0,4,0,1,,6/10/2018 8:39pm,recqBwoCd07dzWKmw
Loops and Functions,,"Introduces loops and functions in Swift, including for in loops, while loops, and basic function syntax and semantics.","As we introduce functions in this lesson, we have an opportunity to begin emphasizing good programming practices, including DRY (Don't Repeat Yourself), good function names, keeping individual functions simple, etc.","provide default argument values for a function,write functions that return values,call a function,write functions including specifying a return type,use a while loop to run a piece of code until a condition is met,use `for in x…y` to run a piece of code multiple times",6,,"iOS Dev 101 - Section 1 - Loops and Functions,Loops and Functions for iOS with Johnny Hicks",,,LoopsAndFunctions,Intro to iOS,Active,Precourse iOS,6,1,0,2,0,1,,6/10/2018 11:26pm,rechZ59m0kGRSR1fd
UIKit Basics,,"This lesson will introduce students to the basic architecture of iOS apps, including MVC, the role of UIViewController and UIView, view controller lifecycle, and the use of IBOutlets and IBActions.",,"create and connect IBActions,create and connect IBOutlets,use Interface Builder to add controls to a storyboard",3,,,,,,,Active,,3,1,0,0,0,1,,6/10/2018 11:35pm,recwL8kmiCJ8DiftT
Strings,,"All apps end up working with text, because it's the primary way most apps interface with the user. In programming, a piece of text is called a _string_. A string is fundamentally just a list of characters in a certain order. But because strings are used so heavily in apps, the system provides a lot of functionality related to their use. You can split strings up, put them together, analyze their contents, convert from uppercase to lowercase, and much, much more.

In this lesson, you'll learn some of the fundamentals for using strings in Swift.",,"use string interpolation to include variable values in a string,loop through all characters in a string,concatenate strings,create static strings using string literal syntax",4,,"iOS 101 - Section 1 - Strings,Strings in Swift for iOS with Johnny Hicks",,,SwiftStrings,Intro to iOS,Active,Precourse iOS,4,1,0,0,0,1,,6/10/2018 11:36pm,recgUnGFWQ6zb3rLW
Collections,,"Introduces Swift arrays and dictionaries, including creating, modifying, and accessing them, as well as understanding when it is appropriate to use one versus the other.",,"understand and explain the difference between a dictionary and an array,remove items from a dictionary,insert items into a dictionary using subscript syntax,access objects in a dictionary using keys and dictionary subscript syntax,create a dictionary using dictionary literal syntax,Check if an array contains a certain value,iterate through an array using a for in loop,remove items from an array,insert items into an array variable,access specific items in an array using array subscript syntax,create an array of values using array literal syntax",11,,"iOS 101 - Section 1 - Collections,Collections in Swift for iOS with Johnny Hicks",,,SwiftCollections,Intro to iOS,Active,Precourse iOS,11,1,0,2,0,1,,6/10/2018 11:36pm,rec8jzMXJZINdmKqR
Table Views,,In this lesson you'll learn how to use `UITableView` to display a scrolling list of items. You'll make it so that tapping an item in the list displays another screen with more information about that item.,,"use a segue to show a detail view when a table view cell is tapped,embed a view controller in UINavigationController,implement UITableViewDataSource methods required to populate table view with data,add a UITableView to their app",4,,"iOS 101 - Section 1 - Table View,Table Views for iOS with Johnny Hicks",,Contacts,SwiftVocabulary,Intro to iOS,Active,Precourse iOS,4,1,0,0,0,1,,6/10/2018 11:36pm,rectYYP3U5gg9P0hd
"Table Views, Table View Controllers, and Delegation",,"Get ready to learn about Table Views, which present information as interactive scrolling lists. You'll learn about delegation, which allows classes and other types to hand off responsibility for providing data and behaviors. You'll explore the role of protocols, which define how delegates function, and learn how to create and adopt protocols in your own type. Finally, you'll explore the UITableViewController class, which automatically implements a table view's delegate and data source protocols.","As the title of this lesson suggests, the main focus is on protocols and the delegate pattern as well as intermediate table view concepts such as custom cells. Protocols and especially the delegate pattern tend to be hard for students to grasp initially. It may be useful to use graphics and/or a lot of repetition to ensure that the students have a solid understanding of the concepts taught in this lesson.",understand and explain what a protocol is and common scenarios for their use,1,,"Swift Lesson 3 for iOS4 w/Erica Sadun,""Table Views, Table View Controllers and Delegation for iOS4 w/Erica Sadun"",Table View Basics for iOS5 w/ Andrew Madsen",Number String Cleanup,,Tabled,,,,1,0,1,0,1,0,,6/11/2018 1:27pm,recoNLN3CR33F8veP
iOS Development Tools,,"Xcode provides an integrated design environment (IDE) that transforms screen designs and code into working iOS applications. You start your Lambda journey by diving into your personal tool suite and learning how Xcode supports your application development. You'll tour the app, learn to identify and control the various panes and editors, and write a simple working app on your very first day.

You'll also review version control. Version control helps you manage project source code and collaborate with others. You'll use this knowledge to participate in Lambda's projects and submit your work to your project managers.  Lambda School uses git, which is the most widely used version control system across iOS development. Version control tracks changes in computer files and coordinates work on those files among multiple people. It is an essential tool for iOS developers, and one you will work with every day. ","This lesson introduces Xcode. (Details TBD)

This lesson introduces Git by building a simple project that doesn't include anything the students haven't already learned, and committing/pushing throughout the lesson. As such, build the project as you normally would using the ""I do, we do, you do"" method. Be sure to commit and push often with your students.","create a pull request on GitHub,push changes to a remote Git repository,commit changes to a Git repository and write good commit messages,clone a remote Git repository,create a fork on GitHub,configure a git identity and default editor on a computer,understand and explain version control",7,,"Introductions for iOS4 w/Erica Sadun,iOS Development Tools (part 1) for iOS4 w/Erica Sadun,iOS Development Tools for iOS4 (part 2) w/Erica Sadun,Xcode and Git for iOS5 w/ Andrew Madsen,iOS Development Tools for iOS6 w/ Paul Solt (Part 2),iOS Development Tools for iOS6 w/ Paul Solt (Part 1),iOS Development Tools for iOS7 w/ Johnny Hicks",,,Git Project: Lambda Hello,iOS Fundamentals I,,iOS Development Core,7,1,0,0,5,1,,6/11/2018 1:30pm,recBjxerm24LpCVTU
Custom Data Types,,"So far, we've worked with types that Swift gives us, including `Int`, `Double`, `String`, `Array`, and `Dictionary`. One of the most powerful things about Swift is that it gives you the ability to define your own types that best fit the problems you're trying to solve. In this lesson, we'll cover two kinds of custom types in Swift: structs, and classes. you'll learn how to create your own custom types using these two features of Swift.","This is a first introduction to classes and structs in Swift. We can't cover everything there is to know about both in an hour lecture, so set the students up to feel comfortable using the most commonly used basics of each. Deeper topics like convenience and failable initializers, protocol conformance, use cases for subclassing, static properties, etc. will be covered later.","understand and explain the differences between structs and classes,create a custom subclass of another class,instantiate classes,define custom class data types,create custom initializers,instantiate structs,define custom struct data types",7,,"iOS 101 - Section 1 - Custom Data Types,Custom Data Types in Swift for iOS with Johnny Hicks",,,StructsAndClasses,Intro to iOS,Active,Precourse iOS,7,1,0,1,0,1,,6/11/2018 1:31pm,rec4b0nbaJ6Fg3bXl
View Controllers and the Model-View-Controller Design Pattern,,"In this lesson, you learn about the Model View Controller (MVC) design pattern and the role of the UIViewController. You'll explore IB's rich library of visual elements and learn to connect ""outlets"" and ""actions"" and connect these visual representations to an underlying model.",,"understand and explain the purpose of the view layer in MVC,understand and explain the purpose of the controller layer in MVC,understand and explain the purpose of the model layer in MVC,understand and explain the purpose of the MVC design pattern",4,,"Model Controllers and UINavigationController for iOS1 w/Andrew Madsen,View Controllers and the Model-View-Controller Design Pattern for iOS4 w/Erica Sadun,Swift Lesson 1 for iOS4 w/Erica Sadun,Intro to Model View Controller for iOS5 w/ Andrew Madsen",Numbers for Sum,,List,,Active,,4,1,4,2,4,2,,6/11/2018 1:31pm,recdUcU29E3vS36m2
Auto Layout,,"Auto Layout offers a flexible, declarative system that allows user interfaces to adapt -- across platforms, across orientation, and across device geometry. This module introduces the basics of Auto Layout and explores how you can build applications that reconfigure their presentation to best suit their screen shape and orientation. You'll learn about Stack Views, the ""one size fits all"" solution to most Auto Layout requirements. Stack Views simplify many layout tasks, allowing you to build columns and rows of visual elements and then join them together to create a coherent presentation.",,"implement common layouts using UIStackView,implement common layouts using constraints in Interface Builder,""understand and explain what Auto Layout is, and the problems it solves""",3,,"Auto Layout Guided Project for iOS2 w/ Andrew Madsen,Auto Layout for iOS1 w/Andrew Madsen,Scavenger Hunt 1 for iOS4 w/Erica Sadun,Auto Layout (part 2) for iOS4 w/Erica Sadun ,Auto Layout (part 1) for iOS4 w/Erica Sadun,Auto Layout Review (part 1) for iOS4 w/Erica Sadun,Auto Layout Review (part 2) for iOS4 w/Erica Sadun,Auto Layout for iOS5 w/James Pacheco,iOS Auto Layout for iOS6 w/Paul Solt",,,Q&A,iOS Fundamentals I,,iOS Development Core,3,1,2,0,3,1,,6/11/2018 1:39pm,recNirisL7ctAgbFD
Navigation Controller and View Controller Containment,,,,"use view controller containment and embed segues to embed child view controllers,use storyboard references to separate UI into multiple storyboards,use the UINavigationItem API to customize navigation bar,implement a segue between a table view cell and a detail view controller,use UINavigationController to display data hierarchically ",5,,"Navigation Controller and View Controller Containment - Part 1 for iOS6 w/Paul Solt,Navigation Controller and View Controller Containment - Part 2 for iOS6 w/Paul Solt",,,Poll,,,,5,1,5,0,4,2,,6/11/2018 1:39pm,reczCcazdwBfBmskW
Basic Persistence,,"Persistence refers to storing data that can be loaded again the next time your app runs. In this lesson, you'll learn how to save your model data and then reload it again later.",,"use PropertyListEncoder to save Codable objects to a file,use FileManager to find system directories (e.g. documents directory),make a class or struct conform to Codable,understand and explain the role of model objects and model controllers in MVC",4,,"Basic Persistence for iOS1 w/Andrew Madsen,Basic Persistence for iOS5 w/James Pacheco,iOS Basic Persistence for iOS6 w/Paul Solt",,,Reading List,iOS Fundamentals II,,iOS Development Core,4,1,4,0,0,2,,6/11/2018 1:39pm,rec7DrDP5qLdo2jcQ
User Permission Model and Local Notifications,,,,"handle local notifications when they fire,schedule local notifications,can query to find out if user has previously allowed or denied permission,""can request user permission to access private information (camera, microphone, photos, notifications, etc.)""",4,,User Permission Model and Local Notifications for iOS1 w/Andrew Madsen,,,Memories,,,,4,1,0,4,0,1,,6/11/2018 1:39pm,recgSVm1gtavnw24J
Intro to GCD and Closures,,,,"understand and explain the role of the main queue in iOS apps,use GCD APIs to dispatch work to another queue,""understand and explain what concurrency is, and reasons why it is used"",""use sort, filter, map, compactMap, and reduce"",understand and use Swift’s closure syntax,understand and explain what a closure is and common scenarios for their use",6,,"Intro to GCD and Closures for iOS1 w/ Andrew Madsen,Intro to GCD and Closures for iOS4 w/Erica Sadun,iOS Intro to GCD and Closures for iOS6 w/Ben Gohlke",,Students,Recipes,iOS Networking Basics,,iOS Development Core,6,1,6,5,6,2,,6/11/2018 1:42pm,recnglzTOMb7HMAeh
REST Basics and Enums,,,,"define custom enum types,understand and explain common use cases for enums,use JSONDecoder() to convert JSON data returned by an API into model objects,implement a URLSessionDataTask completion closure,use URLSession to make a GET request to a URL,use documentation to understand how to use a REST API,understand and  explain the purpose of JSON",7,,"REST Basics and Enums for iOS1 w/ Andrew Madsen,URLSession and REST Basics for iOS5 with Andrew Madsen,iOS REST API and Basic Enums for iOS6 w/Ben Gohlke",,,iTunes Search,iOS Networking Basics,,iOS Development Core,7,1,7,0,7,2,,6/11/2018 1:42pm,recZ1z5hASOnbRvwx
Collection Views,,,,,0,,,,,,,,,0,0,0,0,0,0,,6/11/2018 1:42pm,recAZD3zvpyT7FowC
PUT/POST,,,,"use URLSession to send a POST request to create data on a REST endpoint,use URLSession to send a PUT request to create or modify data on a REST endpoint,understand and explain the difference between PUT and POST",3,,"iOS 2 - PUT and POST Guided Pro with Spencer Curtis,iOS5 - PUT and POST with James Pacheco,iOS PUT and POST for iOS6 w/Ben Gohlke",,,Message Board,iOS Networking Basics,,iOS Development Core,3,1,2,0,3,1,,6/11/2018 1:42pm,recsNcmR1wW6NTYT9
Core Data I - Basics,,,,"delete managed objects,save data to disk using the managed object context,fetch objects using NSFetchRequest,initialize and create Core Data managed objects,use NSPersistentContainer to set up the Core Data stack in an app,use Xcode to create and edit Core Data model files,understand and explain the role of each component in the Core Data Stack",7,,"Core Data I for iOS1 w/ Andrew Madsen,Core Data I - Basics Guided Project for iOS3 w/ Andrew Madsen,Core Data I - Basics for iOS4 w/Dave DeLong",,,Journal - Core Data,Core Data,,iOS Development Core,7,1,7,7,7,4,,6/11/2018 1:46pm,rec4IuqT4AAn2NpJl
"Core Data II - Migration, Fetching, and Predicates",,,,"use NSFetchedResultsController to create a table view populated with Core Data objects,use NSPredicate to fetch objects matching specific criteria,use lightweight migration to migrate an older Core Data store to a newer version",3,,"""Core Data II - Migration, Predicates, and NSFetchedResultsController  for iOS3 w/ Andrew Madsen"",Core Data II for iOS4 w/Dave DeLong",,,Journal - Core Data - Day 2,Core Data,,iOS Development Core,3,1,3,3,0,3,,6/11/2018 1:46pm,recDQkcZHcnDEwRi6
Core Data IV - Multiple Contexts and Concurrency,,,,"correctly use Core Data’s API for concurrency,use NSPersistentContainer’s support for creating new background contexts,use multiple MOCs with a parent/child relationship,implement the shared persistent store coordinator multiple MOC stack,understand and explain common scenarios where using multiple managed object contexts is appropriate",5,,"Core Data IV - Multiple Contexts and Concurrency w/ Andrew Madsen,Core Data IV - Multiple Contexts and Concurrency for iOS4 w/Dave DeLong,Core Data IV - Multiple Contexts and Concurrency for iOS6 with Spencer Curtis",,,Journal - Core Data - Day 4,Core Data,,iOS Development Core,5,1,2,1,0,1,,6/11/2018 1:46pm,reczfGdQlaaC6L7xG
Core Data III - Sync Persistence,,,,"sync local deletions with server,sync local modifications with server,send persisted managed object data to a server via PUT",3,,"Core Data III - Sync Persistence for iOS3 w/ Andrew Madsen,Core Data III - Sync Persistence for iOS4 w/Dave Delong,iOS Core Data III - Sync Persistence for iOS6 w/ Spencer Curtis",,,Journal - Core Data - Day 3,Core Data,,iOS Development Core,3,1,0,0,0,1,,6/11/2018 1:46pm,recgogcPsiS63FqxJ
,,,,,0,,,,,,,,,0,0,0,0,0,0,,6/11/2018 1:46pm,recqnqXwXmqA8AE47
User Interface III,,As we progress into more advanced UI layout techniques we learn about the Flexible Box Module also known as flexbox.  There are many ways to layout a page in CSS but flexbox is one of the most powerful and simple ways to do it.  We will discuss the basics of what flexbox is and how we use it properly to build a user interface.   ,"This is a concept that covers a full guided demo.  I prefer to use the most popular online guide to flexbox:  https://css-tricks.com/snippets/css/a-guide-to-flexbox/

Last time I taught this:

https://codepen.io/lambdaschool/pen/bmEyNb?editors=1100

IMPORTANT:  It is of major importance to describe that flexbox is a module with many parts and rules.  Example: 


display: none; does one thing!

display: flex; enables a whole module of properties.  Make sure this is clearly understood.  Otherwise, students think display: flex; is just a single property and don't everything else as smooth.

IMPORTANT: Make sure students know that there is a flex container and flex items within that container and each concept have its own properties.  This concept seems to escape many new learners.  Repeat this and showcase this in the guided demo many times.  

TEACHING TIP: Focus on describing the two main axes of a flex container and how flexbox is one directional.  The faster students can understand that there is a main and cross axis the better.

A good tip is that any flexbox property with ""align"" in its name is automatically assumed to be manipulating the cross axis.  Where a flexbox property with ""justify"" is on the main axis.","demonstrate understanding of flex item properties in flexbox,demonstrate understanding of flex container properties in flex box,describe and understand that flexbox is a module",3,,"User Interface III for CS13 w/Josh Knell,User Interface III for CSPT2 w/Russell Kennington,User Interface III for FSW14 w/ Josh Knell,User Interface III for FSWPT3 w/  Dan Frehner,User Interface III for FSW15 w/ Josh Knell,User Interface III for FSW16 w/ Josh Knell,User Interface III for FSWPT4 w/Cameron Pope,User Interface III for WEB17 w/ Josh Knell,UI: III - Guided Project for Web18 w/ Josh Knell,User Interface III for Web 18 w/Josh Knell,User Interface III for Web 19 w/Josh Knell,User Interface III for WEBPT6 w/ Dan Frehner,User Interface III for WEB20 w/ Dan Levy,User Interface III for WebPT7 w/Cameron Pope,User Interface III for WEB21 w. Dan Levy,User Interface III for WEBPT8 w/Keiran Kozlowski",,,User Interface Project: Services Page,"Introduction to User Interface and Git,Web for UX: Intro to HTML and CSS",,"Full Stack Web Development Core, UX Web and Labs Prep Unit",3,1,2,2,2,1,,6/28/2018 5:42pm,recaVbBZhh8BTyMdM
Components II,,"Now that we have some understanding of what a component is, we can dive deeper into using multiple classes to create a component as well as utilizing data attributes and understanding how the `this` keyword works inside of classes.",,"utilize multiple Classes to build a component ,create custom data attributes with HTML and utilize them in CSS and JavaScript",2,,"Components II for CS12 w/ Josh Knell,Components II for CS13 w/Josh Knell,Components II for FSPT2 w/ Daniel Frehner,Components II for FSW14 w/ Josh Knell,Components II for FSW15 w/ Josh Knell,Components II from FSWPT3 w/ Cameron Pope,Components II for FSW16 w/ Josh Knell,Components II for WEB17 w/ Josh Knell,Components II for WEBPT4 w/Cameron Pope,Components II for WEB18 w/ Josh Knell,Components II for Web 19 w/ Dan Levy,Components-II for WebPT6 w/Keiran Kozlowski,Components II for WEB20 w/ Dan Levy",,,Components - Tab Creation,Applied JavaScript,,Full Stack Web Development Core,2,1,1,0,0,1,,6/28/2018 5:43pm,recd6kDKS6eMapSRq
Express Middleware,,"Express is a minimalist framework. It doesn't provide everything out of the box, but using middleware we can add extra functionality to our application. Middleware provide a way to extend the features provided by the Express framework.

They are implemented as small functions that handle one aspect of our application. Tasks like **authentication** and **logging** are commonly handled by middleware. Another benefit of Middleware is that it provides an easy way to add modularity to our code.

On this module we'll cover:

- the what, why and how of Middleware.
- different types of Express Middleware.
- how to create Custom Middleware.
- error handling middleware.",Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.,"write error handling middleware,write custom middleware.,explain what middleware is and the different types.",3,Express Middleware for WEB16 w/ Luis Hernandez,"Express Middleware for WEB15 w/ Luis Hernandez ,Express Middleware for Web17 w/Luis Hernandez,Express Middleware for WEB18 w/ Luis Hernandez ,Express Middleware for webpt4 w/ Diandra,Express Middleware for Web 19 w/ Luis Hernandez",,Web API III Guided Project,Node Blog,Building RESTful Web APIs with Express and Node.js,Active,Full Stack Web Development Core,3,1,3,3,3,4,,7/3/2018 3:20pm,recCJjYFEz0i5O5p5
Deployment and Best Practices,,"The time has come to show your work to the world. In this module we'll deploy our application to `heroku`, a cloud provider that provides several services geared towards helping developers publish their site on the internet.

We'll learn how to:

- extract configuration values into environment variables.
- deploy an API to Heroku.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

The guided project for this module can be found here: https://github.com/LambdaSchool/webapi-iv-guided-solution","deploy a web-api to Heroku,extract configuration into environment variables",2,,"Deployment and Good Practices for FSWPT2 w/ Diandra Ryan-Mas,Deployment and Good Practices for WEB15 w/ Luis Hernandez,Deployment and Good Practices for WEB16 w/ Luis Hernandez,Deployment and Best Practices for WEB18 w/ Luis Hernandez,Deployment Best Practices for Web 19 w/ Luis Hernandez",,Web API IV Module Guided Project,Web API IV Module Challenge,Building RESTful Web APIs with Express and Node.js,Active,Full Stack Web Development Core,2,1,2,2,0,3,,7/3/2018 3:21pm,recs9QOkOAtZhsjc4
Git for Web Development,,"Git is a distributed version control system.  What does that mean to a new web developer?  It means that git is used to monitor and control code changes made during development across several people or teams.  

Git can be overwhelming at first, but if we break it down concept by concept, it starts to be clear why almost everyone in the industry uses it every day.","Tip: Share your whole screen in zoom today instead of just one view to showcase finder and terminal and how it all works.

- Quick Review of BASH and CLI 
  https://en.wikipedia.org/wiki/Bash_(Unix_shell)
- Explain the command line interface uses BASH.

Open up CLI with the students and review basic commands
- cd, ls, touch, mkdir, pwd
- Discuss traversing folder structures
- Cheat sheet to reference: https://www.git-tower.com/blog/command-line-cheat-sheet/

Showcase how the OS lines up directly with the CLI.  

","demonstrate their ability to use the Lambda School Git Workflow to submit an assignment to your Project Manager,submit a Pull Request.,""explain and properly utilize the git commands: `status`, `add`, `commit`, and `push`"",""understand branching, and be able to create a branch locally."",demonstrate an ability to fork and clone a repo.,""sufficiently explain what version control and Git are, and why as software engineers we use them."",""explain why we use the command line interface (CLI), and demonstrate use of basic CLI commands.""",7,,"Git for CSPT2 w/Daniel Frehner,Git Fundamentals for CS13 w/Josh Knell,Git Fundamentals for FSW14 w/ Josh Knell,Git Fundamentals for FSWPT3 w/ Dan Frehner,Git for Web Development for FSW15 w/ Josh Knell,Git for Web Development for FSW16 w/ Josh Knell,Git for Web Development for FSWPT4 w/Cameron Pope,Git for Web Development for WEB17 w/ Josh Knell,CLI and GIT Intro for Web18 w/ Josh Knell,Git for Web Development for Web 18 w/Josh Knell,Git for Web Development for WEBPT5 w/ Cameron Pope,Git for Web 19 w/Josh Knell,Git for Web Development for WEBPT6 w/ Dan Frehner,Git for Web Development for WEB20 w/ Dan Levy,Git for Web Development for WEB21 w/ Dan Levy,Git for Web Development for WEBPT8 w/Keiran Kozlowski",,,Git for Web Development Project,Introduction to User Interface and Git,,Full Stack Web Development Core,7,1,2,1,6,1,,7/3/2018 4:00pm,rect59e95N6OSvoCd
Intro to Android,,,,,0,,Intro to Android for Section 1 w/ Chance Payne,,,,,,,0,0,0,0,0,0,,7/3/2018 8:49pm,recOkSMSrupc0R0Vo
,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/5/2018 10:16am,recpj8NwSAllpX74S
Intro to Android,,"Jump into Android development by getting acquainted with Android Studio, JetBrain's interactive design environment, and learning the fundamental building blocks of Android app development.","This lesson is meant as a fun, gentle introduction to Android development. It focuses on Android Studio itself, Layout Editor, and the process for creating a project, editing it, running an app on a virtual and physical device, and basic debugging. It intentionally avoids using very much Java at all. You should focus on visible results and making students comfortable with the development environment. The most important thing students can leave this lesson with is a feeling that they're capable of learning Android development. Subsequent lessons will teach Java in more detail.","make code changes that drive the application user interface,use debugging and logging tools to find and correct bugs,understand and explain the way Android allows applications to respond to user interaction,edit the user interface using XML,prepare a physical testing environment,prepare a virtual testing environment,create a project in Android Studio",7,,Intro to Android for Section 1 w/ Chance Payne,,,Android Rainbow,Intro to Android,,Precourse Android,7,1,0,3,0,1,,7/5/2018 10:35am,recKAWFVwGzRGRElc
Intro to Java,,"This module introduces students to the basics of the Java programming language. It covers the comments, printing text to a screen, data types and operators.",This continues on from the intro to android module. It goes deep into the basics. It advances from the gentle intro of the previous lesson to a more technical view in order to challenge those without programming experience.,"understand and apply core operators in code,explain the difference between primitive data types and reference data types,understand and explain the role of primitive data types,annotate source code to allow others to better understand it,output text for applications with a graphical user interface,output text for applications without a graphical user interface,write code in a simple interactive coding environment",7,,Intro to Java for Section 1 w/ Chance Payne,,,Java Introduction,Intro to Android,,Precourse Android,7,1,0,1,0,1,,7/5/2018 5:15pm,rec70dizXylRP9aK8
Conditionals and Loops,,This module will introduce programming logic to the students giving them the tools to build complex programs and apps.,This is where we start to dig into logic. The assignment for this module is built around testing the students' logic abilities as well as practicing conditionals and loops.,"use a for loop to perform a task a specific number of times,use a while loop to run code until a condition is met,use ternary operators to choose one of two options,use Boolean operators to combine Boolean expressions,use a switch statement to allow for multiple possible outcomes,use if and else statements to control the flow of code,use relational operators to compare values,create and follow basic flowcharts",8,,Conditionals and Loops for Section 1 w/ Chance Payne,,,Android Conditionals and Loops,Intro to Android,,Precourse Android,8,1,0,2,0,1,,7/10/2018 10:54am,recq1v8qjP0xJaesM
Methods,,This teaches students how to make more modular code and reuse it in multiple places.,Emphasis to the students the importance of specializing their code and the separation of concerns.,"accept input from the user without a graphical user interface,learn to overload methods so that they be declared with many parameter combinations,write methods that accept and use parameters,return a value from a method,write and call simple methods",5,,Methods for Section 1 w/ Chance Payne,,,Android Methods,Intro to Android,,Precourse Android,5,1,0,0,0,1,,7/10/2018 6:27pm,rec06OcmnettIrdMk
Introduction to Python II,checked,"Learning new languages is a skill that is necessary for all developers. But a skill that's more challenging but no less important is learning new _programming paradigms_. You've already been exposed to a number of different paradigms, potentially including _procedural_, _imperative_, _functional_, and _object-oriented_ (the one we'll discuss in more detail in this module.","### Day 1

Hour 1
* Solution lecture for adventure
* Ask how the techs used for the game could be used in other places
* Note that the bigger your web of knowledge, the more information you have to bring to bear on other arbitrary problems

Hour 2
* Talk programming paradigms
* What is OOP?
* Nouns (objects) and verbs (methods) and adjectives (properties, member variables)

#### Project

Continue working on the adventure game:

* Create a new `Item` class in `item.py`
* Implement commands for `get/take <item_name>` and `drop <item_name>`
* Implement the command `i` and `inventory` which shows a list of items carried by the player.


### Day 2

Solution lecture for Items

Leftover time:

Do a thought experiment designing a class for a Network Connection. Have the students come up with the things it can do and the things it has. Turn the former into methods, and the latter into member variables.

The idea here is to get them used to making a class for a thing that's not a physical object, but is more of a virtual idea.

#### Project

Continue working on the adventure game:
* Add multiple item types which inherit from Item class
* Add scoring for treasure items
* Create LightSource items and dark rooms
* Stretch goals!","demonstrate an understanding of association through appropriate class design,demonstrate an understanding of inheritance through appropriate method overriding and use of super(),understand and apply the concepts of object-oriented design using Python",3,,"Python OOP day 2 for CS10 w/ Beej Jorgensen,Class Inheritance,Intro to Python and OOP for CS11 w/Brady Fukumoto,Intro to Python OOP for CS11 w/Brady Fukumoto,Python OOP Lecture 1 for CS13 w/ Sean Chen,Python/OOP II for CS14 w/Sean Chen",,,Intro to Python II,Intro to Python/OOP,,"Computer Science, DS - Computer Science",3,1,3,3,3,4,,7/10/2018 6:30pm,reca7NYptklr7F403
Preclass Video Production I,,"An orientation to building objective-based preclass videos. A review of _why_ we're doing it, how the role of instructor changes from lecturer to guide, mentor, and facilitator, and the nuts and bolts of our MVP level preclass videos meant to be built by end of Q3 2018.",,quickly describe how many videos per week should be recorded and submitted in order to hit Level 4 curriculum goal,1,,,,,,Video Production,,Instructor Training,1,0,0,0,0,0,,7/11/2018 10:59am,reckUDkcYfuVU5QZr
Class Basics,,Java is an Object Oriented Program (OOP),"This is a light introduction to classes. As Java is heavily Object-oriented, this is necessary to do in the Mini Bootcamp. However, we should avoid more complicated concepts like inheritance and interfaces as much as possible.","understand and know when to make members private or public,understand what magic numbers are and NEVER use them,""understand, define and use constructors"",understand what class members are,understand an explain the difference between classes and objects",5,,Class Basics for Section 1 w/ Chance Payne,,,"Android Contacts,Android Lambda Challenge",Intro to Android,,Precourse Android,5,1,0,3,0,1,,7/11/2018 1:09pm,reccTr4n1JZGe0W1S
Activity Layouts,,"In this module, we'll dig into how to build graphical user interfaces for our apps.",,"create multiple layouts for the same activity,use views and view groups to arrange a layout,understand the difference between views and view groups,know what a layout is and how to use it",4,,Activity Layouts for Section 1 w/ Chance Payne,,,Android Layouts,Intro to Android,,Precourse Android,4,1,0,0,0,1,,7/13/2018 11:58am,recnX679QqfWgeobX
Collections,,This module introduced students to collections. We will use arrays and lists to store and access multiple pieces of data.,,"""store data in a key, value storage tool"",understand what key-value paired data is,create a list and manipulate data inside of it.,understand the difference between arrays and lists,iterate through and array with a loop,access and manipulate data in an array,understand what an array is and create one as a data member",7,,Collections for Section 1 w/ Chance Payne,,,Android Thesaurus,Intro to Android,,Precourse Android,7,1,0,0,0,1,,7/13/2018 12:12pm,recvpFlKMmrzurTsi
Strings,,The module is an in-depth look into the String object. We will dig into what Strings are and the different ways we can manipulate them.,,"understand the use of and reasons behind String Resource Files,use interpolation to format strings,understand the benefits and drawbacks of StringBuilder,use string methods to manipulate String text,understand the role and use of strings",5,,Strings for Section 1 w/ Chance Payne,,,Android Palindrome,Intro to Android,,Precourse Android,5,1,0,0,0,1,,7/13/2018 12:19pm,recbMkRmf6zKOiEjT
Activity Lifecycle,,This module is designed to introduce students to the activity lifecycle.,,"understand what to do in each stage of the lifecycle,understand the different stages of the activity lifecycle,understand what the Android Manifest is and how to manage activities in it,understand what an Activity is and how Android works with them",4,Module Intro - Activity Lifecycle with Chance Payne,"Activity Lifecycle for AND1 w/Chance Payne,Activity Lifecycle for AND2 w/ Chance Payne",,,Android Lifecycle,Android Fundamentals I,,Android Development Core,4,1,0,0,4,1,,7/13/2018 12:56pm,rec365VHt5ScbPhEI
Intents,,This module is designed to teach students how intents are used to communicate between activities and other apps.,,"understand how to resolve an Intent,understand and explain how intent filters are used,understand what a Pending Intent is and when they are used,build an intent to launch another activity,understand the difference between Explicit and Implicit Intents,understand what Intents are",6,Module Intro - Intents with Chance Payne,"Intents for AND1 w/Chance Payne (guided demo),Intents for AND1 w/Chance Payne,Intents for AND2 w/ Chance Payne,Intents for AND2 w/ Chance Payne",,Intent Misc Practice,Image Viewer App,Android Fundamentals I,,Android Development Core,6,1,0,0,6,1,,7/13/2018 1:16pm,recZKCuXOHS1Q0TO2
Android Model View ViewModel Architecture,,This module is designed to  dive into Android's implementation of MVVM.,,"understand how to implement MVVM in Android and why it is important,understand what the MVVM design pattern is",2,,"Android Architectural Patterns for AND1 w/ Chance Payne,Live Data for AND2 w/Chance Payne",,,Congress Viewer,Data Persistence,,Android Development Core,2,1,0,0,0,1,,7/13/2018 1:35pm,recOkCM7mqVRrPIBn
Git for Android Development,,,,"create a pull request on GitHub,create a fork on GitHub,pull new changes from a remote Git repository,push changes to a remote Git repository,write good commit messages,commit changes to a Git repository and write good commit messages,clone a remote Git repository,understand and explain what a Version Control System is and why developers use it,understand and use common git vocabulary words,set up git on a local machine",10,,'Git for Android Development' for AND2 w/ Chance Payne,,,"Git Project: Lambda Hello,Android Pets",Android Fundamentals I,,Android Development Core,10,1,0,0,6,1,,7/13/2018 1:44pm,rec2FW0Z6r2r1eoNA
Notifications,,This module teaches the ins and outs of notifications and why we should be using them.,,"add user interaction to a notification,group similar notifications,add content to a notification,build a notification with an importance level,understand and use notification importance,understand the anatomy of a notification",6,,"Notifications for AND1 w/Chance Payne - Lecture,Notifications for AND1 w/Chance Payne - Guided Demo,Notifications for AND2 w/Chance Payne",,Note Taker - Reminders,Android Notifications,Android Fundamentals II,,Android Development Core,6,1,0,0,0,1,,7/13/2018 1:46pm,recQ1ACCEb8at7hNk
Functional Components II,,"Functional Components II is all about taking your knowledge about components and adding onto that skill set. We are going to be talking at length about ""Props"" and about ""Reusability"" at length throughout this topic. ",,"iterate over a list of of data and generate an array of React Components ,demonstrate the ability to implement nested functional components,use props to dynamically pass data to a React Component making it reusable in different contexts,describe props and state and how data flows in a react application",4,,"Functional Components II for CS12 w/ Ryan Hamblin,Functional Components II for FSW13 w/ Dustin Myers,Functional Components II for FSW15 w/ Dustin Myers,Functional Components II for WEB16 w/ Dustin Myers,Functional Components II for WEB17 w/ Dustin Myers,Functional Components II for WEBPT4 w/Michael Checo,Functional Components II for WEB18 w/ Dustin Myers,Functional Components II for Web 19 w/ Dustin Myers,Functional Components II for WEB20 w/ Dustin Myers,Functional Components II for WEBPT6 w/Dan Frehner",,,,React,,Full Stack Web Development Core,4,1,4,4,4,4,,7/13/2018 2:36pm,reckYfGpdGAsLn9CI
Shared Preferences,,This module begins showing students how to add basic persistence to their apps.,,"understand and explain when shared preferences are beneficial over other storage solutions,understand how to read from shared preferences,understand how to write to shared preferences,understand the difference between getPreferences and getSharedPreferences,understand what shared preferences are,understand what key-value paired data is",6,Module Intro - Shared Preferences,"Shared Preferences for AND2 w/ Chance Payne,Shared Preferences for AND2 w/ Chance Payne",,Note Taker - Persistance,Android Reading List,Android Fundamentals II,,Android Development Core,6,1,0,0,6,1,,7/13/2018 3:01pm,recbo6Q47GLvKEIwp
,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/13/2018 3:58pm,recs8pixrtDPv0Jw7
Threading Basics,,,,"understand and know when to use run on UI thread,understand how to use AsyncTask to manage a thread,understand and explain what race conditions are,understand what a Thread is",4,,"Threading for AND1 w/Chance Payne,Threading for AND2 w/ Chance Payne",,,Cyphers,Android Networking,,Android Development Core,4,1,0,0,0,1,,7/16/2018 5:40pm,recmCCBNHElBbOcHV
"REST API Basics, GET Requests and JSON",,,,"understand how to interpret and work with JSON data,understand how to make a GET request,understand how to interpret api documentation,understand what makes a REST API",4,,"""REST API Basics, GET Requests and JSON for AND1 w/Chance Payne"",HTTP Get Requests for AND2  w/ Chance Payne ",,Android Comic Reader,Android Network Basics Space Telescope,Android Networking,,Android Development Core,4,1,0,0,0,1,,7/16/2018 7:02pm,recGWDPjZ7qki7Dn6
HTTP Requests,,,,"create POST requests to send a request with a body,create PUT requests to update data at a REST endpoint,understand and explain the difference between the different HTTP requests",3,,"HTTP Requests for AND1 w/Chance Payne,HTTP Requests for AND2 w/Chance Payne",,,Android Lambda Messages,Android Networking,,Android Development Core,3,1,0,0,0,1,,7/16/2018 7:08pm,recTi7AyhPpLfxQpz
File Storage,,,,"store and access objects using serialization,store an object as a JSON file,read from a File object,write to a File object,get a File object from the three different storage locations,""understand and explain the difference between internal storage, external storage, and cache""",6,,"File Storage - Guided Demo for AND1 w/Chance Payne,File Storage - Lecture for AND1 w/Chance Payne,File Storage for AND2 w/Chance Payne",,,Caesarian Shift Cypher File I/O,Data Persistence,,Android Development Core,6,1,0,0,0,1,,7/17/2018 11:02am,recVvORlWPiPgugz0
Class Components II,,"Class Components II is an extension of the first time we met up with Class Components. Throughout this module you will learn all about the intricicies of how we operate within a React Class Component. You'll be building out an application that allows you to perform basic operations to a data set, and display changes to that data set to the screen.",,"implement reusable and nested class components,describe the rules of the `setState` function and demonstrate two ways to properly use it,""create, read and update a component's state object""",3,,"Class Components II for CS12 w/ Ryan Hamblin,Class Components I for FSW13 w/ Dustin Myers,Class Components II for FSW13 w/ Dustin Myers,Class Components II for FSW14 w/ Dustin Myers,Class Components II for FSW15 w/ Dustin Myers,Class Components II for FSWPT3 w/ Dan Frehner,Class Components II for WEB16 w/ Dustin Myers,Class Components II for WEB17 w/ Dustin Myers,Class Components II for WEBPT4 w/Dan Frehner ,Class Components II for WEB18 w/ Ryan Hamblin - Part 1,Class Components II for WEB18 w/ Ryan Hamblin - Part 2,Class Components II for Web 19 w/ Kamry Bowman,Class Components-I for WEBPT6 w/Dan Frehner",,,"React-Sorting-Hat,Todo-React",React,,Full Stack Web Development Core,3,1,3,3,3,4,,7/17/2018 11:04am,recsqKj5K5PhAATRD
SQL Database,,,,"combine data from multiple tables into a single table,understand and explain the role of a foreign key,understand and explain the meaning and importance of CRUD-L,remove data from the database,add data to the database,retrieve filtered data from the database,retrieve data from the database,define an SQL Schema",8,,"SQL Database for AND1 w/Chance Payne,SQL Database for AND2 w/Chance Payne",,,SQL Database,Data Persistence,,Android Development Core,8,1,0,0,1,1,,7/17/2018 11:34am,recvhbL9OteEtpaEq
View Controller Containment and UITabBarController,,"In this lesson, you'll learn how special view controllers can contain other view controllers. You'll discover the Navigation and Tab Bar controllers, which provide ways to move between content views. You'll study the navigation controller stack, how to push and pop view controllers, and how to use segues to switch control from one controller to the next.","This project is going to introduce a few new concepts to the students, but also includes concepts taught throughout the unit such as model controllers, protocols, and the delegate pattern. Use this opportunity to clarify any questions the students have about this unit's objectives in order to better prepare them for their assessment.","use UITabBarController to allow user to switch between multiple view controllers,use view controller containment and embed segues to embed child view controllers,use storyboard references to separate UI into multiple storyboards",3,,"View Controller Containment and UITabBarController for iOS4 (part 1) w/Erica Sadun,View Controller Containment and UITabBarController for iOS4 (part 2) w/Erica Sadun,Swift Lesson 2 for iOS04 w/Erica Sadun,iOS5 - Navigation Controller and Tab Bar Controller with Andrew Madsen,Navigation Controller and Tab Bar Controller for iOS5 w/ Andrew Madsen,iOS View Controller Containment and UITabBarController for iOS6 w/Paul Solt",,,Contained,iOS Fundamentals II,,iOS Development Core,3,1,3,0,3,2,,7/17/2018 12:41pm,recIYUfXoP6G4KXvp
UICollectionView and UserDefaults,,,,"use UserDefaults to store and retrieve preferences,define keys for specific values stored in UserDefaults,understand and explain the purpose of UserDefaults and the kind of information it should be used to store,implement UICollectionViewDelegate method to react to selecting a collection view cell,implement custom UICollectionViewCells,implement and customize basic layouts using UICollectionViewFlowLayout,implement UICollectionViewDataSource methods to populate a collection view from model data,understand and explain what a collection view is along with common scenarios for its use",8,,"UICollectionView and UserDefaults for iOS1 w/Andrew Madsen,Collection Views and User Defaults for iOS5 with Andrew Madsen,iOS UICollectionView and UserDefaults for iOS6 w/Paul Solt",,,Photo Collection,iOS Fundamentals II,,iOS Development Core,8,1,8,0,1,2,,7/17/2018 12:46pm,recZFZDic4wbf3C84
UIAppearance and Custom Fonts,,,,"handle non-default font sizes (Dynamic Type),use custom fonts,use UIAppearance’s whenContainedInInstancesOf() API to customize controls in specific view hierarchies,use UIAppearance to customize the appearance of system controls,customize the appearance of UIButton",5,,"UIAppearance and Custom Fonts for iOS1 w/ Andrew Madsen,UIAppearance and Custom Fonts for iOS4 w/James Pacheco,UIAppearance and Custom Fonts for iOS5 with Andrew Madsen,iOS UIAppearance and Custom Fonts for iOS6 w/Ben Gohlke",,,Tasks Theming,iOS User Interface,,iOS Development Core,5,1,4,0,5,1,,7/17/2018 12:47pm,recjB8yjaddbiHhmE
Animation I - View Animations,,"Animation plays a foundational role in iOS development. Animation supports UI design by allowing smooth transitions between one visual state and another.

Animations shouldn't draw attention to themselves. Flashy animations work against deferential design. Animations should be small, supportive, and seemingly effortless. Animation serves the interface and should not be the focal point of any GUI.

Because they are so fundamental to the user experience, animation technology exists in many forms and at many levels in the system APIs provided by Apple. Older APIs are more configurable. They provide powerful access to realizing any raw animation you can imagine. Newer APIs are more focused. They offer pre-built hooks to create a uniform user experience across devices.

Today, you're going to build a basic framework for visualizing animations and then explore both some animation theory and the UIKit technologies that realize that theory.",,"use CABasicAnimation to animate layer properties,use UIView’s animation block methods to animate simple view property changes,use UIView’s support for simple system animations,""understand and explain the """"rules of animation"""""",create autolayout constraints programmatically using the NSLayoutConstraint API",5,,"iOS1 - Animation I Lesson w/ Andrew Madsen,iOS5 - Animation I Lesson w/ James Pacheco,iOS Animation I - View Animations for iOS6 w/Ben Gohlke",,,Scatter and Gather,iOS User Interface,,iOS Development Core,5,1,4,1,2,1,,7/17/2018 12:48pm,recjgVYlDoc6mriy6
iOS Custom Controls,,,,"use CoreGraphics to do custom drawing,implement custom touch handling by overriding the touch handling methods,subclass UIControl to create a custom control,understand and explain the target action pattern",4,,"iOS1 - Custom Controls Guided Project with Andrew Madsen,Custom Controls for iOS4 w/James Pacheco,iOS Custom Controls for iOS6 w/Ben Gohlke",,,UIControl,iOS User Interface,,iOS Development Core,4,1,4,0,3,2,,7/17/2018 12:48pm,recEEqjQwd10wS6Wl
XIBs,,,,"implement an application using XIBs exclusively,create a UIViewController with an associated XIB and load it,understand and explain common reasons to use XIBs instead of Storyboards",3,,XIBs for iOS1 w/ Andrew Madsen,,,,,,,3,1,0,0,0,1,,7/17/2018 12:48pm,recRMonX3K3Xi0edz
Swift Generics,,"This lesson introduces the concepts of Swift **Generics**, a technology allowing you to safely implement reusable methods (and types) applied across more than one target type. Together with Swift Protocols, they work hand-in-hand to create powerful re-usable code that can work in many circumstances with many types.",,"use generic beautification to simplify generic functions and locate them to a natural type or protocol extension,use generic constraints to restrict the types that can be used with a generic function,use generics to create types,write functions with a generic type that work with any type",4,,"Swift Generics for iOS1 w/ Andrew Madsen,Swift Generics for iOS4 w/Dave DeLong,iOS - Swift Generics for iOS6 w Ben Gohlke",,,Swift Generics,Intermediate Swift,,iOS Development Core,4,1,1,0,0,1,,7/17/2018 12:49pm,rec8C6QIRU73EL55A
Protocol Oriented Programming,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/17/2018 12:49pm,recd3Sao4uALfZ4ko
Intermediate Codable,,,,"use a custom init(from:) method to decode objects whose properties contain both the key and value from a json dictionary,implement encode(to:) and init(from:) methods to customize encoding and decoding,understand and explain Codable's data types",3,,"iOS 1 - Advanced Codable Guided Project with Spencer Curtis,Intermediate Codable for iOS4 w/Dave DeLong,iOS Intermediate Codable for iOS6 w/ Ben Gohlke",,,Albums,Intermediate Swift,,iOS Development Core,3,1,3,0,0,2,,7/17/2018 12:50pm,recNbjD51d0pgqygc
Debugging I - Basic Debugging Tools,,,,"use breakpoint actions to print information without modifying source code,debug exceptions using an exception breakpoint,implement description and debugDescription to provide better descriptions of custom types,use the LLDB command line to inspect variables with po,use Xcode’s variables view and hover feature to inspect the current value of variables,use the Xcode debugger’s single step tools to move through code being debugged,set breakpoints in code",7,,Debugging I - Basic Debugging Tools for iOS1 w/ Andrew Madsen,,,Debugging - Journal,iOS Code Quality,,iOS Development Core,7,1,7,0,5,2,,7/17/2018 12:50pm,reckP1lCU3JLRd9JA
Debugging II - Instruments,,,,"use Instruments’ Allocations instrument to determine the cause of high memory usage,use Instruments’ Time Profiler instrument to understand slowness in an application,understand and explain the purpose of Instruments and the problems it helps solve",3,,Debugging II - Instruments for iOS1 w/ Andrew Madsen,,,Performance Tuning - Journal,iOS Code Quality,,iOS Development Core,3,1,3,0,3,2,,7/17/2018 12:50pm,recAu2ZqiEMXVsPZS
Unit Testing I - Intro to Unit Testing,,"Unit testing allows you to write code that tests to make sure that your application code works properly. You can verify that your functions actually return the correct results for a given set of arguments. You can ensure that your classes behave correctly in various situations. When you write a good set of unit tests, you can be more confident that your code works the way it's supposed to. Updating, extending, and refactoring code runs the risk of introducing new bugs. Unit tests help significantly reduce this risk. In this lesson, you'll learn how to use Xcode's tools to add unit tests to your project, how to write basic unit tests, and how to run them to ensure that your code works correctly.",,"run unit tests in Xcode,use XCAssert functions to test whether code is working correctly,implement unit tests using XCTestCase,add a test target to their existing app,understand and explain the purpose of unit testing",5,,Unit Testing I - Intro to Unit Testing for iOS1 w/ Andrew Madsen,,,iOS Tic Tac Toe Unit Testing,iOS Code Quality,,iOS Development Core,5,1,5,5,4,3,,7/17/2018 12:50pm,recfUVEglad8Xlwmr
Unit Testing II - UI Testing,,,,"use expectations and the wait API to wait for UI elements to appear or change,use assertions to test for expected UI behavior,add accessibility identifiers to UI elements to improve testability,clean up recorded code,record UI tests using Xcode’s recording feature,add a UI test target to an existing app,understand and explain the purpose of UI Testing",7,,iOS 1 - UI Testing w/ Spencer Curtis,,,Astronomy - UI Testing,iOS Code Quality,,iOS Development Core,7,1,7,0,7,2,,7/17/2018 12:51pm,recHlbnBEH9iwDOaZ
Audio,,,,"store audio on disk efficiently,record audio using AVAudioRecorder,play audio using AVAudioPlayer",3,,"Audio for iOS1 w/ Andrew Madsen,Lambda School - iOS - Audio with Dave Delong",,,Lambda Timeline - Audio Comments,iOS Media Programming,,iOS Development Core,3,1,0,0,0,1,,7/17/2018 12:51pm,recUlFDpRHf4YejIE
Video,,,,"use AVPlayer to play video,use AVFoundation’s camera capture APIs to capture video from the camera",2,,Video for iOS1 w/ Andrew Madsen,,,Lambda Timeline - Video Posts,iOS Media Programming,,iOS Development Core,2,1,0,0,0,1,,7/17/2018 12:51pm,rect3Cj0FnrJT614c
Core Image,,,,"connect UI controls to Core Image filter settings,apply Core Image filters to images,convert between UIImage and CIImage,use the documentation to find and understand available Core Image filters",4,,Core Image for iOS1 w/ Andrew Madsen,,,Lambda Timeline - Image Post Filters,iOS Media Programming,,iOS Development Core,4,1,0,0,0,1,,7/17/2018 12:51pm,rec3q2b8sJNRzvqEB
MapKit,,,,"customize the appearance of map annotations,display annotations on a map view,understand and use MKCoordinateRegion/Span to show a specific location on a map view",3,,iOS3 - MapKit with Spencer Curtis,,,Lambda Timeline - Post Geotags,iOS Media Programming,,iOS Development Core,3,1,3,2,0,2,,7/17/2018 12:51pm,recGzuI2ojm8ttDso
Cocoa Design Patterns,,"Over the years, as programmers have solved similar problems over and over, we as a community have come up with common templates or rules of thumb for solving some of those problems. These templates are called _design patterns_. Design patterns aren't dogmatic sets of rules that you must _always_ follow. Rather, they're a toolbox full of ideas that will help you make sense of and structure your code so that it's good. That is, so that it's understandable, readable, maintainable, debuggable, extensible, performant, and reliable.

In this module, you'll learn a few of the most common and useful design patterns used when developing iOS apps.",,"explain and use the memento pattern via state restoration,explain and use notifications,explain and use the facade design pattern,""explain and use the singleton design pattern, including understanding its drawbacks"",understand and explain what a design pattern is and why they’re useful",5,,Cocoa Design Patterns for iOS1 w/ Andrew Madsen,,,,Modularity,,iOS Development Core,5,1,5,5,0,3,,7/17/2018 12:52pm,recJKsgoU4TEuS6g4
Creating Frameworks,,,,"""make good decisions about abstraction, API surface, and modularity when creating a framework"",""use Swift’s access control modifiers appropriately to make code private, internal, or public"",include sub-projects with a framework in an Xcode app project,create a framework for sharing code between multiple apps",4,,Creating Frameworks for iOS1 w/ Andrew Madsen,,,Loading UI Framework,Modularity,,iOS Development Core,4,1,4,0,1,2,,7/17/2018 12:52pm,rechdPzkICrXrsewC
Alternative Architectures,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/17/2018 12:53pm,recHAjPeDlrfnEzpT
RxSwift,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/17/2018 12:53pm,reclOd32Zjqtcrtmd
Intro to Objective C,,,,"explain and use Objective-C syntax to send messages / call methods,instantiate a new object in Objective-C,implement an initializer in Objective-C,declare and define Objective-C Methods,declare properties using Objective-C's @property syntax,understand and explain the difference between header (.h) and implementation (.m) files,create an Objective-C class,understand why Objective-C is important",8,,"Intro to Objective-C for iOS1 w/ Andrew Madsen,Intro to Objective-C for iOS2 w/ Andrew Madsen,Intro to Objective-C for iOS4 (Take 2) w/ Andrew Madsen",,,Planets ObjC,Objective-C Part 1,,iOS Development Core,8,1,8,3,1,2,,7/17/2018 12:53pm,recbTgrl5Xx0tMd1z
"Primitives, NSNumber, and Mutability",,,,"use copy/mutableCopy to convert from immutable to mutable and vice versa,understand and explain the difference between immutable and mutable classes,use NSNumber to convert between primitive numbers and objects,understand and briefly explain the concept of pointers,""explain the difference between an object and a primitive, along with common examples of each""",5,,"""Primitives, NSNumber, and Mutability for iOS1 w/ Andrew Madsen"",""Primitives, NSNumber, and Mutability for on March 7, 2019 iOS4 w/ Andrew Madsen""",,,RPNCalculator ObjC,Objective-C Part 1,,iOS Development Core,5,1,4,4,0,1,,7/17/2018 12:54pm,rec3q8LQgUtkYdCKR
"Properties, Categories, and Extensions",,,,"understand and explain the difference between categories and class extensions,use categories to add methods to an existing class,use class extensions to add private properties to a class,use class property attributes,use property attributes for access (readonly vs. readwrite),implement custom property accessors in Objective-C",6,,"""Properties, Categories, and Extensions for iOS1 w/ Andrew Madsen""",,,Documents ObjC,Objective-C Part 1,,iOS Development Core,6,1,1,1,0,1,,7/17/2018 12:55pm,rec4HyrFH1sf5HPin
,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/17/2018 12:56pm,recBqmLqAXkrRD06z
Swift and ObjC Interoperability,,,,"call Swift methods from Objective-C,call Objective-C methods from Swift,annotate Objective-C class interfaces with lightweight generics,annotate Objective-C class interfaces for nullability,import a Swift module header to use Swift code from Objective-C,use a bridging header to expose Objective-C to Swift",6,,"Swift and Objective-C Interoperability for iOS1 w/ Andrew Madsen,Swift and Objective-C Interoperability for iOS2 w/ Andrew Madsen",,,Astronomy ObjC Part 1,Objective-C Part 2,,iOS Development Core,6,1,4,0,0,1,,7/17/2018 12:56pm,rec2XUWU0BvlYDXc5
KVO/KVC,,,,"use Key Value Observing to observe property changes on an object in Swift,use Key Value Observing to observe property changes on an object in Objective-C,understand and explain what is required for a class/property to be Key Value Coding compliant,understand and explain Key Value Coding and common scenarios where it is useful",4,,KVO/KVC for iOS2 w/ Andrew Madsen,,,"Unnamed record,Astronomy ObjC Part 2",Objective-C Part 2,,iOS Development Core,4,1,0,0,0,1,,7/17/2018 12:56pm,reczXzytQnNHmSM0C
Memory Management,,,,"use closure capture lists to prevent retain cycles in closures,use weak properties to fix retain cycles,understand and explain what a retain cycle is,effectively use custom autorelease pools in Swift and Objective-C,understand and explain what autorelease means,understand and explain Objective-C’s reference counting system,understand and explain the rules of manual reference counting",7,,"Memory Management for iOS1 w/ Andrew Madsen,Memory Management for iOS2 with Andrew Madsen",,,Contacts MRC,Objective-C Part 2,,iOS Development Core,7,1,4,0,0,1,,7/17/2018 12:56pm,recp62euaE66xTfaX
Cocoa Design Patterns in ObjC,,,,,0,,,,,,Objective-C Part 2,,iOS Development Core,0,0,0,0,0,0,,7/17/2018 12:57pm,recE7B7AMeF4V487Z
watchOS,,,,,0,,"watchOS for iOS1 w/ Andrew Madsen,watchOS for iOS2 with Andrew Madsen",,,Tic Tac Toe - WatchOS Extension,iOS Other Platforms,,iOS Development Core,0,0,0,0,0,0,,7/17/2018 12:57pm,recHII16RHea7NBCK
tvOS,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/17/2018 12:57pm,rec5FPmJ9wW7WsDyw
macOS,,,,,0,,"macOS for iO1 w/ Andrew Madsen,macOS for iOS2 with Andrew Madsen",,,Filters,iOS Other Platforms,,iOS Development Core,0,0,0,0,0,0,,7/17/2018 12:57pm,recorENpc70hwMlq5
App Extensions,,,,"share user defaults between an app and an extension using an app group,create an app group,create a today widget,create an extension target in an existing app project,separate shared code into a framework",5,,App Extensions for iOS1 w/ Andrew Madsen,,,Calculator - Today Extension,iOS Other Platforms,,iOS Development Core,5,1,0,0,0,1,,7/17/2018 12:57pm,recopJapq6vgZgBLp
"Drawables, Themes, and Resource Files",,,,"use drawable resources in code,prep artwork for Android,allow users to select themes,work with Android Themes,create Custom Themes,use Android resource files",6,,"""'Drawables, Themes, and Resource Files' for AND2 w/ Chance Payne""",,Note Taker - Themes,Theming,Android Fundamentals II,,Android Development Core,6,1,0,0,0,1,,7/17/2018 2:04pm,rectRvatVGpfeNoOg
Showing Lists,,,,"attach an adapter to an element in the GUI,build a list adapter class to work with their custom list layout,understand what a list adapter does,understand how to create a custom layout for lists",4,Module Intro - Showing Lists with Chance Payne,"Showing Lists for AND1 w/Chance Payne,Showling Lists for AND2 w/Chance Payne",,"Note Taker - Recycler View,RecyclerView Colors Demo",Recycler View List,Android Fundamentals II,,Android Development Core,4,1,0,0,4,1,,7/18/2018 12:22pm,recL9kWuvqTDGpDav
,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/19/2018 10:45am,recmtN5zGW6KkaFcO
Delivering a Single Page Application,,"You will be building software when you get a job. Because there are many ways to build software, we're going to introduce you to three of them. ",,"describe what Agile methodology is and outline the pros and cons of agile development,describe their role as a Front End Architect",2,,"CS11 - FE Project week Demos,Software Development Methods for FSW14 w/ Dustin Myers",,,,Build Week: Front End ,,Full Stack Web Development Core,2,1,1,1,0,1,,7/19/2018 5:15pm,recRqnIhWSmBV4eYP
Room Persistence Library (Android - Deprecated),,,,"understand how Room improves the process of upgrading a database to a new version,understand how DAOs in the Room library vary from what we've done previously,understand how entities are defined in Room,understand and explain what the Room Persistence Library is and what benefits it provides",4,,,,,,,,,4,1,0,0,0,1,,7/20/2018 2:00pm,rec0yC65DsMbpP9KB
Broadcasts and Services,,,,"start an stop a service as necessary,create a service that will perform tasks in the background,understand how services differ from activities and what they can be used for",3,,"Broadcasts and Services for AND1 w/Chance Payne,Services for AND2 w/Chance Payne",,,Lambda MessageBoard Subscription,Android Networking,,Android Development Core,3,1,0,0,0,1,,7/20/2018 2:38pm,rec8QecAeJpFyjNTQ
Introduction to Relational Databases and SQL,,"The modern world runs on data. Our every day life is dependent on the data in our devices.The places we shop, the work that we do, all of it is data-driven. Computers and devices that do anything useful have some type of data persistence.

Out of all the technologies used to save and retrieve that data, Relational Databases is king. Learning how relational databases work and how to write `Structured Query Language (SQL)` to communicate with **Relational Database Management Systems** is a well sought out skill by companies of all sizes and a great tool to have in your arsenal.

On this lecture we will cover the following topics:

- Introduction to Relational Database Management Systems (RDBMS)
- Common Database Objects.
- The basics of Structured Query Language (SQL)
- Introducing SQLite.
- Introducing SQLite Studio.
- Creating databases and tables.
- Understanding common data types.

- Inserting data.
- Updating data.
- Deleting data.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

Students should have SQLite Studio installed before lecture begins.

This is a demo-heavy lecture with a lot of content, stay at higher level and assure students we will go deeper on the concepts that matter to developers as we continue the sprint.","use SQLite Studio to Manage Database Schemas,use SQLite Studio manage SQLite database,""insert, update and delete data using a relational database"",query data from a single table, explain what SQL is and its advantages,explain what a Relational Database is and its core components.",6,Introduction to Relational Databases and SQL for WEB16 w/ Luis Hernandez,"Intro to SQL for WEBEU1 w/ Gabriel Cabrejas,Introduction to Relational Databases and SQL for Web17,Introduction to Relational Databases and SQL for WEB18 w/ Luis Hernandez,Relational Databases and SQL for WEBPT4 w/ Diandra,Intro to Relational Databases and SQL for Web 19 w/ Luis Hernandez",,Web DB I Guided Project,Web DB I Module Challenge,Adding Data Persistence to Web APIs,Active,Full Stack Web Development Core,6,1,6,6,6,4,,7/20/2018 4:54pm,recFG7SqlSCAB8iU7
Introduction to Data Modeling,,"A data model is an abstraction of the information a system needs to fulfill it's purpose.

When designing a data model we go from high level Entities to low level database schemas. The lower we get the more detailed the model needs to be. We'll work at the physical database design level in order to learn how to create database objects, but always working towards the high level entities.

On this lecture we we'll cover:

- One to many relationships.
- Many to many relationships.
- One to one relationships.
- Normalizing the model.","Make sure all project dependencies are up to date. Clone the project to a new folder and install all dependencies to make sure there are no errors.

This is a critical lecture as students move forward. Take your time explaining every type of data relationship and provide plenty of demos. I find that modeling well known domains like e-commerce and social sites helps a lot.

Ask students if they have any project ideas and walk through creating a data model for it with them.","explain data normalization and normal forms,add relationships between tables",2,Introduction to Data Modeling for WEB16 w/ Luis Hernandez,"Introduction to Data Modeling for WEB15 w/ Luis Hernandez,Introduction to Data Modeling for Web17 w/Luis Hernandez,Introduction to Data Modeling for WEB18 w/ Luis Hernandez,Data Modeling for webpt4 w/ Jason Maurer,Introduction to Data Modeling for Web 19 w/ Luis Hernandez",,Web DB IV Guided Project,Web DB IV Module Challenge,Adding Data Persistence to Web APIs,Active,Full Stack Web Development Core,2,1,2,2,0,3,,7/23/2018 10:16am,rec5J23yAIdjmFbgP
Django basics and setup,checked,"You’ve learned how to build back-ends with node.js, using the minimalist Express framework. Now you’re going to continue building your Python proficiency and get started with another framework - Django. Your first goal - get set up, learn a bit about the system, and be able to make a simple “Hello Django” application.

Django is, like Python, a pragmatic “one right way to do it” system, specifically a web application framework built on the principles of convention over configuration and fast iterative design. It is “batteries included”, which means it comes with ways to do most common web application tasks (data models, ORM, templates, forms, validation, auth, etc.).

The Django ecosystem bills itself as “the web framework for perfectionists with deadlines” - these many included features are what makes it quick to build an MVP with. We will start by learning about and using these components, and then move on to extend the system and (to some extent) pick and choose the modules we actually want.

For now, get started by setting out on the objectives, setting up a Python/Django development environment and making a basic Django app. There are also many linked resources to check out for each objective, Django has an excellent community with lots of helpful tutorials and documentation.

Have fun getting started with Django!","Students should make a fork of the project repo and use that for the whole week. (This way they all have PRs against it.)

Friday announcement:
_________
@channel Hey everyone! We'll be working on Django this coming week and we have a couple videos in Training Kit for you to check out ahead of time.

Watch:

* Setup and Install
* Migrations
* Add a Model
* Using the Python Shell
* Adding a `.env` file

What we'll demo creation of a ""notes"" REST backend in Django over the course of the week, but you'll model your own dataset for whatever you choose. If you code along with the videos, above, you'll be a day ahead of the game.

https://learn.lambdaschool.com/cs/module/recvcvxozkm5cyoc4

Have a fun weekend!
__________

I didn't livecode the whole notes demo since they see it all in the videos. But I code up enough of it to livecode through Q&A as necessary.

Because this week is light, one option is to use the time to talk about GraphQL a bit. There's a repo with some sample code here: https://github.com/LambdaSchool/GraphQL . This isn't something that the students clone, but has some READMEs in it.

The Q&A is an opportunity to repeat material that might need more coverage. Polly can help ID this.

Pre-class videos for Day 1 in announcement, above.

Day 1:
```
/polly ""What should we cover in Q&A?"" ""Setup"" ""Migrations"" ""Models"" ""Python shell"" "".env files""
/polly ""Confidence in knowledge level for Django and Django models?"" ""0 - low"" ""1"" ""2"" ""3 - high""
```

* Q&A about setup/migrations/env
* GraphQL

Pre-class videos for Day 2: _Admin interface_, _Migrations II_, _Subclassing Models_, _SQL and ORM_.

Day 2:
```
/polly ""What should we cover in Q&A?"" ""Admin interface"" ""Migrations with new fields"" ""Subclassing models"" ""SQL and the ORM""
/polly ""Confidence in knowledge level for Django admin interface?"" ""0 - low"" ""1"" ""2"" ""3 - high""
```
* Q&A about pre-class vids.
* GraphQL

Pre-class videos for Day 3 (in the _Building APIs_ TK page): _REST Framework_, _Creating Records_.","run SQL and ORM commands to investigate Django's SQL database,subclass and specialize a model,migrate models with new fields added,set up and use the Django admin interface,use a .env file to track `SECRET_KEY` and other variables,add data to the database using a Python shell,add a data model to Django,describe and use the Django migration system,setup and use basic Python/Django development environment",9,,"Intro to Django for CS11 w/Beej Jorgensen ,""Intro to Django Admin Interface, GraphQL for CS11 w/Beej Jorgensen"",Intro to Django Day 2 for CS13 w/ Brady Fukumoto",,,Django back end,Intro to Django,,Computer Science Annex,9,1,9,9,9,4,,7/24/2018 4:16pm,recvCvXoZKm5cYOc4
Building APIs,checked,"The back-end of a web application is responsible for exposing an API that allows the front-end to create, read, update, and delete data (CRUD).

Representational State Transfer (REST) has been the dominant approach for API design, and is still a friendly and useful technique for applications that mostly work with single entities. REST is more of a style than a strict standard, but is most characterized by having stateless operations (a request does not depend or even know about preceding requests) and extending standard HTTP methods with a noun-verb paradigm to support CRUD operations on database entities.","Students should make a fork of the project repo and use that for the whole week. (This way they all have PRs against it.)

I didn't livecode the whole notes demo since they see it all in the videos. But I code up enough of it to livecode through Q&A as necessary.

Because this week is light, one option is to use the time to talk about GraphQL a bit. There's a repo with some sample code here: https://github.com/LambdaSchool/GraphQL . This isn't something that the students clone, but has some READMEs in it.

The Q&A is an opportunity to repeat material that might need more coverage. Polly can help ID this.

Day 3:
```
/polly ""What should we cover in Q&A?"" ""REST Framework in general"" ""Creating New Records""
/polly ""Confidence in knowledge level for Django REST Framework?"" ""0 - low"" ""1"" ""2"" ""3 - high""
```

* Q&A 
* GraphQL

Pre-class videos for Day 4: _REST Token Auth_

Day 4:
```
/polly ""What should we cover in Q&A?"" ""GraphQL"" ""Token Auth""
/polly ""Confidence in knowledge level for Django token authentication?"" ""0 - low"" ""1"" ""2"" ""3 - high""
```
* Q&A about pre-class vids.
* GraphQL","use token authorization to assign correct permissions to various users,control which information is exposed based on the currently-logged-in user,set up the Django REST Framework and connect a model to an endpoint",3,,"""Intro to Django REST, GraphQL w/Beej Jorgensen "",Intro to Django Templates and Static Pages for CS11 w/Beej Jorgensen,Intro to Django (day 3) for CS13 w/ Brady Fukumoto,Intro to Django Day 4 for CS13 w/ Brady Fukumoto",,,,Intro to Django,,Computer Science Annex,3,1,3,3,3,4,,7/24/2018 4:49pm,recuEEEsf9eXphxy0
Object-Relational Mapping & Relational Databases,checked,"Traditional web applications tend to serve and consume REST APIs - noun-verb centered interactions with entities represented in a database. Rather than force developers to handcraft SQL queries for these interactions, most web application frameworks encourage the use of an object-relational mapping (ORM) that allows the developer to naturally use classes/objects that represent their data and builds/executes the appropriate queries for them.

There are many advantages to this approach, most notably abstraction from the specific underlying database (allowing you to swap them more easily) and protection from SQL injection and other security risks. The cost is it’s difficult for an ORM to be as expressive and powerful as SQL, and it’s possible to misuse an ORM to accidentally build really inefficient queries (granted it’s also possible to misuse SQL in the same way). The Django ORM does a pretty good job of balancing usability and power, and with proper use can efficiently perform the vast majority of database interactions you are likely to need to do.",,effectively use Django's ORM functionality,1,,,,,,,,,1,0,0,0,0,0,,7/24/2018 5:11pm,recPDabmhClqn9HbU
Project Milestones - Polish,,,,work with a team to deliver a fully polished product,1,Labs V - Team Rubric,,,,,Labs V - Final Polish,,Lambda Labs,1,0,0,0,0,0,,7/25/2018 3:55pm,recjTfXFTsrOQ05Rn
"Probability, Statistics, and Inference",,"Statistics is, in some ways, the most tolerant branch of mathematics - unlike its kin, statistics accepts situations where the exact and complete are unattainable. We've learned about the basic summary metrics provided by descriptive statistics - mean, median, mode, standard deviation - and how these can be represented both numerically and visually to help tell a story about data.

In this module we'll still use these metrics, but go deeper into their meaning and interpretation, in order to perform hypothesis tests that allow us to state with ""confidence"" conclusions about our data. We'll also learn about the foundations of statistics - probability and set theory - where the pure mathematics comes from.

As with all data science, there are many methods here, and we will cover the solid foundation and most generally useful tools.","There'll be some redundancy with intro course here, but embrace it (repetition is good) and then go deeper. It's also the first mathematical topic in awhile for students, so play into that as well. Data science is about stories *and* math.","explain the importance of statistics in the context of informing a practical and reliable understanding of data,""demonstrate understanding of fundamental concepts of set theory and probability, including permutations, combinations, expected value, variance, binomial distribution, and Bernoulli trial""",2,,"""DS1: Probability, Statistics, and Inference with Aaron Gallant"",""Probability, Statistics and Inference for DS2 w/Aaron Gallant"",""Probability, Statistics, and Inference for DS3 w/Ryan Allred"",""Probability, Statistics, and Inference for DS4 w/ Jon-Cody Sokoll"",""Statistics, probability and inference for DSPT1 w/ Alex Kim""",,,,Statistical Tests and Experiments,,DS - Statistics Fundamentals,2,1,2,2,2,4,,7/26/2018 6:15pm,reca7wkH2otMJwYwL
Vectors and Matrices,,"Learning the fundamentals of linear algebra is critical in order to be a well-rounded data scientist. Many algorithm implementations are highly LA-based, so a familiarity with these topics is necessary in order to comprehend those approaches.

In this lesson we will be covering some of the most basic (yet the most important) topics in linear algebra including: 

- Scalars
- Vectors
- Norm
- Dot Product
- Cross Product
- Matrices
- Matrix Equality
- Matrix Multiplication
- Transpose
- Square Matrix
- Special kinds of Square Matrices
- Determinant
- Inverse
- Intro to NumPy for Linear Algebra",,"""Conceptualize and utilize vectors and matrices through matrix operations and properties such as: square matrix, identity matrix, transpose and inverse"",Explain why we care about linear algebra in the scope of data science",2,,"DS1: Vectors and Matrices with Ryan Allred,Vectors and Matrices for DS2 w/Ryan Allred,Vectors and Matrices for DS3 w/ Aaron Gallant,Vectors and Matrices for DSPT1 w/ Alex Kim",,,,Linear Algebra,,DS - Statistics Fundamentals,2,1,0,0,0,1,,7/26/2018 6:28pm,rec6oDxWOTL1e9Ii3
Dimensionality Reduction Techniques,,"One of Linear Algebra's great strengths is its ability to represent and perform efficient computations on high dimensional data. In this module we will give a short introduction to: 
- Vector transformations 
- Eigenvectors and Eigenvalues
- The ""Curse of Dimensionality""

If we can establish these topics sufficiently then we will have a great foundation for understanding Principal Component Analysis (PCA). PCA is a dimensionality reduction technique (feature extraction) that seeks to reduce the dimensions (columns) of a dataset while preserving the maximum amount of information (variance) possible. PCA is not an easy topic to wrap your head around, but we will demonstrate the steps for performing this technique using both numpy and sklearn and hopefully get you well on your way to ""grok-ing"" this popular and powerful dimensionality reduction technique. ",,"Understand the limitations that come with projecting data onto an eigenvector subspace  ,""Recognize high dimensionality data, and can employ PCA to improve model performance"",""Recognize when p > n, and why this leads to failure of certain ML models""",3,,"DS1: Dimensionality Reduction Techniques with Ryan Allred All changes saved.,Dimensionality Reduction Techniques for DS2 w/ Ryan Allred",,,,"Linear Algebra,Unsupervised Learning",,"DS - Statistics Fundamentals, DS - Annex",3,1,0,0,0,1,,7/27/2018 12:28am,rec0pSWqkfdxJv6eC
Regression Analysis,,,,"Student can code the closed form (linear algebra - Least Squares Solution) using numpy,Can use Gradient Descent to estimate linear regression coefficients,Fit linear regression models using both simple regression and multivariate regression models and interpret regression equations (regressions on high dimensionality datasets),Construct and plot a linear equation including higher powered terms to capture nonlinear functional forms,""Illustrate the difference between between precision, accuracy, and bias in predictive modeling""",5,,,,,,,,,5,1,0,0,0,1,,7/27/2018 12:28am,reccjhCNqON5oQYDg
Evaluating the Fit of Statistical Models,,,,"""Compare competing metrics of model fit and quality to select the most appropriate: R, R-squared, Accuracy, Root Mean Squared Error, AUC ROC"",""Understand the difference between type I and type II error, and the tradeoff inherent in trying to reduce both"",""Prepare and split data into train/test sets for validation of models taking into account techniques and concepts such as: cross-validation, overfitting, underfitting, sources of bias, data quality issues"",""Measure the significance *and* effect size of a statistical prediction, and apply both as appropriate to the situation""",4,,,,,,,,,4,1,0,0,0,1,,7/27/2018 12:28am,recewziI4kYhom1Dp
Begin your portfolio,,"Congratulations, you've successfully mastered some of the basics of loading, cleaning and reshaping data! 

Let's look ahead to week five: You'll complete your own data storytelling project. We're going to start thinking about possibilities now, so you'll be ready! You'll learn a process to find interesting ideas for data storytelling projects in your personal portfolio.

Now let's look ahead all the way to the end of Week 30, when you've completed your data science program. You'll have the skills and confidence to be hired as a data scientist, and you'll differentiate yourself with your portfolio of projects.

Finding interesting ideas and data for your first project will help you stand out and get hired!","Not only should this day focus on understanding the importance of portfolios, and setting up a basic portfolio page with Beautiful Jekyll, Lambda School's careers staff is now requiring all portfolio sites be hosted on a custom domain name. We will also show students how to acquire and set up DNS and Custom Resource Records in order to set up a custom domain name on their new portfolio site.","find data sources for ideas,generate interesting ideas for data storytelling,write a professional biography,create a portfolio site with GitHub Pages",4,,"Find Ideas for Portfolio Projects for DS2 w/ Ryan Herr,Begin your portfolio for DS3 w/ Aaron Gallant,Find Portfolio Ideas for DS4 w/ Aaron Gallant,Find portfolio ideas for DSPT1 w/ Alex Kim",,,,Data Wrangling and Storytelling,,DS - Statistics Fundamentals,4,1,4,4,0,3,,7/27/2018 12:29am,recedjanLBpQxIc2r
Begin your portfolio,,,,"write a professional biography,create a portfolio site with GitHub Pages",2,,,,,,Creating Professional Portfolios,,DS - Annex,2,1,2,2,0,3,,7/27/2018 12:29am,recrpNoErU9SW8Qze
Writing and Presentation Skills,,,,"critique the rhetoric and analysis of data journalism articles,edit writing based on usability research guidelines,write a blog post on a technical topic",3,,,,,,,,,3,1,0,0,0,1,,7/27/2018 12:29am,recaW1IOkqtw3OXQN
Containers and Reproducible Builds,,"""Works on my machine"" is a common state of code developed by people lacking in software engineering background. For code (and science) to really work, it must be *reproducible*.

We've already learned about `pipenv` as a Python packaging tool, which goes a long way towards giving reproducible builds - but for even greater reproducibility (and deployability), *containers* are the tool of choice. A container is a minimal virtual operating system, complete with all the software needed to run the desired application. Because they pack everything together, they are truly *identical* to run regardless of host.

Docker is a common standard and tool for containers, and we will use it to build and run Linux containers with Python code.","Getting Docker working is non-trivial, *especially* on Windows. The short of it - unless you have ""Windows Professional"" (or whatever comparable edition which includes virtualization support), Docker installation requires also fussing with VirtualBox to install Linux and be able to actually run containers. (MacOS ""just works"", as does Linux.)

Baseline/fallback for people with local issues: https://training.play-with-docker.com/


Register a hub.docker.com account, and you can step through a series of tutorials that let you actually start/run containers in the browser.

Illustrative image: https://image.itmedia.co.jp/news/articles/1406/10/yu_docker1.jpg","create/customize a Dockerfile to build a basic custom container,launch Docker containers and access/execute programs on them",2,,"DS1: Containers and Reproducible Builds with Aaron Gallant,Containers and Reproducible Builds for DS2 w/ Aaron Gallant",,,,Software Engineering and Reproducible Research,,DS - Data Engineering,2,1,2,2,0,3,,7/27/2018 12:29am,recLjxZbBV3Jmrj2T
SQL for Analysis,,"SQL is simple, but can still be surprisingly powerful - as we learned in the first unit, a lot of analysis can be done with just descriptive statistics, and with the right query SQL can do all that and more.","Still want to cover:
- SQL injection
- Different ways to connect to db (terminal, orm)
- Pipeline ""roll-up""","create a data pipeline with SQL,deploy and use a simple PostgreSQL database",2,,"DS1: SQL for Analysis with Aaron Gallant,SQL for Analysis for DS2 w/ Aaron Gallant",,,,SQL and Databases,,DS - Data Engineering,2,1,2,2,0,3,,7/27/2018 12:29am,recSdx6IFkDxqgxGb
Web Application Development with Flask,,"What is a web application? It's a pretty overloaded term, but in general refers to any sort of useful interactive tool you can load in a web browser. In this module we'll break down the specific components of a web application, and learn how to develop our own basic web application using the Flask Python framework.","Focus on pure Python/Flask - templates, JavaScript/HTML/CSS are all *stretch* (encourage students to chat with web students if they're curious). Also for the first day, acknowledge dbs/more powerful backends, but don't go into that either (just stick with SQLite).


From day 1, make sure students use pipenv, or if necessary pip. Conda will not work as well with deployment later on.

Some fun Twitter users to follow with the TwitOff demo: https://www.springboard.com/blog/top-data-scientists-on-twitter/","create a simple Python web application that exposes an API to URL endpoints,""distinguish between front-end, back-end, database, and what tasks are appropriate for which""",2,,DS1: Web Application Development with Flask with Aaron Gallant,,,,Productization and Cloud,,DS - Data Engineering,2,1,2,2,2,4,,7/27/2018 12:30am,recKGvwkPaEsfnwDL
"Apache Spark, day 1",,,,"use Spark Structured Streaming to read and visualize time series data,""use the Spark DataFrame API to read data, do transformations, run actions, explain execution plans, and show results""",2,,"""DS1: Apache Spark, Day 1 with Ryan Herr"",""DS1: Apache Spark, Day 1 Q&A with Ryan Herr"",""Apache Spark, day 1 for DS2 w/ Ryan Herr""",,,,Big Data: AWS & Spark,,DS - Data Engineering,2,1,0,0,0,1,,7/27/2018 12:30am,reccC8fSLqZspQs7Q
"""Productionize"" Earlier Analysis",,,,,0,,,,,,DS Project 3 - Build Week 1,,DS - Data Engineering,0,0,0,0,0,0,,7/27/2018 12:30am,rectB8SZtePvzdPiv
Extend notebook with predictive analysis,,"Using what you've learned in this unit, revisit your project and add regression models to generate predictions.",,"predict new results with a regression model,compare and contrast regression models,fit and validate other regression types,fit and validate a linear regression,distinguish between dependent and independent variables",5,,,,,,,,,5,1,0,1,0,1,,7/27/2018 12:30am,reccyZAAxgnxhDqxk
Make a notebook exploring data,,"Create a Notebook with Colab or Jupyter for your data storytelling project.

Remember that your portfolio’s purpose is to help you stand out and get hired! So your notebook should have more than just code and exploratory visualizations. Instead, your goal is to tell an interesting story, with polished explanatory visualizations, like a FiveThirtyEight article.

This project is the first of multiple you’ll make for your portfolio. Future projects will involve regression models, software engineering, and machine learning. The goal for this data storytelling project is to really “stick the landing” with polished presentation.

For your target audience, imagine a business manager who is data literate at reading basic reports but not at producing them, and who is busy with many responsibilities, one of which is reviewing a big stack of data science job applications. You want to grab this manager’s attention with your well-designed visual and first few sentences.

At the beginning of Sprint 2, you learned how to find ideas and data for your project. At the end of Sprint 3, you wrote about your project: your hypothesis, first paragraph, sources, and next steps. So, you should already have chosen your idea and acquired your raw data. If not, please speak with your PM or an instructor.",,"generate appropriate visualizations for a dataset,characterize the distributions and relationships of variables in a dataset,identify types of variables in a dataset,clean a dataset using common Python libraries,form and test meaningful hypotheses for a dataset",5,,DS Project 1: Data Storytelling Blog Post for DS2 w/ RyanAllred,,,,,,,5,1,1,2,1,1,,7/27/2018 12:30am,rec19XjzCshLLZLaB
The React Lifecycle,,"Every component in React has what we call a lifecycle. The Lifecycle is a a part of how our components operate under the hood. Being able to demonstrate understanding of the React Component Lifecycle by knowing how to use a few of the ""Methods"" that are provided by it, will help you understand how and why react behaves the way it does at times.","At the end of this module, the React Instagram Clone should look a lot like this: 
https://codesandbox.io/s/9118x6vvv4","use the `componentDidMount` function to set a component's state post render,properly explain what the `constructor` and `render` methods do and what their place is in the React Component Lifecycle,describe the three phases of the React Component Lifecycle",3,,"The React Lifecycle for CS12 w/ Ryan Hamblin,The React Lifecycle for FSW13 w/ Dustin Myers,The React Lifecycle for FSW15 w/ Dustin Myers,The React Lifecycle for FSWPT3 w/ Dan Frehner,The React Lifecycle for WEB16 w/ Dustin Myers,The React Lifecycle for WEB17 w/ Dustin Myers,The React Lifestyle for WEBPT4 w/Dan Frehner,The React Lifecycle for WEB18 w/ Dustin Myers,The React Lifecycle for Web 19 w/ Dustin Myers,The React Lifecycle for WEB20 w/ Dustin Myers",,,,Intermediate React,,Full Stack Web Development Core,3,1,3,3,3,4,,7/29/2018 8:12pm,rec1DPoOZSmocXfak
React Composition Patterns,,,"
At the end of day 3 the React Instagram Clone should look a lot like this: 
https://codesandbox.io/s/l9m9xx6j57","explain why state driven views and components are useful patterns for scalability and reuse and how React enables those patterns,be able to explain and implement a React Higher Order Component to conditionally render protected content to the screen",2,,"React Composition Patterns III for CS11 w/ Ryan Hamblin,React Component Patterns for CS12 w/ Ryan Hamblin,React Composition Patterns for FSW13 w/ Dustin Myers,React Composition Patterns for FSW14 w/ Dustin Myers,React Composition Patterns for FSW15 w/ Ryan Hamblin,React Composition Patterns for WEBPT3 w/ Dan Frehner,React Composition Patterns for WEB16 w/ Dustin Myers,React Composition Patterns for WEB17 w/ Dustin Myers,Higher Order Components for WEBPT4 w/Dan Frehner,React Composition Patters for WEB18 w/ Dustin Myers,React Composition Patterns for Web 19 w/ Dustin Myers,React Composition Patterns for WEB20 w/ Dustin Myers",,,,Intermediate React,,Full Stack Web Development Core,2,1,2,2,2,4,,7/29/2018 8:13pm,reciwJYeSHSdkAxdh
iOS Fundamentals Project Week Kickoff,,,,understand what is expected of them for project week 1,1,,,,,,iOS Unit 1 Project Week: Core iOS,,iOS Development Core,1,0,1,0,0,0,,7/30/2018 3:21pm,recUc8E71du8GKZ34
Intermediate iOS Development Project Week Kickoff,,"This week you will be building an application of your own choosing. You are to treat this week as if you are building this application at a company and the instructor is your client. The project managers (including section lead) will be your main support throughout the week.


The main objective of this week is to develop the MVP features of your application. There are a few requirements that you should do before starting this project:

- You must present your idea to your instructor and have them approve it. This idea can be anything you want, taking into account you will have from Monday through half of Thursday to work on it. Try to keep it feasible given the length of time you have!
- A solid project plan/research. More details on this below.


## Project Research and Planning

A vital part of any project is planning and research, and writing an application is no exception. This is especially true of a project that you have a deadline for, such as this one and any project you work on at your future job. 

Failure to do proper research can result in a significantly shorter amount of time spent working on your application. You may not be a much of a ""planner"", however being able to research and plan out any project including this one is extremely beneficial. We've been able to see hundreds of students build projects with similar time constraints to this one; the end result between a well-planned project and a poorly or not planned project is often staggering.

Once you know what kind of project you want to write, take time to do a bit of research. In order to facilitate this process, use the project planner [found here](https://user-images.githubusercontent.com/16965587/51573635-6c5cda00-1e67-11e9-93c8-66e73b034456.png). Please watch the video on how to effectively use this project planner as well.

In the past, students have wanted to use APIs that they had to email the maintainer for an API key instead of getting one immediately upon signing up to use the API. When researching APIs to use and come across one like this be wary. If you email them even over the weekend before this project week, there is no guarantee that they will respond. Consider finding another API that has similar information/functionality before resorting to using one like that.

This principle applies to anything you aren't absolutely sure about. Doing the research **before** you even make an Xcode project and realize that something won't work the way you thought it would is going to save you time and frustration.

Project planning will provide you with a good roadmap to know how long you have to work on each feature and have a **solid** idea of what needs to be done before diving head-first into the project.",,,0,Project Planning,,,,,iOS Unit 2 Project Week: Architecture and Design,,iOS Development Core,0,0,0,0,0,0,,7/30/2018 3:22pm,recEdc6KqieeAXkSL
Advanced iOS Development Project Week Kickoff,,,,,0,,,,,,iOS Unit 3 Project Week: Objective-C and Beyond,,iOS Development Core,0,0,0,0,0,0,,7/30/2018 3:22pm,rec5ExcQfqX7JZFdL
Fragments,,,,"communicate between fragments and activities,work with two fragments on larger screens,show fragments in a dialog window,build and add a fragment programmatically,add a fragment to an activity using XML,write a fragment class",6,,"Fragments for AND w/Josh Halvorson,Fragments for AND2 w/Josh Halvorson",,,Android Fragment Basics,Android User Interface,,Android Development Core,6,1,0,0,0,1,,7/30/2018 5:58pm,recPhQ8QSfhSlYtsg
Animated Images,,,,"use animated vector drawables in apps,create animated vector drawables,work with simple vectors in inkscape,create an animated drawable object,use animated gifs in apps",5,,"Animated Images for AND1 w/Chance Payne,Animated Images for AND2 w/Chance Payne,Animated Images for AND2 w/Chance Payne ",,,Android Animated Images,Android User Interface,,Android Development Core,5,1,0,0,0,1,,7/30/2018 5:58pm,recvMFHt8sGuZUaae
Custom Views,,,,"retrieve custom attributes for use in the custom view,create custom attributes for the view,add a XML layout to a custom view,create simple shapes in canvas,create and use a basic custom view",5,,"Custom Views for AND1 w/Chance Payne,Custom Views for AND2 w/ Chance Payne",,,Android Volume Control View,Android User Interface,,Android Development Core,5,1,0,0,0,1,,7/30/2018 6:04pm,recy8onxqcAs1rjYz
Layout Animations,,,,"use shared elements between activities,animate transitions between activities,animate items in a RecyclerView,automatically update layout changes",4,,"Layout Animations for AND1 w/Chance Payne,Layout Animations for AND2 w/Chance Payne",,,Android Layout Animations,Android User Interface,,Android Development Core,4,1,0,0,0,1,,7/30/2018 6:05pm,recc08oJ0fqdzeinY
Java Generics,,,,"write generic classes,write generic methods,explain what a generic object is,explain the role of the Object class",4,,"Java Generics for AND1 w/Chance Payne,Generics for AND2 w/Chance Payne",,,Android Generics Counted,Intermediate Java,,Android Development Core,4,1,0,0,0,1,,7/30/2018 6:06pm,rec1MiBKCrHnXJD9C
Abstraction and Interfaces,,,,"use interfaces as callbacks,define and implement interfaces,work with abstract classes,define abstract methods",4,,Abstraction and Interfaces for AND2 w/Chance Payne,,,Android Interfaces,Intermediate Java,,Android Development Core,4,1,0,0,0,1,,7/30/2018 6:06pm,reczAZos36q8WlIEI
Inheritance and Polymorphism,,,,"work with combinations of parent and sub-classes,override methods in a subclass,write a set of inherited classes,explain what it means to inherit from a class",4,,"Inheritance and Polymorphism for AND1 w/Chance Payne,Inheritance for AND2 w/Chance Payne",,,Inheritance Shopping,Intermediate Java,,Android Development Core,4,1,0,0,0,1,,7/30/2018 6:07pm,recfW6LNb6LPWd4BW
Concurrency,,,,"avoid code which could result in deadlocks,use locks and semaphores to share data safely,identify code that could cause race conditions,identify situations where multiple threads are useful",4,,Concurrency for AND2 w/Chance Payne,,,Android Hungry Developers,Intermediate Java,,Android Development Core,4,1,0,0,0,1,,7/30/2018 6:07pm,rectvR2ulUhFXHH6Y
Debugging Tools,,,,"use watchers to show information without modifying source code,debug a physical device wirelessly on a local network,use Android Studio’s variables view to inspect the current value of variables,use the Android Studio debugger’s controls to move through code being debugged,debug exceptions using an exception breakpoint,set and manage breakpoints in code",6,,"Debugging Tools for AND1 w/Chance Payne,Debugging Tools for AND2 w/Chance Payne",,,Android Debugging Note Taker,Android Code Quality,,Android Development Core,6,1,0,0,0,1,,7/30/2018 6:08pm,rec6YsJCZImEZf67i
Unit Testing,,"Unit testing allows you to write code that tests to make sure that your application code works properly. You can verify that your functions actually return the correct results for a given set of arguments. You can ensure that your classes behave correctly in various situations. When you write a good set of unit tests, you can be more confident that your code works the way it's supposed to. Updating, extending, and refactoring code runs the risk of introducing new bugs. Unit tests help significantly reduce this risk. In this lesson, you'll learn how to use Android Studio's tools to add unit tests to your project, how to write basic unit tests, and how to run them to ensure that your code works correctly.",,"use Roboelectric to test activity functionality,perform additional setup to test more complicated code,implement simple unit tests using JUnit,understand and explain the purpose of unit testing,understand the iterative workflow with test driven development",5,,"Unit Testing 1 for AND1 w/Chance Payne,Unit Testing for AND2 w/Chance Payne",,,Unit Test Calculator,Android Code Quality,,Android Development Core,5,1,0,0,0,1,,7/30/2018 6:08pm,rec4c8YalXH1hKmuo
UI Testing,,,,"create a custom matcher tor testing,create an espresso test,setup to test an activity,configure an app to be tested with espresso,understand and explain the purpose of UI Testing",5,,"Unit Testing 2 for AND1 w/Chance Payne,https://youtu.be/qN1ZCgWhR-0,UI Testing for AND2 w/Chance Payne ",,,Android UI Testing Calculator,Android Code Quality,,Android Development Core,5,1,0,0,0,1,,7/30/2018 6:08pm,rec7c9xfyMkDNPuCx
Performance Testing,,,,"inspect the user interface using layout inspector,inspect CPU activity and traces with CPU Profiler,inspect energy usage with Energy Profiler,inspect network traffic with Network Profiler,inspect the Java heap and memory allocations with Memory Profiler,work with the high level Android Profiler",6,,"Performance Testing for AND1 w/Chance Payne,Performance Testing for AND2 w/Chance Payne",,,Android Performance Improvement Volume Control Knob,Android Code Quality,,Android Development Core,6,1,0,0,0,1,,7/30/2018 6:08pm,recUaMLFtFGeHV118
Media Programming,,,,"manipulate media playback,prepare media asynchronously,play video files from either location,play audio from the local file system or internet,play audio from app resources",5,,"Audio for AND1 w/Chance Payne,Media Playback for AND2 w/Chance Payne",,,Android Media Player,Additional Android,,Android Development Core,5,1,0,0,0,1,,7/30/2018 6:09pm,rec3TLq9SA5aJ2HX1
Menus,,,,"enable and work with a navigation drawer in Java,define a navigation drawer in XML,respond to options menu selections,add an options menu to the action bar,define a menu in XML,understand and explain where menus are used",6,,"Menus for AND1 w/Chance Payne,Menus for AND2 w/Chance Payne",,,Android Menus Design,Additional Android,,Android Development Core,6,1,0,0,0,1,,7/30/2018 6:09pm,recLjzZATe2fqgtlR
Google Play Store,,,,"upload app,create a store listing,set up account,sign app,build apk file,version app,prepare app for release",7,,Publishing for AND1 w/Chance Payne,,,Google Play Publishing,Additional Android,,Android Development Core,7,1,0,0,0,1,,7/30/2018 6:09pm,recgIEkEHJLGJL9Oo
Location Based Services,,,,"add markers the map view,manipulate the map view,create a map activity,convert coordinates to street address,get GPS location coordinates,request “dangerous” permissions,setup google play services",7,,"Location Based Services for AND1 w/Chance Payne,Location Based Services for AND2 w/Chance Payne",,,Location Services Map Marker,Additional Android,,Android Development Core,7,1,0,0,0,1,,7/30/2018 6:09pm,recIUCASspRm557rQ
Modularity and Lifecycle,,,,,0,,,,,,Architecture and Design,,,0,0,0,0,0,0,,7/30/2018 6:11pm,recxIcH4tIjrvTyZX
Writing APIs,,,,,0,,,,,,Architecture and Design,,,0,0,0,0,0,0,,7/30/2018 6:11pm,reczvYS4x4r8t9SuK
Alternative Architectures,,,,,0,,,,,,Architecture and Design,,,0,0,0,0,0,0,,7/30/2018 6:15pm,recPjjOVYxtTlnAkK
Sharing,,,,,0,,,,,,Architecture and Design,,,0,0,0,0,0,0,,7/30/2018 6:15pm,rec7iGkcuWb1ZhFG2
wearOS,,,,,0,,,,,,Android Other Platforms,,,0,0,0,0,0,0,,7/30/2018 6:17pm,recBtYm73V0dkYaSm
Daydream VR,,,,,0,,,,,,Android Other Platforms,,,0,0,0,0,0,0,,7/30/2018 6:17pm,recwIye0QTDPmhB4A
Java Desktop,,,,,0,,,,,,Android Other Platforms,,,0,0,0,0,0,0,,7/30/2018 6:17pm,rec1Ap6cuxPFaiHC0
Java FX,,,,,0,,,,,,Android Other Platforms,,,0,0,0,0,0,0,,7/30/2018 6:18pm,recNDKUSX2IxtoOdm
"Alert Controllers, Picker Views, and Unwind Segues",,,,"create and present a UIAlertController,use an unwind segue to return to a previous view controller,use a UIPickerView to allow user to select from a list of items,use a Timer to do something at a specified time in the future",4,,"""iOS Alert Controllers, Picker Views, and Unwind Segues for iOS6 w/Paul Solt"",""iOS Alert Controllers, Picker Views, and Timers for iOS6 w/Paul Solt""",,,Cryptex,iOS Fundamentals II,,iOS Development Core,4,1,0,2,0,1,,7/31/2018 4:46pm,recoffvihVTUWe8M6
,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/31/2018 4:46pm,recGGwbHK14tRz4pW
,,,,,0,,,,,,,,,0,0,0,0,0,0,,7/31/2018 5:37pm,recp5aHvALhQsaLxU
React Router II,,"This module will guide you into the intricacies of React Router V4. As you learn and discover the inner workings of this package, your SPA's will start to come to live, you'll have more control over how your users view the content they're supposed to be viewing, and you'll be granted a rich developer experience. A lot of the items discussed here lend themselves to commonly used ",,"explain the difference between `Link` and `NavLink` and when to use which to navigate declaratively between routes,use the built in `history` object to programmatically navigate to other routes,add nested routes to an application and display sub-nav views,pass data to components rendered by React Router via the render prop ",4,,"React Router II for CS11 w/ Ryan Hamblin,React Router II for CS12 w/ Dustin Myers,React Router II for FSW13 w/ Dustin Myers,React Router II for FSW14 w/ Dustin Myers,React Router II for FSW15 w/ Dustin Myers,React Router II for WEBPT3 w/Dan Frehner,React Router II for WEB16 w/ Dustin Myers,React Router II for WEB17 w/ Dustin Myers (Part 1/2),React Router II for WEB17 w/ Dustin Myers (Part 2/2),React Router II for WEBPT4 w/Ryan Clausen,React Router II for WEB18 w/ Dustin Myers",,,"React-Router-Apple-Nav STRETCH ASSIGNMENT,React-Router-Movies",Single Page Applications,,Full Stack Web Development Core,4,1,4,4,4,4,,8/1/2018 5:11pm,recYkF1FDilIedmwX
HTTP / AJAX II,,,,"make DELETE requests to an external API using axios,make PUT requests to an external API using axios,make POST requests to an external API using axios",3,,"HTTP / AJAX II for CS12 w/ Dustin Myers,HTTP/AJAX II for FSW13 w/ Dustin Myers,HTTP / AJAX II for FSW14 w/ Dustin Myers,HTTP/AJAX II for WEBPT3 w/ Dan Frehner,HTTP/AJAX II for WEB16 w/ Dustin Myers,HTTP / AJAX II for WEB17 w/ Dustin Myers (Part 1/2),HTTP / AJAX II for WEB17 w/ Dustin Myers (Part 2/2),HTTP / AJAX II for WEB18 w/ Dustin Myers,HTTP / AJAX II for Web 19 w/ Dustin Myers",,,"HTTP Movies - Stretch Assignment,HTTP-AJAX",Single Page Applications,,Full Stack Web Development Core,3,1,3,3,3,4,,8/1/2018 5:14pm,recupVjaAKPqbuk7Y
Introduction to UX,,"User Experience designers are in demand. Companies often expect their UX designers to have an enormous range of skills. But, what is UX? What should a UX designer be able to do? 

This module will provide an overview of the history of UX and how it fits into the overall software product design process. We'll review that process, discussing discovery, definition, ideation, prototyping, development, and testing.

In this module, we'll introduce the concepts of affordance and natural mapping, and discuss the usability heuristic ""Recognition is better than recall"".",Full lesson available here: https://docs.google.com/document/d/1lgCTgSGfsY-1D65x1GAbUJO3h6EmnN0OH3M8_OThaAw/edit#,"Articulate a basic summary of the history and context of user experience design,Explain how the user experience process fits in the overall product design cycle,""Understand and explain the concepts of affordance, “recognition is better than recall”, and natural mapping.""",3,,Introduction to UX for Section 1 w/ Christijan Draper,,,Evaluate the UX of a mobile app or web site,Introduction to User Experience Design,,Precourse UX,3,1,3,0,0,2,,8/2/2018 6:33pm,reci82PE9lL9xMKy3
Introduction to User Research,,The discovery phase is a time where designers seek to understand the user in context and in relation to the product. ,https://docs.google.com/document/d/15k6y6o8DZtpLSDvFQ9Z-a-ozB7YYgIrJEpiQJNom2GU/edit#,"Explain what user research is used for,Explain difference between qualitative and quantitative research,Explain relative strengths of observational research and inquiry research,conduct a user interview using best practices",4,,Introduction to User Research for Section 1 w/ Christijan Draper,,,Conduct an Interview,Introduction to User Experience Design,,Precourse UX,4,1,3,0,0,1,,8/3/2018 6:49am,rec60ofku2o2aEEKg
Defining the Product,,"The definition phase invites us to articulate clearly who our product is intended to help. It is a time to define and describe the circumstances surrounding the objectives and motivations of our product users. By clearly articulating these objectives and motivations, we can begin to craft solutions. This allows us to better understand and empathize with our potential users. It also helps us to be unified as a design and development team in justifying the design solutions that emerge.","Full lesson available here: https://docs.google.com/document/d/1wN4FFDGyiT5PBL9e-xGyMOOhidw8jAtIGCWLW2VT2qs/edit#
","Write user stories and job stories,Explain what a persona and proto-persona are and how they are used,Explain what a user journey map is,Diagram a user journey map,Explain what user and job stories are and how they are used",5,,Defining the Product for Section 1 w/ Christijan Draper,,,Create a User Journey Document,Introduction to User Experience Design,,Precourse UX,5,1,3,1,0,1,,8/4/2018 8:36am,rec8yUiTrsBzzV59Q
Introduction to Ideation,,Ideation is expansive and creative. It is intended to be a stage where we can frack our inhibitions and extract the insights hidden in our subconscious. The ideation process frees us partially from the constraints that keep our products in the status quo.,Full lesson available here: https://docs.google.com/document/d/13ZpTezeQL0LstmGwhFN4TZo91-ZG1qBWe_CwkhnIB6s/edit#,"Explain the difference between creativity and innovation,""Articulate, and participate in, effective ways to conduct creative exercises for ideation in UX design"",Sketch experience and interface ideas with pencil/pen and paper,Explain why sketching is a useful tool for UX designers",4,,Introduction to Ideation for Section 1 w/ Christijan Draper,,,Sketch Multiple Concepts for an Interface,Introduction to User Experience Design,,Precourse UX,4,1,1,2,0,1,,8/4/2018 8:38am,recSAQJwHu9qJp1Hw
Usability Heuristics,,"Since there are no hard-and-fast _right_ or _wrong_ choices in design, we rely on _heuristics_ to help inform the design process. Heuristics are tools and guidelines that can help designers make reasoned design decisions.",https://docs.google.com/document/d/1p59txYxSHixzb347JrRwqzB92ha_cxLOHfVF4_Lxu4c/edit#,"Name and define six usability heuristics/guidelines,Evaluate a web design or mobile experience based on an understanding of user experience design,""Evaluate websites, desktop applications, and mobile apps against the criteria of usability heuristics/guidelines"",Describe what a mental model is and why a designer should be aware of a user’s mental model",4,,Usability Heuristics for Section 1 w/ Christijan Draper,,,Evaluate multiple digital experiences using heuristic criteria,Introduction to User Experience Design,,Precourse UX,4,1,1,1,0,1,,8/4/2018 9:27am,rec4HbQA1d7M8986L
Visual Hierarchy and Wireframes,,"Once you have worked through ideas and the deciding power has bought off on a design direction and vision for your product, we move into the prototyping and design phase. At this point, you begin putting frames around the ideas generated in ideation phase.","Full lesson available here: https://docs.google.com/document/d/10T8bjFaQyv_YJdoyv8FUKLv-XotA0r7pw4NIdtuuzoY/edit#
","Apply principles of visual hierarchy with wireframes in Sketch,Explain the principles of visual hierarchy",2,,Visual Hierarchy and Wireframes for Section 1 w/ Christijan Draper,,,Create a website wireframe with multiple screens. Upload to Invision.,Introduction to User Experience Design,,Precourse UX,2,1,0,0,0,1,,8/4/2018 9:29am,reclN7epjVs1WZBje
Usability Testing,, Usability studies can be used at any stage of the product design process in which you have concepts you could show real users. Using actual users to test actual design concepts allows us to uncover our design blindspots early in the design cycle.,,"conduct and analyze a user test,set up a usability test",2,,"Usability Testing for Section 1 w/ Christijan Draper,Usability Testing for UX3 w/ Glenn Ference",,,Conduct Usability Test,"Introduction to User Experience Design,Prototyping",,"Precourse UX, UX Design Core",2,1,2,0,0,2,,8/4/2018 9:34am,recgbeMJz4aDgzoHl
High Fidelity Design and UX Wrap Up,,The high-fidelity interface design is the visual manifestation of the user experience and is generally the part of the design that needs the most polish. Understanding a few aesthetic principles can pay dividends in your career. ,"Full lesson available here: 
https://docs.google.com/document/d/12F1I66FSlIHwVT__8SYYDDVzS_yUjm2ZmGPY4Ux6DEs/edit#",Use Sketch to create a high-fidelity mock-up,1,,High Fidelity Design for Section 1 w/ Christijan Draper,,,Create Hi-fidelity Design,Introduction to User Experience Design,,Precourse UX,1,0,0,0,0,0,,8/4/2018 10:19am,rec84Zrjum6EhWFff
,,,,,0,,,,,,,,,0,0,0,0,0,0,,8/4/2018 10:24am,recYPfIcIQuAQpfws
Basic Authentication and REST Review,,,,,0,,"REST Review for iOS2 w/ Andrew Madsen,""REST, Closures, GCD Review for iOS5 w/ James Pacheco"",iOS Basic Authentication and REST Review for iOS6 w/Ben Gohlke",,,Gigs,iOS Networking Basics,,iOS Development Core,0,0,0,0,0,0,,8/5/2018 7:18pm,recajsEtrOdSEOU2r
Introduction to Authentication,,"Authentication is a complex and important topic. Complex because new threats surface every day that challenge our security strategies and standards. It is important because most of our lives depend on online services and computer systems that hold our sensitive data.

In this module we'll get a gentle introduction into the world of authentication, what it is and isn't, as well as some strategies to protect the keys to our data: our credentials.",,"build middleware to verify credentials using bcrypt,verify passwords using bcrypt,hash passwords before saving them to the database.,explain what is authentication and provide guidelines for password security.",4,Introduction to Authentication for WEB16 w/ Luis Hernandez,"Auth I for WEBPT2 w/Diandra Ryan-Mas,Intro to Authentication for WEB15 w/ Luis Hernandez ,Introduction to Authentication for WEBEU1 w/ Gabriel Cabrejas,Introduction to Authentication for Web17 with Luis Hernandez,Introduction to Authentication for WEB18 w/ Luis Hernandez,Introduction to Authentication for webpt4 w/ Jason",,Web Auth I Guided Project,Web Auth I Module Challenge,Authentication,Active,Full Stack Web Development Core,4,1,2,2,3,1,,8/5/2018 11:58pm,recQD9lnhqWEFh6g4
Client Side Authentication,,"When a client application needs to authenticate with a Web API that uses tokens instead of sessions and cookies, the client is responsible for holding on to the token and sending it on every request.

In this module we'll see how to do just that from a React application.",,handle a JSON web token produced by a web server within a client side application ,1,,"Client Side Authentication for WEB15 w/ Luis Hernandez,Client Side Authentication for WEB16 w/ Luis Hernandez,Client Side Authentication for WEBEU1 w/ Gabriel Cabrejas,Client Side Authentication for WEB18 w/ Luis Hernandez",,Web Auth IV Guided Project,Web Auth III Module Challenge,Authentication,,Full Stack Web Development Core,1,0,0,0,0,0,,8/5/2018 11:59pm,recvIgIb1xSiOC2bd
Intro to Python,,"Absorb as much as you can in this a rapid overview of the Python programming language. You will get familiar with common data structures, control structures, and functions. Help cement your understanding with some code challenge brain-teasers. ","Full Lesson Available Here:
https://colab.research.google.com/drive/1MADElEPZEQqKePN5_bL9Gcu-1TSN19M1","""understand common Python pitfalls and """"gotchas"""""",use and understand Functions in Python,use and understand If Statements in Python,use and understand Python Lists,use and understand Python Variables,explain the role of Python in the data science industry and in data analysis",6,,"Intro to Data Science - Lesson 1 - Getting Started with Python,Intro to Python for CS13 w/ Sean Chen,Intro to Python 2 for CS13 w/ Sean Chen,Intro to Python/OOP for CS14 w/Sean Chen",,Intro to DS Lecture 1 - Intro to Python,Intro to DS Assignment 1 - Getting Started with Python,Intro to Data Science,Active,Precourse DS,6,1,0,0,0,1,,8/27/2018 1:00pm,rec5114ErqtL4jYmb
Intro to Jupyter Notebooks and Pandas,,"Jupyter notebooks are one of the most important tools in data science. Get familiar with the tool as well as the ecosystem, and then use it to do some data wrangling via the Pandas library.","Full Lesson Available Here: 
https://colab.research.google.com/drive/14Q---bc4G1sU5aEOz3w8D_1Q0l1_SM-B","create a matplotlib scatterplot using two dataframe columns,check for NA values and remove them from a dataset using .fillna(),print the datatypes of dataframe columns,print the shape and first 5 rows of a dataframe to view it.,use Pandas to read in a CSV file and save it as a dataframe,import and alias an external Python library,""understand the difference between Python modules, packages, and libraries"",comprehend the role of Jupyter Notebooks in Data Analysis and Scientific Computing",8,,Intro to Data Science - Lesson 2 - Intro to Jupyter/Pandas,,Intro to DS Lecture 2 - Intro to Jupyter/Pandas,Intro to DS Assignment 2 - Intro to Jupyter / Pandas,Intro to Data Science,,Precourse DS,8,1,0,0,0,1,,8/27/2018 1:00pm,recOBDtTPWlsoR5D2
Statistics Fundamentals,,Get a handle on some of the most basic yet fundamental statistical concepts and terminology. This will be vital to understanding hypothesis testing and other inferential statistics concepts.,,"""understand and compute popular measures of center: Mean, Median, Mode"",understand the importance of the Normal Distribution and its main features,understand the role of sampling from a population and its implications,explain the difference between Discrete and Continuous distributions,understand what a Random Variable is and its importance in statistics",5,,Statistics Fundamentals for Section 1 w/ Aaron Gallant,,,Intro to Data Science Assignment 3 - Statistics Fundamentals,Intro to Data Science,,Precourse DS,5,1,0,0,0,1,,8/27/2018 1:01pm,recvhlOdkkJAoeX4u
Hypothesis Testing,,"Hypothesis testing requires an understanding of normal distributions, standard deviations, z-scores and confidence intervals. This day's lecture and assignment will focus on helping you understand these core components.",,"successfully conduct a hypothesis test,find the confidence interval of a distribution,calculate the z-score for a normal distribution,understand and compute the standard deviation of a sample,understand the role of hypothesis testing in inferential statistics",5,,Hypothesis Testing for Section 1 w/ Aaron Gallant,,,Intro to Data Science Assignment 4 - Hypothesis Testing,Intro to Data Science,,Precourse DS,5,1,0,0,0,1,,8/27/2018 1:02pm,recVdUT0flMSodg2n
Linear Algebra Foundations,,Linear Algebra is what happens behind the scenes of many algorithms and data science techniques. We'll go over basic terminology and the functions of vectors and matrices. ,,"""perform basic matrix operation using NumPy: matrix multiplication, inverse, transpose, "",""understand common matrix formats: row matrix, column matrix, square matrix, identity matrix, diagonal matrix, triangular matrix, "",understand basic Linear Algebra structure: Vectors and Matrices",3,,Linear Algebra Foundations for Section 1 w/ Aaron Gallant,,,Intro to Data Science Assignment 5 - Linear Algebra Foundations,Intro to Data Science,,Precourse DS,3,1,0,0,0,1,,8/27/2018 1:02pm,recAxHCyt4FGJVi2U
Linear Algebra Applications,,Use linear algebra to solve systems of equations as well as to solve optimization problems like fitting a linear regression line to a cloud of points.,,"represent equations in matrix form,solve equations simultaneously using matrix algebra,""compute the """"Least Squares Solution"""" of a linear regression""",3,,Linear Algebra Applications for Section 1 w/ Aaron Gallant,,,Intro to Data Science Assignment 6 - Linear Algebra Applications,Intro to Data Science,,Precourse DS,3,1,0,0,0,1,,8/27/2018 1:02pm,recGEft6sYcxCc7rP
DS Final Project Day 1,,The final project will focus on using the tools that we have gained so far to make an accurate predictive model. Project Day 1 will focus on training supervised learning algorithms with scikit-learn and building a baseline that we can improve upon in day two.  ,,"train a model with sklearn,make predictions on a test datset,perform basic feature engineering tasks",3,,Data Science Final Project Day 1 for Section 1 w/ Aaron Gallant,,,Intro to Data Science Assignment 7 - Final Project Day 1,Intro to Data Science,,Precourse DS,3,1,0,0,0,1,,8/27/2018 1:04pm,reciKszQzDfzzJT4b
DS Final Project Day 2,,"Use feature engineering to expand the number of inputs that we provide to our model. Also, explore different algorithms to see which ones give you the highest accuracy. How much can you improve your model beyond the baseline score?",,"improve upon baseline model to obtain a high level of model accuracy,understand at a high level the types of supervised learning models,perform basic feature engineering tasks",3,,Data Science Final Project Day 2 for Section 1 w/ Aaron Gallant,,,Intro to Data Science Assignment 8 - Final Project Day 2,Intro to Data Science,,Precourse DS,3,1,0,0,0,1,,8/27/2018 1:04pm,recRxsMSOvfMQIyFm
Animation II - View Controller Transitions,,,,"create interactive transition animations,create custom transition animations using the view controller transition animation API,animate auto layout constraints",3,,"Animation II - View Controller Transitions for iOS1 w/ Andrew Madsen,Animation II - View Controller Transitions for iOS4 w/James Pacheco,iOS Animation II - View Controller Transitions for iOS6 w/Ben Gohlke",,,Friends,iOS User Interface,,iOS Development Core,3,1,0,0,0,1,,8/28/2018 5:14pm,reciXHERtCKfpGxOV
Personal Finance,,,,save a percentage of income automatically with each paycheck,1,,,,,,Optimize Your Life and Career,,,1,0,0,0,0,0,,8/30/2018 4:16pm,recBcCg8rdmudp834
Lifelong Learning,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,8/30/2018 4:16pm,recvVFHlGaLFwpllO
Contributing to Open Source,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,8/30/2018 4:16pm,recHPMGF49aGwWmbD
Sharpen Your Tools,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,8/30/2018 4:17pm,rec5HAII3lITwGl76
Treating Others w/ Respect,,,,"describe the importance of speaking of others as though they were standing right next to you,Unnamed record",2,,,,,,Empathy,,,2,1,0,0,0,1,,8/30/2018 4:22pm,rec6JHB4AJU63gX4f
Working on a Team,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/30/2018 4:23pm,recbm0iETnPwCrYOb
Giving Feedback,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:04pm,recuISqOudZ4UANa3
Taking feedback,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:04pm,recu6VBTxvMDjwYqk
How to have a hard conversation,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:05pm,recbQDmkAZVRMtVay
How to be a better listener,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:06pm,reczDLjLGymSK9VzY
Handle conflicts with Diplomacy,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:07pm,rec4UUlrPFzLUnXwO
Revive the Great Lost Art of Conversation,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:07pm,recSlNqnbcTlmFlCe
Trusting your co-workers,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:08pm,rece5vVqPm37E815A
Working with people from different backgrounds,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:09pm,recq8pd5EWZG3C2x4
Take Your Emotions Out of the Equation,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:09pm,recJb0y4oVytUzoSc
Using Communication to Create Better Client Relationships,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:11pm,recOm5TWJhv3wtxVi
Making and Communicating decisions as a Team,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:14pm,recSGvuJBWQZ5sKGE
Learning how to be an effective Leader through Communication,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:14pm,recZVMvvfsKSKzKdc
Learning to Respect the Time of Others,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:18pm,rec2NxuLgtvq0lRKv
Friendship comes from time not affiliation,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:18pm,rec2uPAgwJcif63V8
Knowing the difference between appropriate and inappropriate banter/jokes,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:20pm,recms2DUhaZTdGp0z
4 Ways to Build Empathy in Yourself to Improve Your Workplace,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:21pm,recWktUE1xZvdNCRB
Empathy in the workplace = More productive employees,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:22pm,rec8VHVSff74WHTao
"How to strengthen your Empathy ""muscle"" to be a good leader",,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:23pm,recAvYtZKKndxVW1w
Women in Tech,,,,,0,,,,,,Diversity,,,0,0,0,0,0,0,,8/31/2018 3:34pm,recmRdjmPxvbqgTWz
Ageism,,,,,0,,,,,,Diversity,,,0,0,0,0,0,0,,8/31/2018 3:34pm,recCPOMkNKJ3UTPWi
Why Empathy in the Workplace Matters,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:36pm,recK3ExsBZV751k4x
Master the Art of Asking Questions,,,,,0,,,,,,Communication,,,0,0,0,0,0,0,,8/31/2018 3:36pm,recT2e4BI9RQ6P43y
Learning how to Prioritize Problems,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,8/31/2018 3:37pm,recLgaPoZVFWmZG2P
Why Time Management is so Important,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,8/31/2018 3:38pm,rec684OojyHNAN6js
Resources for Underrepresented Engineers in Tech,,,,,0,,,,,,Diversity,,,0,0,0,0,0,0,,8/31/2018 3:44pm,recEc2Flt79YftXRv
Why are companies struggling to hire diversity candidates?,,,,,0,,,,,,Diversity,,,0,0,0,0,0,0,,8/31/2018 3:45pm,recw9rVLzzJB7tnXZ
The Importance of Diversity in the Workplace,,,,,0,,,,,,Diversity,,,0,0,0,0,0,0,,8/31/2018 3:45pm,recxfxN44dQessZSV
Eye-opening statistics around Diversity in Tech,,,,,0,,,,,,Diversity,,,0,0,0,0,0,0,,8/31/2018 3:46pm,recaxqTKZ2Yz31BzO
How to write a proper email,,,,,0,,,,,,Professionalism,,,0,0,0,0,0,0,,8/31/2018 3:54pm,recRFCjUJyEJAZBlC
How to Dress for an Interview,,,,,0,,,,,,Professionalism,,,0,0,0,0,0,0,,8/31/2018 3:54pm,recDf8TCDav6bqxqv
Social Media Tips for the professional world,,,,,0,,,,,,Professionalism,,,0,0,0,0,0,0,,8/31/2018 3:54pm,recV4aUeQxfSioqMa
The importance of spell check and grammar for an Engineer,,,,,0,,,,,,Professionalism,,,0,0,0,0,0,0,,8/31/2018 3:56pm,recgaSEB9eXmNGgDe
"How to attend a ""Happy Hour"" like event and still be professional",,,,,0,,,,,,Professionalism,,,0,0,0,0,0,0,,8/31/2018 3:56pm,recO2h4J22ITtjReN
How to not burn bridges with a company/co-worker,,,,,0,,,,,,Professionalism,,,0,0,0,0,0,0,,8/31/2018 3:59pm,recsKarsb2pfrwffA
Dynamics of working on a Dev Team.,,,,,0,,,,,,Empathy,,,0,0,0,0,0,0,,8/31/2018 3:59pm,recTT6zKBZbaSUfyr
Harassment in the Workplace and what to do about it,,,,,0,,,,,,Diversity,,,0,0,0,0,0,0,,8/31/2018 4:02pm,recCtmEdwOJan4JM4
The importance of Networking/Going to Events,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,8/31/2018 4:02pm,recah05DKyLiP22oX
Creating and maintaining a strong portfolio,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,8/31/2018 4:02pm,recfwjmMu3XjX3AhC
The importance of being a good writer as an Engineer,,,,,0,,,,,,Professionalism,,,0,0,0,0,0,0,,8/31/2018 4:02pm,recRufF9q31kHh5uw
Intro to Lambda and User Experience Design (UX),,"Welcome to Lambda School! This module will cover some key points about jumping into a Lambda School program. We'll help you feel at home and ready to conquer the world.

This course will also help you think like a UX designer, re-introducing you to usability heuristics and cognitive psychological principles that can help you recognize and diagnose usability issues. We'll set the foundation here to build your UX skills.","Take about 15-20 minutes to introduce them to a Lambda experience.

Day one will shape the students’ experience with Lambda School. First impressions make a big difference on attitude and attitude determines success. *Make this class fun and engaging.* Play interactive games with students to help them get to know each other. 

Establish high expectations for course.

Help the students recognize the power of a Lambda education. It’s a different educational mind-set–jumping into Lambda School can be a bit of a shock. Our objective is to help students see the value of taking ownership of their own learning and facilitating that growth. 

Go over tips for using Slack

-Red question mark for questions
-Use threads—Keep channel clean
-Have students ask questions right when they have them
-Don’t use @channel

Introduce yourself—Who are you?
(Consider using your LinkedIn profile to introduce yourself)

Help students get over the jitters. Help them see there’s opportunity everywhere for those who work hard.

Help them recognize that if they don't understand something about UX it's not because they're not SMART—throw that word out. Help them understand that familiarity is what we're looking for instead of smart. We’re not dumb, we’re unfamiliar. When you become familiar, you seem smart.

Talk about using the ""Show it off"" rather than the course channel. In the course channel, we're quietly confident about our skills rather than being braggarts. We're supportive and positive. In channel let’s not talk about how easy assignments are. Different students struggle at different things. “That was so easy,"" shouldn't be something they see in the course channel.

If they want praise, have them direct message their instructor or PM. As an instructional team, we'll gush over you—or critique you harshly—whichever will help you become a better designer.

Also, we don’t put up with cyberbullying. Jokes or banter about gender differences, relationships, or sexuality should not take place in our channel or in any channel at Lambda. Religion or politics  should be avoided unless in a channel set up specifically for those types of conversations. But, in all things, we must be respectful of one another.

Talk about learn.lambdaschool.com. Show it and explain what students can find there.

Talk to students about how you expect your class to function. How you want to communicate to them and them to you. Let them know that sometimes you just want them to listen, sometimes you want them working along with you.

You'll also want them to start looking for a UX manager to contact to try to set up a time to meet or get on a call this week by Friday. That's a big part of our Sprint Challenge.","conduct a heuristic evaluation.,explain what a heuristic evaluation is and why it is valuable in a design cycle.,identify when to conduct a heuristic evaluation in a design cycle.",3,,Intro to Lambda and Usability Heuristics  for UX1 w/Christijan Draper,,,,Fundamentals: Discovery,,UX Design Core [v1 deprecated],3,1,3,2,0,2,,9/4/2018 2:59pm,rec982nltAA1hj5Ns
Concurrency II - Fundamentals,,,,"""understand and explain what concurrency means, and common scenarios where it is appropriate"",understand and explain what a race condition is,understand and use mutexes to prevent race conditions,understand and explain what a deadlock is",4,,"Concurrency II - Fundamentals for iOS1 w/ Andrew Madsen,Concurrency II - Fundamentals for iOS4 w/Dave DeLong,iOS Concurrency II - Fundamentals for iOS6 w/ Ben Gohlke",,,Hungry Developers,Intermediate Swift,,iOS Development Core,4,1,0,0,0,1,,9/4/2018 5:56pm,rec0tBHrF8smkIiIh
Concurrency III - iOS Concurrency,,,,"understand and explain the difference between a GCD queue and a thread,use GCD to implement thread safe properties in Swift,implement a custom subclass of NSOperation,cancel an operation,set up dependencies between operations",5,,"Concurrency III - GCD and Operations for iOS1 with Andrew Madsen,Concurrency III for iOS4 w/Dave DeLong,Concurrency III - iOS Concurrency for iOS6 w/ Ben Gohlke",,,Astronomy,Intermediate Swift,,iOS Development Core,5,1,0,0,0,1,,9/4/2018 5:56pm,reccapFfptRj0SMCV
1099 VS. W2 - how to navigate being a contractor,,,,,0,,,,,,Optimize Your Life and Career,,,0,0,0,0,0,0,,9/5/2018 10:53am,recLccQoJhVqw29cj
Unit Testing III - Dependency Injection and Mocking,,,,"use expectations to test asynchronous code,use protocol oriented programming to create mocks for testing code with complex dependencies,write types and functions that support dependency injection for testing",3,,"Unit Testing III - Dependency Injection and Mocking for iOS1 w/ Andrew Madsen,Unit Testing III - Dependency Injection and Mocking with Dave Delong",,,Astronomy - Unit Testing,Modularity,,iOS Development Core,3,1,3,0,0,2,,9/16/2018 11:07pm,reckM6G1yAZJfTdRx
Third Party Libraries and Dependency Management,,,,"""understand and explain the advantages and disadvantages of submodules, CocoaPods, and Carthage"",include sub-projects with a framework in an Xcode app project,use Git submodules to include a third-party library in a project,use CocoaPods to include a third-party library in a project,use Carthage to include a third-party library in a project,understand and explain how to evaluate third party libraries for quality,understand and explain the benefits and drawbacks to using third party libraries",7,,Third-Party Libraries and Dependency Management Guided Project for iOS1 w/ Andrew Madsen,,,Firebase Chat,Modularity,,iOS Development Core,7,1,5,0,7,1,,9/16/2018 11:08pm,rec6Y15WldywLZuwK
Web Server I,checked,"In this module, students will be reintroduced to web servers, along with the concepts that underly how web servers operate. This module will also cover some general concepts about networking, including protocols, sockets, and HTTP.","Guided projects repo: https://github.com/LambdaSchool/C-Web-Server-Guided-Projects/tree/master/echo

Some possible topics to talk about during live lecture:

1. Walk the students through what happens when you type a URL into a browser. Here, we won't take caching into account, as that will be talked about in Web Server II. Steps are outlined below:

```
1. Browser asks OS for server's IP address.
2. OS makes a DNS lookup and replies to the browser with the requested IP address.
3. Browser opens a connection to the server (we'll assume a TCP connection in this case). This step is much more complex with HTTPS. 
4. Browser sends the HTTP request through TCP connection.
5. Browser receives HTTP response and may close the TCP connection, or reuse it for another request.
6. Browser checks if the response is a redirect or a conditional response (3xx result status codes), authorization request (401), error (4xx and 5xx), etc.; these are handled differently from normal responses (2xx).
7. Browser decodes response (e.g. if it's gzipped).
8. Browser uses the MIME-type of the response to determine what to do with it (e.g. is it a HTML page, is it an image, is it a sound clip?).
9. Browser renders response content, or offers a download dialog for unrecognized types.
```

2. Talk about how the internet works more generally. Possible topics include routing, DNS resolution, CDNs, etc. 
http://www.theshulers.com/whitepapers/internet_whitepaper/index.html

3. Walk through the algorithm for how to construct a minimal spanning tree of a network.","properly format HTTP packets.,describe what Unix sockets are and how to use them.,describe the purpose of networking protocols as well as describe some of the main protocols such as TCP and UDP",3,C Web Server,"Web Server for CS11 w/ Sean ,Web Server for CS11 w/ Sean",,,,Web Server,Active,Computer Science,3,1,3,3,3,4,,9/17/2018 4:03pm,recz76g3pcHs88Dax
Web Server II,checked,"In this part of the sprint, we'll add _caching_ functionality to the webserver. This will improve performance for frequently-accessed files.","Guided project repo: https://github.com/LambdaSchool/C-Web-Server-Guided-Projects/tree/master/cache

The hash table is provided, but students will have to utilize that to implement the cache.

Some possible topics to cover during live lecture:

1. Dive more deeply into doubly linked lists. Live code a simple one in C so students gets a bit more comfortable working with one.

2. Walk through an LRU cache implementation in Python to give the students a better idea of how one works: https://github.com/LambdaSchool/Data-Structures/tree/extras/lru_cache

3. Explore the topic of caching strategies more in-depth. Talk a bit more at length about different caching strategies and what their pros and cons are. The goal here is certainly not to have students memorize these caching strategies, but more to raise their awareness of different caching patterns, and more importantly, to get them to analyze the benefits and tradeoffs of different caching strategies and think about use-cases when one is more appropriate than another. https://codeahoy.com/2017/08/11/caching-strategies-and-how-to-choose-the-right-one/

4. Talk about how consistent hashing is architected for a multi-server environment, why it is useful, how it improves performance, etc.: https://www.youtube.com/watch?v=zaRkONvyGr8

5. Talk about load balancing
","implement an LRU cache,describe and utilize a doubly-linked list,understand MIME types and determine them from file names",3,,"Web Server II for CS11 w/Sean,Web Server II for CS11 w/Sean",,,,Web Server,,Computer Science,3,1,3,3,3,4,,9/17/2018 4:03pm,recFGnBVmKCyR0427
Daily Objectives,,,,"sign up to https://app.huntr.co/lambda-school/signup and track your job applications,write code and get a green score in your GitHub contributions graph,practice interviewing",3,,,,,,"Next Week I,Next Week II,Next Week III,Next Week IV,Next Week V,Next Week VI",,"Lambda Next, Lambda Next, Lambda Next, Lambda Next, Lambda Next, Lambda Next",3,1,0,0,0,1,,9/20/2018 2:10pm,receyANHJWCv8vuI1
Build a Portfolio Website,,"Create a portfolio website that accurately represents your accomplishments, skill sets, and experience. This portfolio will be the first introduction between you and a prospective hiring manager. Hiring managers are looking for skill and professionality, not irrelevant past experience, excessive personal content, goofy gifs, or anything that distracts them from your hireability. 

Use this opportunity to create a clean, attractive portfolio that you can use forever to showcase your abilities as a software engineer. Keep it direct and helpful. You are no longer a student - you’re a skilled developer showing off what you can do. ",,build a professional portfolio website,1,Static-Pages Github,,,,Portfolio Website,Next Week I,,Lambda Next,1,0,0,0,0,0,,9/20/2018 8:34pm,recu83y7ErQK87hya
"""What I Learned at Lambda School"" Publication",,"Publishing regular and relevant content is a signal to potential employers that you are dedicated to and immersed in the tech world. These blog posts are an exercise in reflection as well as additional content to attract employers. Your intended audience are hiring managers at companies to which you are applying. Think hard and compose blog posts that will present you - and Lambda School - well. These blog posts will build a reservoir of content that illustrate your competence. 

For Week One, we want to know how you overcame struggles while studying at Lambda School. How have you grown personally? Professionally? 

Walk us through your experience at Lambda. What trials did you come up against, and how did you overcome them? What helped you most to stay consistent in showing up every day and doing your best? This is not your resume. This is about the intangible accomplishments and lessons that make you unique and even more attractive as a potential hire. ",,"""write a blog post or record a YouTube video then publish on """"What I Learned at Lambda School""""""",1,,,,,"""""""What I Learned at Lambda School"""" Blog Post or YouTube Video""",Next Week I,,Lambda Next,1,0,0,0,0,0,,9/20/2018 8:37pm,recpHYt4Tttc0bjPp
LambdaMUD,,"You'll be taking an existing RESTful backend and writing a front-end client to interface with it.

In addition, you'll add new functionality to the backend.

See the repo README for details.","This is a Project Week, so it doesn't really have the same format as the other sprints.

Tylar Pierson [16:28, Sep 26 2018]
> Hey Beej I have some feedback for you. Some students are feeling like this project should be more of a 4 day or more project. They are getting MVP done, but not really any time for trying to attempt the stretch goals.",,0,,"Project Week LambdaMUD: Kick Off for CS11 w/Beej and Brady,LambdaMUD: Server Q&A for CS11 w/Beej and Brady,LambdaMUD: Q&A Day 2 for CS11 with/Beej and Brady",,,LambdaMUD,Project Week: LambdaMUD,,Computer Science Annex,0,0,0,0,0,0,,9/24/2018 11:21am,recG2Qniwo0qQR2aY
Game of Life,,"You will research and learn about John Conway's _Game of Life_.

Using the rules for the _Game of Life_, you will implement a visualization of this automaton. 

After creating a working front-end, you will deploy to a remote server. 

See the repo README for details.","This is a Project Week, so it doesn't really have the same format as the other sprints.

Tylar Pierson [16:28, Sep 26 2018]
> Hey Beej I have some feedback for you. Some students are feeling like this project should be more of a 4 day or more project. They are getting MVP done, but not really any time for trying to attempt the stretch goals.",,0,,"Project Week LambdaMUD: Kick Off for CS11 w/Beej and Brady,LambdaMUD: Server Q&A for CS11 w/Beej and Brady,LambdaMUD: Q&A Day 2 for CS11 with/Beej and Brady,Conway's Game of Life Introduction for CS11 w/ Sean and Beej,Intro to Web Assembly for CS11 w/Sean,Conway's Game of Life: Rust for CS11 w/Sean",,,LambdaMUD,Project Week: Cellular Automata,,Computer Science Annex,0,0,0,0,0,0,,10/25/2018 2:12pm,rec42j1bkTmC0Hsro
Present your project,,"Telling a story with data requires an audience - you've built an understanding of a dataset, now share it with the world!",,"present and answer questions about data analysis,write about data analysis for a general audience",2,,,,,,,,,2,1,0,0,0,1,,9/24/2018 12:28pm,rec7QYFpAqcakf1dg
Write a blog post,,Publish your data storytelling project on Medium and/or GitHub Pages.,,write a blog post summarizing their results,1,,Write A Blog Post for DS2 w/ Ryan Allred,,,,,,,1,0,0,0,0,0,,9/24/2018 1:33pm,rec1dW5GiCUJOWXOX
Redux Fundamentals II,,,,"""demonstrate the proper use of `Object.assign()`, `Array.concat()`, `Array.map()` & `Array.filter()`"",explain what immutability is in programming and demonstrate its benefits",2,,"Redux Fundamentals for FSW15 w/Dustin Myers,Redux Fundamentals II for WEB16 w/ Dustin Myers,Redux Fundamentals II for WEBPT3 w/ Dan Frehner,Redux Fundamentals II for WEB17 w/ Dustin Myers,Redux Fundamentals II for WEB18 w/ Dustin Myers - Part 1/2,Redux Fundamentals II for WEB18 w/ Dustin Myers - Part 2/2,Redux Fundamentals II for webpt4 w/Brian Kirkby,Redux Fundamentals II for Web 19 w/ Dustin Myers",,,,Redux,,Full Stack Web Development Core,2,1,2,2,2,4,,9/25/2018 3:32pm,recyj0rncjqj5gtxx
Objective-C Fundamentals,,,,"use JSONSerialization to decode JSON into model objects,understand and use block syntax,""use literal syntax to create strings, arrays, and dictionaries"",write a for loop and a while loop in Objective-C,write an if statement in Objective-C,check if an object is nil in Objective-C",6,,"Objective-C Fundamentals for iOS1 w/ Andrew Madsen,Objective-C Fundamentals for iOS4 w/ Andrew Madsen",,,Weather ObjC,Objective-C Part 1,,iOS Development Core,6,1,6,2,0,2,,9/26/2018 1:15pm,recHwNf6oejUFWVWU
Hash Tables,checked,"Hash tables are arguably the single most important data structure known to mankind. Used to implement everything from objects in JavaScript and dictionaries in Python to Memcached over a distributed computer network, hash tables are beloved by programmers for providing key/value storage with constant big-O time complexity for insertion, deletion and search.

We will be looking underneath the hood at how this delightful data structure works and answering questions like, how do hash tables work? What is a hash function? What is a hash collision and how are they handled? What is the ""birthday problem""? What do we do when our hash table is full?

You can think of hash tables as extensions of arrays. For your homework this week, you will be implementing both arrays and hash tables in C.","Day 1: Talk about basic hash tables, hash methods, performance and big-O
Day 2: Talk about collisions, birthday problem, linked list chaining, and dynamic resizing","handle collisions and resizing in a hash table.,implement a basic hash table.",2,,"Intro to Hash Tables,Hash Table Collisions and Resizing,Hash Tables Day 1 for CS11 w/Brady Fukumoto,Hash Tables Day 2 for CS11 w/Brady Fukumoto,Theory of Computation - Day 3 for CS13 w/ Brady Fukumoto,Theory of Computation - Day 4 for CS13 w/ Brady Fukumoto,Hash Tables: Part One for WEB15 w/Jonathan Brunt",,,Hash Tables,Theory of Computation/Hash Tables,,Computer Science,2,1,2,2,2,4,,9/26/2018 3:25pm,receeBNJHEzx0Wjjh
Creating and Using Personas,,"A user-centered approach to design lies at the heart of the user experience profession. Few UX techniques jump right to that heart quite like personas. A persona is a composite picture of a collection of users boiled down into one relatable, human profile. They remind us that we’re designing for real human beings and they force us to distill all of our research into one, usable reference. Not only do they promote this critical empathy, but they also communicate the essential characteristics of our users so we can tailor our design thinking towards their specific needs.",,"properly utilize them,create a proto-persona and design a representative document of it using Sketch,create a persona and design a representative document of it using Sketch,identify when to create a persona in the design cycle,explain why personas are a valuable tool,describe what a proto-persona is,describe what a persona is",7,,"Creating and Using Personas for UX1 w/Nick Basile,Creating and Using Personas for UX2/ w Glenn Ference,Creating and Using Personas for UX3 w/ Glenn Ference,Creating and Using Personas for UX4 w/ Glenn Ference ",,,Create a Persona,"Fundamentals: Defining the Experience,Definition",Active,"UX Design Core [v1 deprecated], UX Design Core",7,1,7,0,0,2,,9/27/2018 8:33am,recDqqQWVaBVcbL9k
Documenting and Diagramming a User Flow,,User flows are a fundamental tool for every user experience designer. Creating them helps designers avoid missing key interaction moments and allows them to clearly articulate how users interact with their products.,"Make sure you understand the Geschäft project enough to construct user flows about it. Be prepared to guide students through the process and encourage them to ask questions along the way.

User Flow Demo Guide
- What solutions have we brainstormed?
- What is the user trying to achieve?
- What are the business objectives?
- What are the points of entry?
- Type out a flow
- Design the flow
- Review connections and determine if additional paths could be taken. 
- Repeat with new paths.","document and diagram a user flow,identify when to create a user flow in a design cycle,explain what a user flow is and why it is valuable in a design cycle",3,,"User Flow for UX1 w/Nick Basile,Documenting and Diagramming a User Flow for UX2 w/ Christijan Draper,Documenting and Diagramming a User Flow for UX3 w/ Glenn Ference,Documenting and Diagramming a User Flow for UX4 w/ Glenn Ference",,,Diagram a User Flow,"Fundamentals: Defining the Experience,Definition",Active,"UX Design Core [v1 deprecated], UX Design Core",3,1,3,0,0,2,,9/27/2018 8:39am,recWRYaQ8KZBYpf7z
Intro to Information Architecture (IA),,"Information architecture (IA) is the foundational element of any great user experience. IA “focuses on organizing, structuring, and labeling content in an effective and sustainable way [in order to] help users find information and complete tasks.” By coherently and logically organizing our content according to our users’ mental models, we ensure that our users can understand their surroundings and find what they’re looking for in our products.","Make sure you understand the current course project enough to construct an information architecture about it. Be prepared to guide students through the process and encourage them to ask questions along the way.

IA Demo Guide
- Review any user flows and user research
- Review our business context and content
- Card-sort features/pages internally or with users
- Use those findings as inspiration for your IA sitemap
- Create IA blueprint
- User test sitemap with students

Consider reading/reviewing Information Architecture: For the Web and Beyond.","create a site blueprint,organize content into a usable information architecture,identify when to create to create an information architecture in a design cycle,explain what information architecture is and why it is valuable in a design cycle",4,,"Introduction to Information Architecture w/Nick Basile,Intro to Information Architecture (IA) for UX2 w/ Christijan Draper,Intro to Information Architecture for UX3 w/ Glenn Ference,Intro to Information Architecture for UX4 w/ Glenn Ference",,,Information Architecture Blueprint,"Fundamentals: Defining the Experience,Definition",Active,"UX Design Core [v1 deprecated], UX Design Core",4,1,4,0,0,2,,9/27/2018 8:40am,recBOzAGao17ydwXC
Intro to Content Strategy,,"Content is the most important part of any user experience. If we removed the content from a website, then we’d be left with nothing. Because content is the foundation for every UX, it makes sense that it has its own discipline: content strategy. As Kristina Halvorson tells us, “Content strategy plans for the creation, publication, and governance of useful, usable content.”","Review the example on slide 16 and replace with your own example.

Content Strategy Demo Guide
- Review research
- Understand stakeholder needs
- Lite competitive analysis
- Strategic Messages
- Content Specifications
- Content Template
- Planning
- Measure","outline a high-level content strategy and use it to design a product,explain how content strategy fits into the broader field of UX,describe what content strategy is and why it is valuable",3,,Introduction to Content Strategy w/Nick Basile,,,Content Strategy,Fundamentals: Defining the Experience,Active,UX Design Core [v1 deprecated],3,1,3,0,0,2,,9/27/2018 8:42am,recKIFtKTvEMZAydv
Designing for the Human Mind,,"While it’s important that we always understand our users and the context we’re designing for, at the end of the day we’re all still human beings. By studying psychology and neuroscience, we can learn how our minds work in order to leverage that understanding to design better solutions for everyone. With this foundation, we can explore universal design principles and utilize them within our design contexts.","There are lots of animations in the presentation, so make sure to practice it to get a feel for the flow. The lecture notes will prompt you when to trigger them.

Make sure you get last week’s sketches so you can review them in the demo.","explain what universal design guidelines help us overcome the limitations of memory and attention,explain how the limits of our attention impact our designs,explain how short-term and long-term memory’s limitations impact our designs",3,,"Designing for the Human Mind for UX1 w/Nick Basile,Designing for the Human Mind for UX2 w/ Nick Basile,Designing for the Human Mind for UX3 w/ Nick Basile,Designing for the Human Mind for UXPT1 w/ Ann-Marie Sebastian,Designing for the Human Mind for UX5 w/ Melissa Kark",,,Improving Sketches,Fundamentals: Design Principles,Active,UX Design Core [v1 deprecated],3,1,3,0,0,2,,9/27/2018 8:45am,rec5VYgyuwA4Jujry
Assumptions and Competitive Analysis,,"An old army aphorism made popular by Dwight Eisenhower is this: “Plans are worthless but planning is everything.” 

You'll find that often the careful designs you create as part of the UX design process are challenged and changed as they move forward. That's expected, but jumping into a design project without sufficient context will almost invariably result in failure. Some of the most fundamental planning work you can do to prepare for a project is to evaluate the assumptions you have about the product and the audience and evaluating the competitive landscape.

This is the process by which we begin to plan for our designs. It gives our design process a solid foundation and is part of our Discovery efforts in the product design cycle.",,"compile and report the findings of a competitive analysis,conduct a competitive analysis,conduct an assumption assessment process with a team",3,,"Assumptions and Competitive Analysis w/Christijan Draper,Assumptions and Competitive Analysis for UX1 w/ Christijan Draper",,,Conduct Assumptions Exercise and a Competitive Analysis,Fundamentals: Discovery,,UX Design Core [v1 deprecated],3,1,2,0,0,1,,9/27/2018 10:33am,reczEMm3VEEnmv3wZ
Stakeholder Interviews & User Recruiting,,"Stakeholder interviews help set the boundaries of the design project. They are an excellent time to gather and learn about the assumptions being made in regard to the user experience.

Recruiting users is a key part of the research process. Being able to effectively find people to participate as research subjects is a useful skill to have. For a UX designer, the ability to reach out to potential or existing customers will pay off in the quality of products she or he is able to design.

Every product has a target audience. Every website is intended to reach a certain type of people. The temptation is to say something like: “Everyone needs this product!” But, not everyone is going to want or need your product. In fact, no matter what product you build, you will be excluding a vast majority of earth’s inhabitants who won’t have any interest in it or will not be able to access it. When doing research you want to hear from the people who are among the target audience, not the excluded billions. Following effective recruiting processes can help avoid designing for the wrong audience.",,"find a representative member of the target audience that meets the needs of the specific research project being recruited for,determine the target audience for the product research,conduct a stakeholder interview",3,,"Sample Stakeholder Interview for UX1 w/Christijan Draper and Nick Basile,Sample Stakeholder Interview w/Christijan Draper and Nick Basile,Sample Stakeholder Interview for UX1 w/Christijan Draper and Nick Basile,Interviews for UX1 w/Christijan Draper,Interviews - User/Stakeholder for UX1 w/Christijan Draper,Stakeholder Interviews & User Recruiting for UX2 w/ Christijan Draper,Stakeholder Interviews & User Recruiting for UX3 w/ Christijan Draper, Processing 95% Stakeholder Interviews & User Recruiting for UX4 w/ Glenn Ference",,,Create a Recruiting Database,Discovery,,UX Design Core,3,1,3,0,0,2,,9/27/2018 1:19pm,rec7Yk0vHmx69XJes
Organizing and Presenting Findings; Building a Portfolio,,"A user experience designer will often have to make presentations about the research they do during the discovery phase of a product design cycle. The effectiveness of their presentation often has a direct impact on how smoothly a project goes. Effectively explaining research findings and the implications of those findings lay a foundation upon which all other design decisions can build. When findings are accurate and explained well, design decisions that are based on the research will find welcome recipients among team members and stakeholders. Well-presented findings grease the wheels of the whole design process.",,"explain the attributes of an effective UX portfolio,understand the importance of a UX portfolio,present research results effectively in person,create an effective research results presentation using Keynote,create an effective research results document using style sheets in Google Docs",5,,"Organizing and Presenting Findings; Building a Portfolio w/Christijan Draper,Organizing and Presenting Findings for UX1 w/Christijan Draper",,,Results Document Design and Presentation,Fundamentals: Discovery,,UX Design Core [v1 deprecated],5,1,3,0,0,1,,9/27/2018 1:27pm,receUAa1sRnaEQlze
UX - Sprint 1 Project,,,,,0,,,,,,,,,0,0,0,0,0,0,,9/27/2018 1:28pm,recZ9GxEUKALxqLdn
"""How I Contributed to a Code Base That Was New to Me"" Publication",,"One task you’ll almost certainly encounter on your first day at your first developer job is being handed a code base that is new and unfamiliar to you, and an assignment to work on it in some way. Working with legacy code is an everyday task for a professional developer, but is something that will most likely be new to you. This week, you’re going to practice this skill and write a blog post describing your process and results.",,"""write a blog post or record a YouTube video then publish on """"how I contributed to a code base that was new to me""""""",1,,,,,,Next Week II,,Lambda Next,1,0,0,0,0,0,,10/1/2018 2:47pm,recrFoxXAT0MFz3aS
Contribute to Code Base That Is New to You,,"One thing hiring partners will be looking for - which you may not yet have attempted - is the ability to enter a new code base, learn how it works, and contribute code in a safe and helpful way. It’s what you’ll be doing when you start any new job with a new team. To prepare for this, during Week Two you will find an existing project that is new to you, get it running in development mode on your development machine, and contribute to it by adding a feature.  

For this project, try to develop the skill of being a multiplier. You don’t have to be the star of the show, but you can maximize the impact of others. Show how you can make the work of others more effective and solve problems in a helpful and non-intrusive way. ",,contribute to a new code base ,1,,,,,,Next Week II,,Lambda Next,1,0,0,0,0,0,,10/1/2018 2:48pm,recFvUY9ovnZTapKf
Android SQL Implementation,,Now we have the basics of what makes a SQL database and how to design and work with one. We're going to start implementing them in our Android app.,,"use methods to interact with the database without SQL,work with Cursors to interpret data returned from the database,execute SQL statements to get data from the database,build a database access class to facilitate interactions with the database,write a database helper class to manage database creation and upgrades,write a contract class to store SQL table structure and field constants",6,,"Android SQL Implementation for AND1 w/Chance Payne,Android SQL Implementation for AND1 w/Chance Payne (followup),SQL and Review for AND1 w/Chance Payne,Android SQL Implementation for AND2 w/Chance Payne",,,XKCD Persistance,Data Persistence,,Android Development Core,6,1,0,0,0,1,,10/3/2018 12:09pm,recnVBXm2qHtYSFNa
,,,,,0,,,,,,Fundamentals: Discovery,,UX Design Core [v1 deprecated],0,0,0,0,0,0,,10/3/2018 8:45pm,recEZzrUuiItSNIZl
"Visual Hierarchy, Typography, Color Theory",,"In the intro course, we covered the basics of visual hierarchy, color theory, and typography. In this lesson, we’ll be taking a deeper look at how to leverage them in practice to create our designs.",,"understand how to get better at designing,explain how colors influence human emotions,identify the various elements of typography,de-construct a design’s visual hierarchy",4,,"""Design Principles: Visual Hierarchy, Typography, Color for UX1 w/Nick Basile""",,,Sketch Improvements & Design Practice,Fundamentals: Design Principles,Active,UX Design Core [v1 deprecated],4,1,4,0,0,2,,10/5/2018 9:06am,recIE0AjXBsqz6dsF
"Designing for the Responsive Web, Visual Hierarchy in a Dynamic Screen World",,"One of the fundamental details that separate UX/UI designers from other designers is that our medium is constantly shifting. Graphic designers can focus on the fixed size of a poster; print designers can be sure that paper sizes aren’t changing tomorrow; architects know that the building foundation won’t change, but our designs need to work across an incredible array of shapes and sizes - from tiny iWatches all the way up to digital billboards.

Fortunately, over the last 10 years or so, UX/UI designers have worked to solve this problem and have found ways to design for the infinite variety of screens. In this lesson, we’ll dive into this exciting world and learn how to embrace the shifting screens of our digital medium.",,"design a responsive hierarchy,explain what a mobile-first approach to design entails,""describe what adaptive and responsive design are, how they differ, and why they’re important to UX designers"",explain what is meant by the phrase “responsive design”",4,,Designing for the Responsive Web for UX1 w/Nick Basile,,,Create a Responsive Visual Hierarchy,Fundamentals: Design Principles,Active,UX Design Core [v1 deprecated],4,1,4,0,0,2,,10/5/2018 12:23pm,recqDLuUbXK4Q8NDV
Wireframes and Click-through Prototyping,,"In this lesson, we’ll practice wireframing and creating lo-fidelity prototypes in InVision.",,"Use InVision to connect screens and share/test a prototype,Design a wireframe using Whimsical",2,,"Wireframes and Click-through Prototyping with Sketch/InVision for UX1 w/Nick Basile,Wireframes and Click-through Prototyping with Sketch & InVision for UX2 w/ Glenn Ference,Wireframes and Click-through Prototyping for UX3 w/ Glenn Ference",,,Wireframing and Prototyping,"Fundamentals: Design Principles,Ideation and Collaboration",Active,"UX Design Core [v1 deprecated], UX Design Core",2,1,2,0,0,2,,10/5/2018 12:24pm,recBt5KjNgBOlULkW
Group Creativity and Leading UX Workshops,,Digital design work is almost always done in collaboration with at least one other person and generally requires the ability to work closely and effectively with others to create a great product. Product design work is also one of the primary places companies can create a culture of innovation. Most companies are beginning to recognize that innovation is a key to growth in the modern economy. “Win through innovation or lose the game.” ,,"explain how to facilitate the following group workshops or exercises:,explain the model for facilitating UX workshops.,explain key fundamental considerations of group creativity.",3,,Group Creativity and Leading UX Workshops for UX3 w/ Glenn Ference,,,Lead a UX Workshop,"Fundamentals: Ideation and Creativity,Ideation and Collaboration",,"UX Design Core [v1 deprecated], UX Design Core",3,1,2,0,0,1,,10/10/2018 12:04pm,rec7faUDoMeycQcCJ
Info Session - Principles for Success,,Learn about Principles for Success and what kinds of presentations will be given. ,,Fill out feedback form: https://goo.gl/forms/Wg6NtIwCRrEHinvm2,1,,Info Session - Principles for Success with Sabrina Baez,,,,Tips and Tricks on How to Advance your Life and Career,,Principles for Success,1,0,0,0,0,0,,10/12/2018 11:42am,rectxBUvUCnWzbhTT
Imposter Syndrome Presentation #1,,Information on Imposter Syndrome and methods of overcoming it. ,,"Make a list of weekly/monthly/yearly accomplishments ,Remember a time when they trusted their instincts and it worked out. ,""Write down what they're strongest at right now curriculum- wise, as well as what they feel weakest on. Keep practicing and working on all of those things. Knowing your strengths and weaknesses will help eliminate Imposter Syndrome.""",3,,Imposter Syndrome for Principles for Success with Sabrina Baez ,,,,Tips and Tricks on How to Advance your Life and Career,,Principles for Success,3,1,0,0,0,1,,10/12/2018 11:43am,recSKlm8y1Y0yzFkC
Rapid Sketching; Sketching Interfaces; Paper Prototypes,,,,"create a paper prototype of a multi-step interface interaction and present it to others for feedback,feel confident about their ability to quickly sketch interface concepts,explain how hand-drawn (sketched) wireframes are beneficial to the product design cycle",3,,Rapid Sketching and Paper Prototypes for UX1 w/Christijan Draper,,,Sketching Project,Fundamentals: Ideation and Creativity,,UX Design Core [v1 deprecated],3,1,1,0,0,1,,10/12/2018 9:17pm,recMzhHkcg634KAsd
"Getting Out of Your Head, Getting Out of the Office, Personal Productivity",,"When in ideation mode, it's always a danger to become too focussed inward. There is a tendency among human beings in general to think they have the answer to the problem at hand when they first hear the problem. This may or may not be true, so it pays to step apart from the process and interact with others while in ideation mode to ensure the direction you move is not out of sync with reality. 
",,explain how a change of venue can impact the creative process,1,,,,,,Fundamentals: Ideation and Creativity,,UX Design Core [v1 deprecated],1,0,0,0,0,0,,10/12/2018 9:17pm,recmapyAGnwDo42zD
"Presenting Ideas; The Art of the Critique, to Give and Receive",,"A crucial skill for designers is to be able to present and justify their own design work for employers, stakeholders, clients—anyone who has a say in how a project moves forward. Being able to ask for and receive feedback graciously is also the sign of a confident and competent designer. The ability to provide effective design feedback to other designers is also an important skill.","Material from Mike Monteiro's ""Design is a Job"" is excellent. 

","""Student should be able to conduct and participate in design reviews/critiques, by giving and receiving feedback on design work."",Student should be able to explain the difference between a design review and a design critique and the value of each.,Student should be able to explain best practices and demonstrate competency in presenting design work.",3,,The Art of the Critique for UX1 w/Christijan Draper,,,,Fundamentals: Ideation and Creativity,,UX Design Core [v1 deprecated],3,1,2,0,0,1,,10/12/2018 9:18pm,recofhz6oyglWqNoS
A First Look at Data,,"What is this thing called data? Measuring and quantifying reality is a powerful concept, but saying ""everything is data!"" is perhaps not the most useful way to understand it. Data must be specific and well-defined in order to be comprehensible.","This is the first day of class, and while students should have engaged with precourse material we still want a gentle initial learning curve. Balance this for more advanced students by throwing out links/tutorials for tools that we'll be using later on (e.g. various Python libraries).","""distinguish between common variable types (continuous/discrete, ordinal/categorical)"",explain what quantifiable data is (and isn't)",2,,"DS1: A First Look at Data with Aaron Gallant,A First Look at Data for DS2 with Aaron Gallant,Dealing with Data for DS3 w/ Ryan Allred,A First Look at Data for DS4 w/ Ryan Allred,A First Look at Data for DSPT1 w/Alex Kim,Module 1: A First Look at Data for DS5 w/ Ryan Allred",,,,Dealing with Data,,DS - Statistics Fundamentals,2,1,2,2,2,4,,10/15/2018 11:59am,recCAsF5WQyQO7Fvm
Loading data from a variety of sources,,"Most computational devices generate and process data, but not all data is represented, stored, or transported in the same way. In this module we'll consider the common ways of actually getting our hands on data, and practice with some real-world examples.",This will be a practical tools/debug day - pair particularly stuck students with PMs for more 1:1 help.,"clean a dataset using common Python libraries,load data from multiple sources into a Python notebook",2,Asking For and Giving Technical Help,"DS1: Loading Data with Aaron Gallant,Loading Data for DS3 w/ Ryan Allred,Loading Data From a Variety of Sources for DS4 w/ Ryan Allred,Loading Data From a Variety of Sources for DSPT1 w/Alex Kim,Loading data from a variety of sources for DS5 w/Ryan Allred",,,,Dealing with Data,,DS - Statistics Fundamentals,2,1,2,2,2,4,,10/15/2018 12:02pm,recGUKFODWUK3jkGc
Basic Data Visualizations,,"Once data is loaded, a good first step is to look at it - our software usually gives us summary statistics, but it's nice to also visualize what is going on.","This is more of a ""soak and poke"" than ""baseline model first"" approach, but probably more approachable especially for the eventual UX students. When we get to models we can and should also introduce that as a plausible way to take a first dive into data.","create basic plots appropriate for different data types,interpret and select basic plots appropriate for different data types",2,,"DS1: Basic Data Visualizations with Aaron Gallant,Basic Data Visualizations for DS3 w/ Ryan Allred,Basic Data Visualizations for DS4 w/ Ryan Allred",,,,,,,2,1,2,2,2,4,,10/15/2018 12:05pm,recv4lsu206fWEMpa
Making data-backed assertions,,"Our goal in presenting data is to use it as evidence in support of appropriate beliefs, statements, or policies. This is a large topic and can employ many advanced techniques - but getting started doesn't have to be fancy.","In some ways the first ""meat"" topic - but overall should be presented with plenty of caveats and cautions, emphasizing the importance of *validity* in assertions and foreshadowing hypothesis testing.","identify misleading statements not actually backed by the data,infer and support statements based on data",2,,"Making Data-Backed Assertions for DS2 w/Aaron Gallant,Making Data-Backed Assertions for DSPT1 w/ Alex Kim,Making Data Backed Assertions for DS5 w/Ryan Allred",,,,Dealing with Data,,DS - Statistics Fundamentals,2,1,2,2,2,4,,10/15/2018 12:07pm,recyEwZ6YF9b1Z5Lb
Writing Project and Design Briefs,,"Oftentimes the hardest part about working in a team is that it’s so easy for everyone to be misaligned. As Leah Buley explains in *The User Experience Team of One*, 

```“In team discussions, it’s possible for people to express their point of view and think they’re all saying the same thing, but actually have very different ideas of what they expect.”```

Fortunately, we can use project and design briefs, in various contexts, to ensure our teams are moving in the same direction.",Review the project and design brief sections in The User Experience Team of One: A Research and Design Survival Guide by Leah Buley,"explain what a design brief is and create one,explain what a project brief is and create one",2,,Writing Project and Design Briefs for UX1 w/Nick Basile,,,Project Brief,Advanced Experience Definition,Active,UX Design Core [v1 deprecated],2,1,2,2,2,4,,10/15/2018 1:49pm,recLut1dhfb8fJjiC
Jobs to be Done Theory & Job Stories,,"We spend a lot of our time researching our users to understand their problems, context, and needs. Once we’re satisfied with our research, we need to turn all of that work into actionable deliverables that drive our product’s development. Utilizing Jobs to be Done Theory, we can produce job stories to articulate what our product needs to do in order for customers to use it.",Be prepared to lead a discussion about JTBD theory. Review the pre-class links.,"explain what a job story is and create one,describe the Jobs to be Done Theory and how it can be applied",2,,JTBD Theory and Job Stories for UX1 w/Nick Basile,,,Job Mapping & Job Stories,Advanced Experience Definition,Active,UX Design Core [v1 deprecated],2,1,2,2,2,4,,10/18/2018 11:44am,recVlHdB9dTHLgxd0
Four Ways to Respond,,Student Presentation done by Vim Shah. This covers 4 different strategies of communication as it pertains to Principles for Success. ,Break students off in groups of two. One student will be the responder and the other will be the initiator ,"""Start off by choosing to be an initiator or responder. The initiator is invited to share something they are excited about to the responder. The responder is invited to respond in 1 of 3 ways (professionally): Passive Constructive, Passive Destructive, Active Destructive. The initiator is invited to share how the response made them feel. The responder is invited to respond in a more “active-constructive” manner. Switch roles and repeat.""",1,,Four Ways to Respond (Communication) for Principles for Success with Vim Shah ,,,,Professionalism/Communication,,Principles for Success,1,0,0,0,0,0,,10/18/2018 12:35pm,rec2Tt87PpU8x0HA5
Community Outreach/Outcomes Team Info,,"Staff presentation done by Jeff Henriod explaining his role at Lambda, Employer Relationships, and what students need to do to participate in recruiting activities at Lambda. 
",,"Understand how Lambda School builds Employer Relationships,What they need to do to participate in recruiting activities",2,,Community Outreach/Outcomes Team Info for Principles for Success with Jeff Henriod ,,,,Professionalism/Communication,,Principles for Success,2,1,0,0,0,1,,10/19/2018 2:45pm,recvhF4MN5KUb4V0y
Size Classes and UISplitViewController,,This module covers the use of size classes and UISplitViewController to support many different iOS device types and sizes in a single app.,,,0,,"Size Classes and UISplitViewController for iOS1 w/ Andrew Madsen,Size Classes and UISplitViewController for iOS2 with Andrew Madsen",,,Countries,iOS Other Platforms,,iOS Development Core,0,0,0,0,0,0,,10/22/2018 1:21am,recRxIeKMq3uav0mL
Customer Journey Maps,,"Customer journey maps combine storytelling and visualization to help teams conceptualize and address customer needs. Their unique format and ability to surface missing details make them excellent tools for defining the high-level customer experience. For our UX projects, they help us build a shared understanding of our customers’ needs and serve as easily digestible documentation for future design efforts.",Be prepared to conduct a customer journey mapping workshop with the students. Be sure to fill out one column together and then have them all break out into smaller groups to finish the rest of it.,explain what a customer journey map is and create one,1,,"Customer Journey Maps for UX1 w/Nick Basile,Customer Journey Maps for UX2 w/ Christijan Draper,Customer Journey Maps for UX3 w/ Glenn Ference,Customer Journey Maps for UX4 w/ Glenn Ference",,,Create a customer journey map,"Advanced Experience Definition,Definition",Active,"UX Design Core [v1 deprecated], UX Design Core",1,0,1,0,0,0,,10/23/2018 10:01am,recWTPvykfYkp8HQ2
,,,,,0,,,,,,,,,0,0,0,0,0,0,,10/23/2018 12:03pm,reco3HXFFsnU9TFG4
Blueprints of Me: Part 1,,A training on self awareness. This presentation will also cover goal setting and maintaining a positive outlook. ,,Finish at least one draft of their blueprint(section 1 and 2),1,,Blueprints of Me: Part 1 for Principles for Success with Katie Fitzpatrick ,,,,Empathy/Diversity,,Principles for Success,1,0,0,0,0,0,,10/23/2018 12:03pm,rec8rJfH6WxM0VXTg
Project Week — Design a Publication Platform,,,,use the product design cycle to create a wireframe click-through prototype.,1,,,,,,UX Unit 1 Project Week: UX Fundamentals,,UX Design Core [v1 deprecated],1,0,0,0,0,0,,10/23/2018 12:13pm,rec1MfaVSQbqtbUyV
Additional Research Methods,,"There are relatively easy and brief techniques to get user data while designing a product. Today we'll talk about three of those: Preference Tests, Click Tests, 5-second Tests. We'll also talk about Online User Research resources.",Usability hub is a good starting place for showing the three user tests. Talk about the strengths and weaknesses of using services like usertesting.com etc.,"know the strengths and weaknesses of online user testing,conduct 5-second tests,conduct first-click tests,conduct preference tests,conduct a competitive analysis",5,,"Additional Reserach Methods for UX1 w/Christijan Draper,Additional Research Methods for UX2 w/ Glenn Ference,Data Structures,Additional Research Methods for UX3 w/ Glenn Ference,Additional Research Methods for UX4 w/ Glenn Ference",,,Design Testing with UsabilityHub,Discovery,,UX Design Core,5,1,5,0,0,2,,10/23/2018 12:18pm,recQGpk7COhy9dYBZ
User Interviews,,"Interviews are relatively easy to coordinate, set up, and conduct. If used responsibly, interviews can provide essential background information and other data that can inform the shape of a product as it emerges from the design process. In order to be effective at interviewing, it’s important to understand some guidelines that can help make the interviews both informative and useful.

User interviews help form a foundation of a user-centered design practice. Interview data are best if collected along with observational data about users. But, user interviews tend to be easier data to collect and so are a staple of initial discovery efforts.",,"analyze and report the findings of an interview,conduct a user interview using best practices",2,,"Recruiting for UX1 w/Christijan Draper,User Interviews for UX2 w/ Christijan Draper,User Interviews for UX3 w/ Glenn Ference",,,Conduct an Interview,Discovery,,UX Design Core,2,1,2,0,0,2,,10/23/2018 12:19pm,recjWOxl4GQ8Uym1A
Contextual Inquiry and Task Analysis,,"We will cover the process of contextual inquiry in more depth and describe task analysis. 

""Contextual inquiry is a field data-gathering technique that studies a few carefully selected individuals in depth to arrive at a fuller understanding of the work practice across all customers. Through inquiry and interpretation, it reveals commonalities across a system’s customer base.""

~ Hugh Beyer and Karen Holtzblatt in _Contextual Design: Defining Customer-Centered Systems_

This research technique is based on ethnography and anthropology and aims to understand the user in their lived reality, not how they behave in a laboratory. By meeting the user in the field, you can learn more about things like your product’s competitors (whether another product or some other “real-world phenomenon”). You also have fewer intervening variables and can see what people _actually_ do rather than just what they _say_ they do or what they _think_ they do.",Material for this module comes from Chapter 8 of _Observing the User Experience_ by Mike Kuniavsky. I recommend reviewing that chapter before teaching this lesson.,"analyze data from a contextual inquiry,conduct a contextual inquiry,understand when to perform a contextual inquiry",3,,Contextual Inquiry and Task Analysis for UX1 w/Christijan Draper,,,Conduct Contextual Inquiry,Advanced Discovery,,UX Design Core [v1 deprecated],3,1,1,0,0,1,,10/23/2018 12:21pm,recjgbFHIBWfU74Wk
Making a Research Plan,,Making a formal research plan helps align goals and helps you accomplish more from limited resources. It helps match research schedule to design and development needs. It also prevents you from unnecessary work or hasty work that provides less value. This module will help you understand how to plan for effective UX research.,"This material is inspired by Observing the User Experience, by Mike Kuniavsky, chapter 5, The Research Plan.","demonstrate how to schedule projects to support a realistic research plan,organize research questions into specific projects,take company goals and rewrite and prioritize them as research questions,name and describe specific research methods one could use in a research plan",4,,"Advanced Discovery: Making a Research Plan for UX1 w/Christijan Draper,Making a Research Plan for UX1 w/Christijan Draper,Making a Research Plan for UX2 w/ Christijan Draper,Making a Research Plan for UX4 w/ Glenn Ference",,,Make a Research Plan,Discovery,,UX Design Core,4,1,4,0,0,2,,10/23/2018 12:22pm,recTptcCU1quBev4t
Choose appropriate visualizations,,,,"use Seaborn to visualize distributions and relationships with continuous and discrete variables,fix misleading visualizations",2,,"DS1: Choose Appropriate Visualizations with Ryan Herr,Choose Appropriate Visualizatons for DS2 w/ Ryan Herr,Choose appropriate visualizations w/ Aaron Gallant",,,,Data Storytelling,,,2,1,0,2,0,1,,10/24/2018 10:36am,recLmCjA0YA5IM1tR
Make explanatory visualizations,,,,"remove clutter from visualizations,add emphasis and annotations to transform visualizations from exploratory to explanatory",2,,"Make Explanatory Visualizations for DS2 w/ Ryan Herr,Make explanatory visualizations for DS3 w/ Aaron Gallant,Make Explanatory Visualizations for DS4 w/ Aaron Gallant,Make explanatory visualizations for DSPT1 w/ Alex Kim",,,,"Data Storytelling,Data Wrangling and Storytelling",,DS - Statistics Fundamentals,2,1,0,1,0,1,,10/24/2018 10:43am,recK7pBbrxfDphtSd
Sequence your narrative,,,,"combine qualitative anecdotes with quantitative aggregates,sequence multiple visualizations",2,,"Sequence your narrative for DS2 w/ Ryan Herr,Sequence your narrative,Sequence Your Narrative for DS4 w/ Aaron Gallant,Sequence your narrative for DSPT1 w/ Alex Kim,Sequence your narrative for DSPT1 w/ Alex Kim",,,,"Data Storytelling,Data Wrangling and Storytelling",,DS - Statistics Fundamentals,2,1,0,0,0,1,,10/24/2018 10:48am,recdio1wP6BiMMFwy
Workplace Objectives,,"Labs exists to provide you with a workplace experience and prepare you for your first job as a developer.  It is designed to expose you to the routines present in most software development environments and give you the opportunity to practice them to the point where you will go into your first job feeling comfortable and ready to contribute.    

In Labs, sprints and sprint challenges work differently than in other parts of the program.  Each sprint, you will have individual goals and team goals.  The individual goals represent skills that every developer must demonstrate to be successful in a work environment.  The team goals represent the milestones that must be achieved for the project to stay on track.  

For your sprint challenge, you will use the last day of a sprint to complete an entry in your Development Journal.  This is submitted via a link in your weekly retrospective.  

Your PM will use the content in your Development Journal, and other sources, to evaluate you for this sprint challenge.  If at any point, you are concerned that you will be unable to meet one of the requirements, please contact your PM immediately so that you can work towards a resolution.  A student who misses more than one item in the checklist for a given sprint, or misses the same item in consecutive sprints may be subject to the corrective action plan.

PMs will use this checklist when evaluating a student’s Sprint Challenge Submission.  For three stars, the student must complete every requirement in the checklist at an exceptional standard.  For two stars, the student must complete at least 3 of the 4 items at an adequate level.  

* The student’s github contribution graph shows participation in line with their actual contributions and is similar to those of their teammates and they listed a minimum of four PRs and matching Trello tickets, including a minimum of one front end and one back end
* The student summarized their weeks work adequately
* The student adequately performed a detailed analysis of one of their tickets
* The student adequately answered the weekly reflection question

Additionally, teams will be tasked with completing a project milestone.  If a team is unable to complete the milestone/learning objectives by the end-of-sprint check-in, they will be given the opportunity to take advantage of the Flex program.  ",,"track progress using the kanban(Trello) board.,follow a consistent branching strategy using GitHub,use asynchronous communication tools to communicate with their teammates,contribute to high quality stand-up and team meetings",4,,,,,,Lambda Labs,,Lambda Labs,4,1,4,4,0,3,,10/24/2018 12:43pm,rec8wSdi1vH5nsXbW
Project Milestones - Integration,,"In this sprint, students will integrate all of the components that will make up their app - servers, APIs, services, etc. all must work together as one.",,"""work with a team to implement OAuth, allowing their users to log in with one of their accounts from a company such as Google or Microsoft."",work with a team to connect the front end and back end of their project, work with a team to implement all APIs and services needed for their application.",3,Labs II - Team Rubric,,,,,Labs II - Working with Other Developers,,Lambda Labs,3,1,0,0,0,1,,10/24/2018 5:32pm,rec0EcJa5eeegdxSc
Change Order,,,,"work with a team to complete change order tasks,work with a team to document feedback given by a stakeholder that requires a material change to the project",2,,,,,,Labs VI,,,2,1,0,0,0,1,,10/24/2018 5:49pm,recqGxq4Ga4TevqV7
Designing for the Human Mind II,,"While it’s important that we always understand our users and the context we’re designing for, at the end of the day we’re all still human beings. By studying psychology and neuroscience, we can learn how our minds work in order to leverage that understanding to design better solutions for everyone. With this foundation, we can explore universal design principles and utilize them within our design contexts.",,"explain what universal design guidelines help us design for perception,explain what the Gestalt principles are and how to use them when designing",2,,,,,Gestalt Principles Practice,Advanced Experience Definition,Active,UX Design Core [v1 deprecated],2,1,2,2,2,4,,11/5/2018 1:50pm,recJvXCiE2IPznoA2
Publish blog posts,,,,"use Markdown and LaTeX,publish a blog post on Medium",2,,DS1: Publish Blog Posts with Ryan Allred,,,,Creating Professional Portfolios,,DS - Annex,2,1,0,2,0,1,,11/6/2018 10:25am,recSSItOkpSyeQ68t
Revise your writing,,,,"edit writing based on usability research guidelines,""write a project proposal with hypothesis, in inverted pyramid style""",2,,DS1: Revise Your Writing with Aaron Gallant,,,,Creating Professional Portfolios,,DS - Annex,2,1,0,0,0,1,,11/6/2018 10:28am,recUikBZeEETjNaHs
Connect with professionals,,,,"write cold emails or LinkedIn messages to request informational interviews,""find target employers, hiring managers, and practitioners""",2,,DS1: Connect With Professionals with Ryan Herr (w/web scraping bonus!),,,,Creating Professional Portfolios,,DS - Annex,2,1,0,2,0,1,,11/6/2018 10:29am,recDxGWmIPpXE7dIk
,,,,,0,,,,,,,,,0,0,0,0,0,0,,11/9/2018 11:21am,recIdcTcFn3k5PLBh
Delegates and Protocols,,"Delegation and Protocols
",,"understand and explain the delegate pattern and why it is used,create a custom UITableViewCell,""define a custom protocol, and make a class or struct conform to it"",understand and explain what a protocol is and common scenarios for their use,use a regular UIViewController to display a UITableView,use a segue to show a detail view when a table view cell is tapped",6,,"Delegates and Protocols for iOS5 w/James Pacheco,Delegates and Protocols for iOS6 (Part 2) w/Paul Solt,Delegates and Protocols for iOS6 (Part 1) w/Paul Solt",,,Art Gallery,iOS Fundamentals I,,iOS Development Core,6,1,5,0,5,1,,11/9/2018 11:22am,rec8D6ntL99oLr76A
Table View Controller,,"Table View Controllers are the work-horse of many iOS applications. They provide a vertical scrolling list of developer-configurable cells that allow you to show information and link that information into detail presentations, allowing the user to view, edit, and interact with. An all-in-one solution, a Table View Controller merges a Table View with a View Controller and provides all the necessary hook-ups that allow the controller to act as its own data source and delegate, so it's ready to be used and configured from the box.",,,0,,"Table View Controller (part 2) for iOS4 w/Erica Sadun,Table View Controller (part 1) for iOS4 w/Erica Sadun",,,Detailed,,,,0,0,0,0,0,0,,11/12/2018 2:34pm,recWnBhMLC1ERFwQt
Collection View Controller,,"Collection View Controllers take scrolling lists to the next level. They're the evolutionary form of Table View Controllers and easily allow you to present items that scroll in both directions -- and can be configured to create novel and beautiful layouts that may not even look like lists at all. You'll learn about basic collection view controllers, and how they act pretty much like table view controllers on steroids. You'll explore the section data model and create both table views and collection views with sections, headers, and more.",,"use UserDefaults to store and retrieve preferences,define keys for specific values stored in UserDefaults,understand and explain the purpose of UserDefaults and the kind of information it should be used to store,implement UICollectionViewDelegate method to react to selecting a collection view cell,implement custom UICollectionViewCells,implement and customize basic layouts using UICollectionViewFlowLayout,implement UICollectionViewDataSource methods to populate a collection view from model data,understand and explain what a collection view is along with common scenarios for its use",8,,Collection View Controller Review for iOS4 w/Erica Sadun,,,Photo Collection,,,,8,1,8,0,1,2,,11/12/2018 2:34pm,recfnBZPIuSRSKjhP
Design Thinking and Beyond,,"When designing products and especially designing new features for existing products, it is easy to get stuck in a rut. Creativity can get stymied by the familiarity and repetitiveness of designing within specific constraints for a long time. Sometimes it’s also hard to decide whether a creative idea will be useful and worth pursuing. Design Thinking is a loose methodology that emerged from engineering and industrial design, starting in the 1960s. Over time some organizations have promoted Design Thinking as an almost branded tool for generating new solutions to problems. Businesses leaders have also subsumed the concept as a way to strengthen their own business creativity. The design firm IDEO is one organization that has popularized the term Design Thinking, teaching courses in Design Thinking and following Design Thinking processes in its contract work. The Stanford D.School also teaches Design Thinking as a foundational process for design. Some folks decry Design Thinking as just common sense and that it doesn’t deserve the attention paid to it, but as Design Thinking helps provide order and structure to a sometimes convoluted and meandering process, it’s worth exploring and understanding more. ","Some resources for Pair Design: 

https://medium.com/goodux-badux/turning-to-pair-design-dafa4c95ef91

https://spin.atomicobject.com/2018/01/26/pair-design-when-how/","tell an effective product story,understand Design Thinking processes and terminology,participate in Gen-Synth pair design",3,,"Design Thinking and Beyond for UX 1 w/Christijan Draper,Design Thinking and Beyond for UX2 w/ Christijan Draper,Design Thinking and Beyond for UX3 w/ Glenn Ference",,,Generator-Synthesizer Pair Design and Design Thinking,"Advanced Ideation and UX Leadership,Ideation and Collaboration",,"UX Design Core [v1 deprecated], UX Design Core",3,1,3,0,0,2,,11/14/2018 3:04pm,recwXf5WuXKYpshLS
,,,,,0,,,,,,,,,0,0,0,0,0,0,,11/14/2018 3:04pm,reciJ5Ewdse71KIva
Real-world Experiment Design,,"Math is hard, but the real world is harder - you've learned how to perform and evaluate hypotheses tests on data, but what's truly interesting in this domain is to be able to gather your own data for testing. As you know from earlier weeks, gathering and cleaning data is generally non-trivial, but it's even trickier when you want to use it to fairly and robustly test various hypotheses.

In this module we will consider this challenge - how do we design and run an experiment? We will generally focus on web applications as a domain, but these techniques can be applied to any number of products, and indeed scientific scenarios more broadly. There are particular challenges working in the ""real-world"" though, and we will highlight those.","Running this may be a little tricky, as ideally students should run an actual little experiment that splits visitors and gets different data. Doing this fully is a stretch goal, but with enough boilerplate people should be able to share a simple Analytics-instrumented page and see results to test with.","evaluate and summarize findings from real-world A/B test data,deploy a simple static (front-end) A/B-instrumented webpage",2,,"DS1: Real-world Experiment Design with Aaron Gallant,Real-world Experiment Design for DS2 w/ Aaron Gallant,Real-world Experiment Design for DS3 w/ Ryan Allred,Real-world Experiment Design for DS4 w/ Ryan Allred,Real-world Experiment Design",,,,Statistical Tests and Experiments,,DS - Statistics Fundamentals,2,1,2,2,2,4,,11/24/2018 1:20pm,recD4TjDygc4aPZRc
Introduction to Bayesian Inference,,"So far all statistics we've studied is actually called frequentist statistics - drawing conclusions about a complete population or process by generalizing from the frequency or proportion of observed data. Frequentist statistics is well-established, and is still the default in most situations - but Bayesian statistics is an increasingly popular approach, and arguably better model for our brains and how we actually form and update beliefs based on evidence.","This is a tangent in some ways, but fits as well here as anyway, and will be hip and excite students. Try to focus on the core objectives/material here, defering the larger significance/applications of Bayes for stretch/later discussion.","calculate Bayesian confidence intervals,be able to derive Bayes' theorem from the Law of Conditional Probability",2,," DS1: Introduction to Bayesian Inference with Aaron Gallant,Introduction to Bayesian Inference for DS2 w/ Aaron Gallant,Intro to Bayesian Inference for DS4 w/ Ryan Allred",,,,Statistical Tests and Experiments,,DS - Statistics Fundamentals,2,1,1,1,2,1,,11/24/2018 1:37pm,reczBCaWiVZyBGCCT
Pair Design,,"Pair design can help create a more effective design through the power of an immediate response to design ideas as well as a second mind interpreting and pushing a design further. 

There are multiple approaches to pair design. We will primarily describe and practice an approach to pair design pioneered by Cooper: Generator-Synthesizer pair design.","Some resources: 

https://medium.com/goodux-badux/turning-to-pair-design-dafa4c95ef91

https://spin.atomicobject.com/2018/01/26/pair-design-when-how/",participate in Gen-Synth pair design,1,Gen-Synth Pair Design,Pair Design for UX1 w/Christijan Draper,,,,Advanced Ideation and UX Leadership,,UX Design Core [v1 deprecated],1,0,1,0,0,0,,11/24/2018 5:21pm,recS39liW5EdsYQZr
Swift Language Intensive,,Dive into a day of Swift Language review,,,0,,,,,,,,,0,0,0,0,0,0,,11/26/2018 8:42am,recLTMnBPWPD9aueD
Introduction to Creating and Using Design Systems,,"As companies and design teams have grown over the years, they’ve begun running into the same problem: bespoke design doesn’t scale. Over time, designers have developed a variety of concepts to help combat this issue such as design systems and atomic design. In this module, we’ll take a look at each of these ideas and further explore how to use Sketch to execute them.",,"explain what atomic design is and how to use it,explain what a design system is and create one",2,,"Introduction to Creating and Using Design Systems for UX 1 w/Nick Basile,Introduction to Creating and Using Design Systems for UX2 w/ Glenn Ference,Intro to Creating and Using Design Systems for UX3 w/ Glenn Ference",,,Create a Design System,"Advanced Design: Design Systems and UX In Practice,Prototyping",Active,"UX Design Core [v1 deprecated], UX Design Core",2,1,2,1,0,2,,11/26/2018 2:58pm,rec38QiQkNMZgQa4l
"iOS Human Interface Guidelines, Material Design, and Android Considerations",,"Apple and Google have put together their own design systems to help us design consistently excellent user experience for their mobile users. In this module, we’ll review each of their systems and learn how to use them to design our mobile user experiences.","Review the presentation and make sure the links to the Google photo galleries still work. Also, make sure you've reviewed the galleries yourself and have selected a few differences to illustrate.","explain what Material Design is and how to use it to design for Android devices,explain what the iOS Human Interface Guidelines are and how to use them",2,,"""iOS Human Interface Guidelines, Material Design and Android Considerations for UX 1 w/Nick Basile""",,,iOS and Material Design Practice,Advanced Design: Design Systems and UX In Practice,Active,UX Design Core [v1 deprecated],2,1,2,2,0,3,,11/26/2018 2:59pm,rect8UKimJDBkD53V
UX Project Management,,"Organizing our day-to-day work activities requires a tremendous amount of thinking and planning. Fortunately, the design field has borrowed many of the most cutting-edge project management techniques from the software industry. In this module, we’ll take a look at how teams manage their work using Agile, Kanban, and Scrum.",,"explain what the Scrum approach is and how to use it,explain what the Kanban approach is and how to use it,explain what Agile project management is and how to use it",3,,,,,UX Project Management Practice,Advanced Design: Design Systems and UX In Practice,Active,UX Design Core [v1 deprecated],3,1,3,3,0,3,,11/26/2018 2:59pm,recCYowIcMLDG14y8
Working as a UX Designer,,"Working as a UX designer is a challenging yet rewarding career path. As we progress through the curriculum, we want to make sure you don’t just learn the theory and techniques of UX, but also the practical realities of this exciting field. In today’s module, several UX designers will describe their careers and share their insights with you.","This is a discussion lesson. Review the presentation, and try to invite as many UX designers as possible.","explain the value of UX to business stakeholders,explain how UX designers are also UX educators,explain what working as a UX designer is like",3,,Working as a UX Designer for UX1 w/Nick Basile and Christijan Draper,,,Review your research plan,Advanced Design: Design Systems and UX In Practice,Active,UX Design Core [v1 deprecated],3,1,0,0,0,1,,11/26/2018 2:59pm,recyvrHWpBSSB7CO5
Transitioning from Wireframes to High-Fidelity Design,,"We know that high-fidelity designs appear as close to the real thing as possible. But how do we move from a mid-fidelity wireframe to a high-fidelity design? Now that we're familiar with Sketch, UI design basics from the intro course, and design systems, we're ready to take our mid-fidelity designs to the next level.",Use wireframes to guide a high-fidelity design process. This is meant to demonstrate how a designer uses Sketch (or another tool) to create final designs.,"transition mid-fidelity wireframes to high-fidelity designs,understand foundational UI design",2,,"Transitioning from Wireframes to High-Fidelity Design for UX2 w/ Glenn Ference,Transitioning from Wireframes to High-Fidelity Design for UX3 w/ Glenn Ference",,,Wireframe to High-Fidelity,"Advanced Ideation and UX Leadership,Prototyping",,"UX Design Core [v1 deprecated], UX Design Core",2,1,2,2,0,3,,11/27/2018 10:09pm,rechwyRFYz8g3jmSE
High-Fidelity Design Practice,,"This module will invite you to practice skills in visual hierarchy, color theory, typography, and other design principles as you develop increased skill in using Sketch.",,recreate existing designs using a digital design tool,1,,,,,,Advanced Ideation and UX Leadership,,UX Design Core [v1 deprecated],1,0,1,0,0,0,,11/27/2018 10:09pm,recS6KQNBMxkvGw4r
Discovery,,"The objectives of this module encompass the steps you take in order to firmly ground your project in the context of the user, while also understanding stakeholder constraints and the competitive landscape. Quickly gather as much information as possible to make informed design decisions later.",,"conduct user research as a UX team for a client,gather requirements from a stakeholder,conduct a competitive analysis based on information gathered from stakeholder research",3,,"Discovery/Monday Demo for UX1 w/Christijan Draper,Stakeholder Meeting for UX1 w/Christijan Draper and Nick Basile",,,Discovery Milestone,Design in Practice: Group Project 1 week 1,,"UX Design Core [v1 deprecated], UX Design Core",3,1,3,0,0,2,,12/1/2018 1:34pm,recGETJhuWipqLu6U
Define the Product,,This module allows you to practice the skills that help you capture and document the essence of the knowledge you gained through your discovery efforts. The documents you create at this stage help set the stage for design decisions and become handy references that ensure the project is moving in the intended direction.,,"consolidate user research into documentation for use in the design process,outline product goals for the team and the user",2,,,,,Product Definition Milestone,Design in Practice: Group Project 1 week 1,,"UX Design Core [v1 deprecated], UX Design Core",2,1,1,0,0,1,,12/1/2018 1:37pm,recCisf4s6oRSI1Xb
Ideation in Practice,,Ideation is a key part of the product design process. There are as many ways to go about this as there are people. We've taught some specific skills and processes to help enhance your ability to be creative. Use the ideation step in the product design cycle to expand your potential concepts—be divergent before converging on a final solution.,,use ideation skills to create three divergent concepts for the app,1,,,,,Ideation Milestone,"Design in Practice: Group Project 1 week 1,Design in Practice: Solo Project Week",,"UX Design Core [v1 deprecated], UX Design Core, UX Design Core [v1 deprecated], UX Design Core",1,0,0,0,0,0,,12/1/2018 1:46pm,reciuL9sTNrEpQQGY
Prototyping and Testing,,"Once you’ve identified solutions for your product’s problem, you’re ready to start prototyping. Remember that in the prototyping stage, you’re trying to accumulate as much validation as possible using the lowest fidelity design artifacts. So, you’ll want to focus on rapidly iterating through and testing your solutions.",,"evaluate prototype effectiveness by testing on real users,create multiple low-fidelity prototypes of the product concepts",2,,,,,Prototyping and Testing Milestone,Design in Practice: Group Project 1 week 2,,"UX Design Core [v1 deprecated], UX Design Core",2,1,0,0,0,1,,12/1/2018 1:50pm,rec400RGfq370WmA6
High Fidelity MVP,,"In this module, you will be polishing your prototypes into a high-fidelity MVP. Along the way, you should continue to validate that your high-fidelity designs are usable through additional user testing.",,"test high-fidelity designs with real users,design a representation of your final product in high-fidelity",2,,,,,High-Fidelity MVP Milestone,Design in Practice: Group Project 1 week 2,,"UX Design Core [v1 deprecated], UX Design Core",2,1,0,0,0,1,,12/1/2018 1:58pm,recO45DESRQyyJT4I
Client Presentation,,"Being able to clearly articulate and present work that you’ve conducted is an essential skill to develop as a UX designer. In this module, you will be practicing these skills by presenting your work this project’s client.",,"provide final design summary document with supporting material,deliver a compelling presentation to client with final concepts using storytelling",2,,,,,Client Presentation Milestone,Design in Practice: Group Project 1 week 2,,"UX Design Core [v1 deprecated], UX Design Core",2,1,0,0,0,1,,12/1/2018 1:58pm,rec6bzm7mw7WCZCpP
P,,,,,0,,,,,,,,,0,0,0,0,0,0,,12/4/2018 3:34pm,recddaZR7tqoTtXKZ
Project Week — Design a Lambda School Application,,"Based on your training thus far, you should be able to conduct your own UX design process to result in a recommended solution for a client.",,"""conduct discovery activities, define your problem space, generate ideas for solutions, prototype your concepts, create high fidelity designs""",1,,,,,,UX Unit 2 Project Week,,UX Design Core [v1 deprecated],1,0,0,0,0,0,,12/4/2018 5:21pm,recwr8VsxOaqe1A1l
Google Sprint 2.0 — Monday: Map and Sketch,,"The first day of the Google Design Sprint 2.0 consists of two parts. The first part, conducted in the morning, is the process of defining the design challenge. The second part of the day is used as ideation time, using specific design techniques for coming up with a number of possible solutions for the defined challenge. ","The Google Design Sprint is based on Jake Knapp's book _Sprint_. The modules and objectives in this Sprint are based on the revised version of the Sprint that is advocated by AJ&Smart. Check out their YouTube channel if you want some additional material.

This public <a href=""https://trello.com/b/5rgvK2hq/the-design-sprint-20"">Trello board</a> has all the instruction / videos from AJ&Smart.

Google talk with _Sprint_ author Jake Knapp: https://www.youtube.com/watch?v=peK4xFdji8I

Sprint Book overview website: https://www.thesprintbook.com/how/ ","conduct 4-part sketching exercise,conduct lightning demo exercise,use the map technique within a design sprint,""use """"How might we"""" questions to define a design challenge in a design sprint"",conduct expert interviews as part of a design sprint,launch and moderate a design sprint",6,,,,,,Design in Practice: Google Sprint,,"UX Design Core [v1 deprecated], UX Design Core",6,1,5,1,0,1,,12/5/2018 9:54am,recVJAcdrnCAauhVQ
Google Sprint 2.0 — Tuesday: Decide and Story-board,,The Tuesday activities in a sprint allow the team to finalize a decision on what direction to move forward with and then begin the process of fleshing out the concept so it can be prototyped the next day.,"Design Sprint 2.0 videos: 
https://www.youtube.com/watch?list=PLxk9zj3EDi0X5CgoFckoheIFAx-uT2i7j&v=YW2ifUTVd_E","storyboard a design concept,conduct the five-step process to facilitate a decision",2,,,,,,Design in Practice: Google Sprint,,"UX Design Core [v1 deprecated], UX Design Core",2,1,2,1,0,2,,12/5/2018 9:55am,recCGkFAanwELn0Vg
Google Sprint 2.0 — Wednesday: Prototype,,Day three of the design sprint is spent building the prototype based on the storyboard created the previous day.,"Tips from AJ&Smart
https://www.youtube.com/watch?v=s_mCidFnia0&index=10&list=PLxk9zj3EDi0X5CgoFckoheIFAx-uT2i7j

Prototype day checklist: https://library.gv.com/sprint-week-thursday-df8d7c8c0555 ","facilitate the prototyping session of a design sprint,develop a prototype mindset",2,,,,,,Design in Practice: Google Sprint,,"UX Design Core [v1 deprecated], UX Design Core",2,1,2,0,0,2,,12/5/2018 9:55am,recsPTYaExZDMFNgi
Google Sprint 2.0 — Thursday: Test,,"The test day gives you time to watch actual users or customers try out your prototype. This is the crown and, ultimately, the real value of the sprint. Our productive week culminates with data that will inform the next steps needed to be taken with the product.","Sprint test checklist: https://library.gv.com/sprint-week-friday-7f66b4194137

Jake Knapp uses the story of the publisher, Nigel Newton, who finally published Harry Potter after the manuscript had been rejected by eight other publishers. He only published because he handed a 50-page manuscript sample to his 8-year-old daughter and she came down after reading it and pestered him to get more of the book. He realized he had a winner on his hands. The point of his story is that testing with real users makes a huge difference. We ""experts"" are not always the real judges of what's good.

Here's an article about the original J.K. Rowling story:

https://www.independent.co.uk/arts-entertainment/books/news/revealed-the-eight-year-old-girl-who-saved-harry-potter-296456.html 

```The story [publisher Nigel Newton] tells in a rare personal interview is almost as unlikely as one of Rowling's muggles-and-magic plots. Bloomsbury, the off-beat company named after the 1920s London literary set, was just about the last chance for Rowling to get the original Harry Potter and the Philosopher's Stone into print.

Her agent, Christopher Little, called at Bloomsbury Publishing's cramped offices in Soho Square and gave Newton a sample to read. He took it home but, instead of settling down with it himself, handed it to Alice, then eight years old.

""She came down from her room an hour later glowing,"" Newton recalls, ""saying, 'Dad, this is so much better than anything else.' She nagged and nagged me in the following months, wanting to see what came next.""

Newton made out a cheque to Joanne Kathleen Rowling for just £2,500, which has since proved one of the wisest investments in publishing history.

....

""It was very fortunate for us,"" said Newton. ""We'd only just started to publish children's books in June 1994. And we hit it lucky."" He told The Independent on Sunday that ""eight others turned J K Rowling down; ie, the whole lot"".
```","analyze notes from interviews,""explain and conduct a """"five-act"""" interview"",set up for interviews the final day of your sprint",3,,,,,,Design in Practice: Google Sprint,,"UX Design Core [v1 deprecated], UX Design Core",3,1,3,0,0,2,,12/5/2018 9:55am,reckUArwCppScNx4n
Android Fundamentals Project Week Kickoff,,,,understand what is expected of them for project week 1,1,,Android Fundamentals Project Week Kickoff for AND1 w/Chance Payne,,,,Android Unit 1 Project Week: Android Fundamentals ,,,1,0,1,0,0,0,,12/6/2018 6:22pm,rec6G5EJgcw7IASGo
Building a Portfolio Website,,"The goal of this lesson is to build a polished portfolio of your work. This will be a first impression to hiring managers, and should appropriately highlight the skills you've developed and will bring to a job.",,"""describe the purpose and value of a portfolio, and what types of projects should be highlighted.""",1,,,,,,,,,1,0,0,1,0,0,,12/18/2018 1:16pm,recmpSDMImQVw6vok
Company Presentations,,Company Presentations to Lambda School,,,0,,"Wayfair Presentation,Clover Networks,Gecko Robotics,Upside Presentation,JPMorgan Chase & Co. Presentation,IMPartner Presentation,SafeChain Presentation,Censinet Presentation,STORD Presentation,Ready Robotics Presentation,Tyler Technologies Presentation,Cisco Presentation,PillPack Presentation,Church Community Builder Presentation,Mesa.edu Presentation,Uber Presentation,IT.com Presentation",,,,Brownbags,,Brownbag Presentations,0,0,0,0,0,0,,12/20/2018 1:30pm,recrRJ2UgOg54Okai
Sorting,checked,"In this module, students are introduced to the algorithmic concepts of time and space complexity, big-O notation and recursion, via a classic computing problem: sorting items in an array. They will learn why sorting is important in computing and why there is no single optimal way to sort. With complexity analysis, they will be able to evaluate the strengths and weaknesses of a given algorithm implementation and be able to determine the best version for their purposes.

## Additional Resources
- [Big O Notation: Using not-boring math to measure code's efficiency on Interview Cake](https://www.interviewcake.com/article/python/big-o-notation-time-and-space-complexity?course=dsa) is a great resource for learning about Big O notation and time/space complexity. ","### Part 1 - Iterative Sorting
1. Ask about prior knowledge, preconceptions, examples of things apps might sort [10 min]
2. WHY we sort (searching) [15 min]
3. Demo Selection Sort (playing cards on desk, drawn out example on screen, etc.) [10 min]
4. Live code Selection Sort [15 min]
5. Discussion of runtime [10 min]

#### ----------BREAK----------

6. Demo Insertion Sort (playing cards on desk, drawn out example on screen, etc.) [10 min]
7. Give students sample array to sort with BOTH algorithms, put in breakout rooms & ask to trace through each pass of algorithm [15 min]
8. Review psuedo-code for Insertion Sort [15 min]
9. Go over assignment (implement Insertion Sort) [5 min]
10. Questions & wrap-up [5-10 min] 

### Part 2 - Recursive Sorting

1. Q/A on previous day's assignment [15 min]
2. Discussion of Insertion Sort runtime [10 min]
3. Demo Merge Sort (playing cards on desk, drawn out example on screen, etc.) [10 min]
4. Live code Merge Sort [20 min]
5. Discussion of runtime [5 min]

#### ----------BREAK----------

6. Demo Quick Sort (playing cards on desk, drawn out example on screen, etc.) [10 min]
7. Give students sample array to sort with BOTH algorithms, put in breakout rooms & ask to trace through each pass of algorithm [15 min]
8. Review psuedo-code for Quick Sort [10 min]
9. Discussion of runtime [5 min]
10. Go over assignment (implement Quick Sort) [5 min]
11. Questions & wrap-up [5-10 min] ","identify when a problem is amenable to a recursive solution and utilize recursion in order to solve it,describe the differences between Linear and Binary Searching algorithms,define what runtime complexity is and enumerate the main big O runtime classifications",3,,"Algorithms - Sorting I for CS14 w/Beej Jorgensen,Sorting for CS15 w/Luisan Suarez,Sorting Day One,Sorting Two for WEB15 w/Jonathan Brunt",,,Sorting,Algorithms,,"Computer Science, DS - Computer Science",3,1,3,3,3,4,,1/2/2019 7:27am,reck76SPX26beGSqE
Intro to UX,,"Welcome to Lambda School! This module will cover some key points about jumping into a Lambda School program. We’ll help you feel at home and ready to conquer the world. Then, we’ll kick off our learning by figuring out what UX is, exactly, and why it matters.",Update the presentation's introduction to present your own background.,"define UX and why it is valuable,""learn the """"Lambda Way"""""",explain the course expectations",3,,"Intro to UX for UX2 with Nick Basile,Intro to UX for UX3 w/ Nick Basile,Intro to UX for UX4 w/ Melissa Kark,Intro to UX for UXPT1 w/ Ann-Marie Sebastian,Intro to UX & Starting Your UX Career for UX5 w/ Melissa Kark",,,What excites you about Lambda and UX?,UX Fundamentals,Active,UX Design Core,3,1,3,0,0,2,,1/2/2019 10:22am,recRdGKU1EEm1DBav
"""How I Learned a New Tool/Language/Framework in 1 Week"" Publication",,"The ability to learn new things quickly is an important skill for professional developers and it is a personality trait that hiring managers look for when considering applicants for their teams. Developers who can adapt have an advantage over those who are stuck in a single stack. This week, you will practice this important skill and demonstrate to potential hiring managers that you’re able to pick things up quickly, and can do so on your own. This will open doors for you to jobs where you might not have prior experience with all of the tools being used. ",,"""write a blog post or record a YouTube video then publish on """"how I learned a new tool/language/framework in 1 week""""""",1,,,,,,Next Week III,,Lambda Next,1,0,0,0,0,0,,1/3/2019 9:10pm,recBxlNyyaqC6tNAi
"learn a new language, tool, or framework",,"During your time at Lambda School, you have had the opportunity to learn many things that were new to you. We’ve guided you through several programming languages, frameworks, and tools that are used by professional developers all over the world. At some point in your career, possibly even at your first job, you’ll want or need to learn something new. That will be your task this week. Pick up a new language, tool, or framework, and use it to build a functioning Web Application.  ",,"""select and learn a new tool, language, or framework """,1,,,,,,Next Week III,,Lambda Next,1,0,0,0,0,0,,1/3/2019 9:15pm,recOSKR1MiI3BlVYI
"""How I Contributed to My First Open Source Project"" Publication",,"The connected world is powered by open source software. From Linux to React, it is hard to imagine going an entire day in 2018 without touching a piece of open source software. While many companies sponsor the development of open source tools, the vast majority of open source work is contributed by volunteers. Getting involved in the open source community is a great way to give back, to learn new things, collaborate with a diverse and distributed team, and to enhance your skills as a software developer. Hiring managers view open source contributions as very strong positive signals and having this kind of work in your portfolio will help you get more meetings. ",,"""write a blog post or record a YouTube video then publish on """"how I contributed to my first open source project""""""",1,,,,,,Next Week IV,,Lambda Next,1,0,0,0,0,0,,1/3/2019 9:18pm,recMSDFUQFJm2Gvby
Contribute to an Open Source Project,,"The connected world is powered by open source software. From Linux to React, it is hard to imagine going an entire day in 2018 without touching a piece of open source software. While many companies sponsor the development of open source tools, the vast majority of open source work is contributed by volunteers. Getting involved in the open source community is a great way to give back, to learn new things, collaborate with a diverse and distributed team, and to enhance your skills as a software developer. Hiring managers view open source contributions as very strong positive signals and having this kind of work in your portfolio will help you get more meetings. ",,contribute to an open source project,1,,,,,,Next Week IV,,Lambda Next,1,0,0,0,0,0,,1/3/2019 9:20pm,recFPrwnbbuhuRa72
Starting Your UX Career,,"The point of a Lambda education is to land a job! To do that, we’ll take a look at the state of the UX industry and start preparing you to be the best job candidate possible today.",,"""prepare themselves for a successful career in UX with a portfolio, blog, and social media presence"",explain what it’s like to work as a UX designer and the various UX specializations available,describe the state of the UX industry",3,,"Starting Your UX Career for UX2 w/ Nick Basile ,Starting Your UX Career for UX3 w/ Nick Basile,Starting Your UX Career for UX4 w/ Melissa Kark,Starting Your UX Career for UXPT1 w/ Ann-Marie Sebastian,Intro to UX & Starting Your UX Career for UX5 w/ Melissa Kark",,,Create your UVP and career boosters,UX Fundamentals,Active,UX Design Core,3,1,3,0,0,2,,1/4/2019 11:59am,recmnJMYBnepO7OpU
Intermediate Linear Algebra,,"In this module we'll do a review of some basic statistics concepts:
- Variance
- Standard Deviation
- Covariance
- Correlation

These topics will build up to a discussion about variance-covariance matrices, why they're important and what some of their main uses are in data science. We'll also explore some intermediate Linear Algebra topics focused on building a strong intuition in regards to working with high dimensional data. We'll establish the concepts of: 
- Orthogonality
- Unit Vectors
- Linear Independence and Span
- Basis Vectors & Orthogonal Basis
- Rank and Nullity
- Linear Projections in R^2",,"calculate the rank of a matrix and use it to determine the span and basis for the vectors that the matrix is composed of,identify the space spanned by multiple vectors by learning to identify linearly dependent vectors in both their graphical and numeric representations,""rewrite any vector as a linear combination of scalars and unit vectors, give the definition for what makes a vector a """"unit"""" vector and learn how to turn any vector into a unit vector."",Show when two vectors/matrices are orthogonal and explain the intuitive implications of orthogonality,Understand the differences in standardization between variance and standard deviation as well as covariance and correlation in preparation for learning about variance-covariance matrices,""visualize orthogonal projections in R^2 as being the """"shadow"""" of a vector onto a subspace at a right angle""",6,,"Intermediate Linear Algebra for DS2 w/ Ryan Allred,Intermediate Linear Algebra for DS4 w/ Ryan Allred,Intermediate Linear Algebra for DSPT1 w/ Alex Kim",,,,Linear Algebra,,DS - Statistics Fundamentals,6,1,0,0,0,1,,1/7/2019 8:36am,recyR22S2HMD6bYAO
Clustering,,"In this module we will:

1) Get a general overview for the different categories of Machine Learning Algorithms. (Supervised vs Unsupervised, Regression vs Classification)

2) Look at our first Machine Learning algorithm which happens to be an unsupervised learning algorithm - K-Means Clustering! Why are we starting with this algorithm? Because it involves high dimensional data, typically works well when combined with PCA, and will help tie together some of the intuition that we have been working towards building over the course of the week.

3) Briefly discuss the No Free Lunch Principle (NFL) Which basically states that the more we optimize an algorithm for solving one specific kind of problem, the worse it gets at solving all other kinds of problems. This is highly pertinent to clustering algorithms, but the biggest takeaway from the NFL principle is that there is no single approach that is going to be the best for every circumstance. The tools you use have to be informed by the data that you're working with and the context of the problem that you're trying to solve. ",,"""articulate the """"No Free Lunch Principle"""" and use it to guide them when searching for the appropriate ML algorithm to apply to a particular situation"",Use K-Means clustering and other centroid-based clustering algorithms,""Recognize when unsupervised learning is necessary, and select and apply appropriate clustering techniques""",3,,"DS1: Clustering with Ryan Allred,Clustering for DS4 w/ Ryan Allred",,,,Linear Algebra,,DS - Statistics Fundamentals,3,1,0,0,0,1,,1/7/2019 8:36am,recnLDoPD0eLGPq1z
Common UX Misconceptions,,"As the UX field has developed and matured, some common UX misconceptions have appeared. Understanding them and why they occur will help you navigate them in your own career.",,"understand that a UX design job isn’t a “desk job”,explain the differences and similarities between Product Management and UX,explain the differences and similarities between Customer Experience (CX) and UX,explain the differences and similarities between UX and UI",4,,"Common UX Misconceptions for UX3 w/ Nick Basile,Common UX Misconceptions for UX4 w/ Melissa Kark,Common UX Misconceptions for UXPT1 w/ Ann-Marie Sebastian,Common UX Misconceptions for UXPT1 w/ Ann-Marie Sebastian,Common UX Misconceptions for UX5 with Melissa Kark",,,"""In your own words, what are the common UX misconceptions?""",UX Fundamentals,Active,UX Design Core,4,1,4,0,0,2,,1/8/2019 12:57pm,recFddSbIuM5ZMg66
Scrape and process data,,,,"select rows and columns with pandas,use list comprehensions,scrape and parse web pages",3,,"Scrape and Process Data w/Ryan Herr,Scrape and Process Data w/ Ryan Herr,Join and Reshape Data for DS4 w/ Aaron Gallant,Intro to Web Scraping for DS4 w/ Brenner Haverlock,Join and reshape data for DSPT1 w/ Alex Kim",,,,,,,3,1,0,0,0,1,,1/11/2019 7:01am,rec37Qyhrjl7KXDOp
Join and Reshape Data,,"Preparing data isn't just about importing it and imputing missing values. Some of a Data Scientist's most time consuming activities involved taking data from one format and transforming it into the format that is optimized for use by an algorithm or some other process. This is what's known as ""Data Wrangling"" or ""Data Munging"" it's all about ""transforming and mapping data from one ""raw"" data form into another format with the intent of making it more appropriate and valuable for a variety of downstream purposes. (Wikipedia - Data Wrangling)",Lecture Notes from DS4: https://colab.research.google.com/drive/1bIqQkF-LvHeUV9mG_U9rFs9WZjiQ9XdY,"melt and pivot data with pandas,understand tidy data formatting,merge data with pandas,concatenate data with pandas",4,,"Reshape Data for DS2 w/ Ryan Herr,Join Datasets for DS2 w/Ryan Herr,Reshape Data for DS3 w/ Ryan Herr,Join datasets for DS3 w/ Ryan Herr,Join and Reshape Data for DS4 w/ Aaron Gallant,Join and reshape data for DSPT1 w/ Alex Kim",,,,Data Wrangling and Storytelling,,DS - Statistics Fundamentals,4,1,4,4,0,3,,1/11/2019 7:02am,recLMyOUPqsW4wm90
Reshape data,,,,"melt and pivot data with pandas,understand tidy data formatting",2,,"Reshape Data for DS2 w/ Ryan Herr,Reshape Data for DS3 w/ Ryan Herr",,,,,,,2,1,2,2,0,3,,1/11/2019 7:03am,recstGdMZ6dMqHE0z
Make features,,,,"work with dates and times in pandas,work with strings in pandas,understand the purpose of feature engineering",3,,"Make Features for DS2 w/ Ryan Herr,Make features for DS3 w/ Ryan Herr ,Make Features for DS4 w/ Ryan Allred,Make features for DSPT1 w/ Alex Kim,Make Features for DS5 w/Ryan Allred",,,,Dealing with Data,,DS - Statistics Fundamentals,3,1,3,0,0,2,,1/11/2019 7:03am,recD0PnM64cmU06N1
Intro to Careers and the Tech Landscape,,"Welcome to Lambda School! Hopefully your first week was challenging, rewarding, and has you excited for all that is to come over the next several months that you’re learning with Lambda School! While you all joined Lambda School to build your tech skills, you’re also here to make a career change. Learning new skills for the sake of skills is great, but the majority of Lambda Students come to us to make a significant shift.

Some of you may be wondering, “Why are we starting careers in week 2?? I’m not going to be job searching for months!” We’ll answer this question, and get you ready to dive into your searches (yes, now!) in today’s kick-off lesson.",,"""understand how we approach Careers at Lambda School, what support we provide in the search, and what Lambda School expects of students"",set expectations for their job search and the tech field",2,,Intro to Careers Kickoff Lesson Video,,,,Career Services Expectations/Tech Landscape,,Career Readiness,2,1,2,2,2,4,,1/15/2019 12:59pm,recyLx2jRiZ65a7ra
Polynomial & Log-Linear Regression,,,,,0,,"DS1: Polynomial and Log-linear Regression with Ryan Allred,Polynomial Regression for DS2 w/ Ryan Allred,Polynomial & Log-Linear Regression for DS3 w/ Ryan Herr",,,,Regression,,,0,0,0,0,0,0,,1/15/2019 1:54pm,recsY1Kn7CmFxoczO
Gradient Descent,,,,"implement and visualize gradient descent to solve linear regression,understand the concept of how gradient descent works and why it is useful",2,,"DS1: Gradient Descent with Ryan Allred,Gradient Descent for DS2 w/ Ryan Allred,DS3: Gradient Descent with Ryan Herr",,,,"Practicing & Understanding Predictive Modeling,Classification 2",,DS - Predictive Modeling,2,1,0,0,0,1,,1/15/2019 1:54pm,rec5jGVa8JShMS9KV
Regression Diagnostics,,,,,0,,"DS1: Non-OLS Regression with Ryan Allred,DS1: Non-OLS Regression with Ryan Allred,Non-OLS Regression for DS2 w/ Ryan Allred,Regression Diagnostics for DS3 w/ Ryan Herr",,,,Regression,,,0,0,0,0,0,0,,1/15/2019 1:54pm,recOSW738kMnbGNYZ
,,,,,0,,,,,,,,,0,0,0,0,0,0,,1/15/2019 1:54pm,recvP7AiC2actD7BI
Logistic Regression,,"Logistic regression is a workhorse - a model that makes the world (or at least the Internet) go round. And you actually already know nearly all about it - it's essentially a layer or extension of linear regression techniques. It uses the logistic sigmoid function to restrict the output (dependent variable) to the unit interval $(0, 1)$, allowing us to model binary as well as probabilities and more general (multinomial) classification problems.","Wikipedia (https://en.wikipedia.org/wiki/Logistic_regression) is quite strong for this topic. For examples, focus on a mix of ""classic"" and *real-world* - click-through mostly for the latter. It's possible to relate it back to website analytics if students have that set up from week 4 (experiments/hypothesis testing).

Also - the notebook/prewatch videos don't really go into MLE, but it's worth mentioning/giving to students who are on top of things: https://en.wikipedia.org/wiki/Maximum_likelihood_estimation","use sklearn.linear_model.LogisticRegression to fit and interpret Logistic Regression models,express and explain the intuition and interpretation of Logistic Regression",2,,"DS1: Logistic Regression with Aaron Gallant,Logistic Regression for DS2 w/ Ryan Allred,Logistic Regression for DS3 w/ Ryan Herr",,,,"Advanced Regression,Classification & Validation",,,2,1,2,2,2,4,,1/16/2019 12:57pm,recNs5uYX8hA2EyCF
Survival Analysis,,"""But at the laste, as every thing hath ende"" - Geoffrey Chaucer, from the poem *Troilus and Criseyde*

Survival analysis is the formal study of this truism - things end, but *when* they end is often a very useful question to ask.","Relate back to linear and logistic regression, especially the Cox proportional hazards model. The similarity is because, despite the various math transformations, all these methods assume that some single line/curve/plane/hyperplane/surface can separate the classes (alive/dead).","use the Python package lifelines to fit and interpret Survival models,express and explain the intuition and interpretation of Survival Analysis techniques",2,,"DS1: Survival Analysis with Aaron Gallant,Survival Analysis for DS2 w/ Ryan Allred",,,,Advanced Regression,,,2,1,2,2,2,4,,1/16/2019 12:58pm,recdlIB463tEgpOVC
Quantile Regression,,"How does ordinary least squares treat outliers? The same it treats everything - it squares them! But for outliers, squaring dramatically increases their already outsized impact on statistics like the mean.

We know from descriptive statistics that the median is more robust to outliers than the mean. This insight can serve us in predictive statistics as well, and is precisely what quantile regression is about - estimating the median (or other quantile) instead of the mean.","Focus on quantile, but connect to/acknowledge the existence of other ""robust"" techniques, and in general focus on defining ""robust"" as ""resistant to outliers and other wacky distributional problems like heteroskedasticity.""","use the StatsModel Python library to fit and interpret Quantile Regression models,express and explain the intuition and interpretation of Quantile Regression",2,,"DS1: Quantile Regression with Aaron Gallant,Quantile Regression for DS2 w/ Ryan Allred",,,,Advanced Regression,,,2,1,2,2,2,4,,1/16/2019 12:59pm,recljsUpKcw051hoN
Regularization & Survival Analysis,,"Outliers aren't the only thing that can give a data scientist headaches - sometimes the underlying linear algebra is not a well-posed problem. In other words, $Ax = b$ doesn't have a unique solution $x$, and so traditional OLS approaches fail.

Relatedly, overfitting can occur in situations where OLS technically ""works"", but the structure of what is being predicted relative to the overall dimensionality of the model is such that the model aligns too tightly with the points, and doesn't generalize or have predictive value.

One approach to mitigate these problems is regularization - adding information to the model, in order to make it more tractable. In particular, we will consider a common regularized model, ridge regression, which is based on [Tikhonov regularization](https://en.wikipedia.org/wiki/Tikhonov_regularization).","Again good to use this to emphasize robust != regularized, that both matter and are different tools to ""make your model better."" Also emphasize that we're just showing a few examples of tools of this sort, there are many other related techniques worth learning if people wish, but the general principles/interpretation should be similar.","use sklearn.linear_model.Ridge to fit and interpret Ridge Regression models,express and explain the intuition and interpretation of Ridge Regression",2,,"DS1: Ridge Regression with Aaron Gallant,Ridge Regression for DS2 w/ Ryan Allred",,,,"Advanced Regression,Practicing & Understanding Predictive Modeling",,,2,1,2,2,2,4,,1/16/2019 1:00pm,recvi49zNxD3PBRqT
Resume,,"Learning to craft an effective resume is a crucial step in the job search process. In this workshop, students will learn to prepare a resume that includes their Lambda experience and fulfills the requirements set by the Outcomes team.",,"create their own resume according to specific guidelines,demonstrate understanding and recall the top Resume Dos and Don’ts.",2,,Resumes,,,,Resume,,Career Readiness,2,1,0,2,0,1,,1/17/2019 3:38pm,recBqaLmm3lURjWIn
LinkedIn,,,,"""Use LinkedIn to find connections, search and apply for jobs, and follow up with contacts """,1,,LinkedIn,,,,LinkedIn,,Career Readiness,1,0,0,1,0,0,,1/17/2019 5:50pm,reci89WKNR7b7CNZL
Decision Trees,,,,"do feature engineering for decision trees,make visualizations of decision trees",2,,"DS1: Decision Trees with Ryan Herr,Decision Trees for DS2 w/ Ryan Herr,Decision Trees for DS3 w/ Ryan Herr,Decision Trees for DS4 w/ Ryan Herr",,,,"Tree Ensembles,Regression",,,2,1,0,0,0,1,,1/21/2019 3:10pm,rec4AMeOqHSKUHVFZ
Random Forests & Gradient Boosting,,,,"get Permutation Importances,get Out-Of-Bag scores",2,,"DS1: Random Forests with Ryan Herr,Random Forests for DS2 w/ Ryan Herr,DS3: Random Forests & Gradient Boosting with Ryan Herr",,,,"Tree Ensembles,Classification & Validation",,,2,1,0,0,0,1,,1/21/2019 3:10pm,recXMeOWLoDCl25b7
Gradient Boosting,,,,"enforce Monotonic Constraints,understand Bagging vs Boosting",2,,"DS1: Gradient Boosting with Ryan Herr,Gradient Boosting for DS2 w/ Ryan Herr",,,,Tree Ensembles,,,2,1,0,0,0,1,,1/21/2019 3:11pm,rec9WekxyYpSzl9Qr
Model interpretation,,,,"get Shapley Values,make Partial Dependence Plots",2,,"DS1: Model Interpretation with Ryan Herr,Model interpretation for DS2 w/ Ryan Herr,DS3: Model Interpretation with Ryan Herr",,,,"Tree Ensembles,Practicing & Understanding Predictive Modeling",,,2,1,0,0,0,1,,1/21/2019 3:11pm,recCV5spwv8Dijj0A
Recurrent Neural Networks and LSTM,,"Traditional neural networks are *feedforward* - that is, the connections between the neurons all ultimately lead in one direction, and do not form a cycle. Training requires backpropagation, but the actual predictions are all generated in a single direction.

Recurrent neural networks introduce a (directed) cycle - and this changes more than you may think. They can accept as input a sequence of potentially arbitrary length, and use their cyclic structure as a form of memory - this makes them particularly appropriate for series data such as natural language (written and spoken) as well as climate, finance, and many other topics.","Read ""The Unreasonable Effectiveness of Recurrent Neural Networks"": https://karpathy.github.io/2015/05/21/rnn-effectiveness/

It is accessible-ish and really established RNN and LSTM.","use an LSTM to generate text,train a basic LSTM with TensorFlow",2,,"DS1: Recurrent Neural Networks and LSTM with Aaron Gallant,Recurrent Neural Networks and LSTM for DS2 w/ Jon-Cody Sokoll",,,,Major Neural Network Architectures,,DS - Machine Learning,2,1,0,0,0,1,,1/21/2019 3:12pm,recFyZHPjJq946PTY
Select important features,,,,"Feature selection,Feature importances",2,,"DS1: Select Important Features with Ryan Herr,DS1: Feature Selection with Joanne Jordan,Select important features for DS2 w/ Ryan Herr",,,,,,,2,1,0,0,0,1,,1/23/2019 1:19pm,recoGwDYHDtsMwd6j
Hyperparameter optimization & Categorical encoding,,,,,0,,DS3: Hyperparameter optimization & Categorical encoding with Ryan Herr,,,,Practicing & Understanding Predictive Modeling,,,0,0,0,0,0,0,,1/23/2019 1:19pm,recCe1Ke6a1ft7WWT
Select models and parameters,,,,"Model selection,Hyperparameter optimization",2,,"DS1: Select Models and Parameters with Ryan Herr,Select models and parameters for DS2 w/ Ryan Herr",,,,,,,2,1,0,0,0,1,,1/23/2019 1:20pm,recG7o8bPZLgGyM48
Classification metrics & Imbalanced classes,,,,"ROC AUC,Confusion Matrix,Imbalanced classes",3,,"Validate classification problems for DS2 w/ Ryan Herr,DS3: Classification metrics & Imbalanced classes with Ryan Herr",,,,Classification & Validation,,,3,1,0,0,0,1,,1/23/2019 1:21pm,recb6v2tR7HYvOill
Baselines & Validation,,,,"Begin with baseline models,Cross Validation,""Train, Validate, Test""",3,,"DS1: Begin the Modeling Process with Ryan Herr,Begin the modeling process for DS2 w/ Ryan Herr,Baselines & Validation with Ryan Herr",,,,Classification & Validation,,,3,1,0,0,0,1,,1/23/2019 1:21pm,recCqX0yRjTLQ8w2N
Developing a UX Mentality,,"While UX is a field and a profession, it is also a mindset and worldview. It is a powerful framework that can guide our approach to problem-solving and product development.",,"understand their roles as UX educators,adopt a UX mentality driven by a user-first mindset and empathy",2,,"Developing a UX mentality for UX2 w/ Nick Basile,Developing a UX Mentality for UX3 w/ Nick Basile,Developing a UX Mentality for UX5 w/ Melissa Kark",,,Developing your UX mentality,UX Fundamentals,Active,UX Design Core,2,1,2,0,0,2,,1/24/2019 4:07pm,recHyd6Q00ATKpGYn
UX Build Week,,We will use this week to demonstrate skills we have learned.,,,0,,,,,,Design in Practice: Build Week,,UX Design Core [v1 deprecated],0,0,0,0,0,0,,1/28/2019 3:59pm,receFXA4AtpLuG0Hg
Prototyping in Practice,,"Prototyping gives you a way to test ideas quickly, allowing you to get to the best solution in a more timely manner.",,use prototyping tools to create a testable prototype of your refined concept,1,,,,,,Design in Practice: Solo Project Week,,"UX Design Core [v1 deprecated], UX Design Core",1,0,0,0,0,0,,1/28/2019 4:05pm,reccLOSFIBjsc5SYg
High-Fidelity UI Design in Practice,,"UI design is just a part of the UX process, but it's a skill that will add enormous value to your UX skillset.",,create a high-fidelity UI design for a mobile application,1,,,,,,Design in Practice: Solo Project Week,,"UX Design Core [v1 deprecated], UX Design Core",1,0,0,0,0,0,,1/28/2019 4:12pm,rec3pGX7lbKNyqaVx
User Testing in Practice,, Usability studies can be used at any stage of the product design process in which you have concepts you could show real users. Using actual users to test actual design concepts allows us to uncover our design blindspots early in the design cycle.,,incorporate findings from research into design,1,,,,,,Design in Practice: Solo Project Week,,"UX Design Core [v1 deprecated], UX Design Core",1,0,0,0,0,0,,1/28/2019 4:22pm,recVVdSgvlJjC09fQ
Unit Testing II,,In this module we will continue learning about unit tests.,,"use mocks and spies in unit tests,test asynchronous code",2,,,,Web Testing III Guided Project,Web Testing III Module Challenge,Testing,Active,Full Stack Web Development Core,2,1,2,2,2,4,,1/29/2019 3:01pm,recvyCwkHPZzXDcIn
Intro to Typography & Color Theory,,"In order to design user interfaces, you’ll need a detailed understanding of typography and color. This module will cover the basics of both and prepare you to bring your interfaces to life.",,"generate a color palette for a user interface,understand how colors are used by UX designers,explain the basics of color theory and how color influences emotions and accessibility,create a text hierarchy,identify the various elements of typography to choose a font,explain what typography is and why it matters",6,,"Intro to Typography & Color Theory for UX2 w/ Nick Basile ,Introduction to Typography and Color Theory for UX3 w/ Nick Basile,Intro to Typography & Color Theory for UX4 w/ Melissa Kark,Intro to Typography & Color Theory for UXPT1 w/ Ann-Marie Sebastian,Intro to Typography & Color Theory for UX5 w/ Melissa Kark",,,Practicing Typography & Color Theory,Intro to Design Theory,,UX Design Core,6,1,6,5,0,2,,1/30/2019 10:56am,rec90aFO8yn4EsMUh
Building a Portfolio Website,,"The goal of this lesson is to demonstrate understanding of why a polished portfolio of your work is necessary for the job search. This will be a first impression to hiring managers, and should appropriately highlight the skills you've developed and will bring to a job.",,demonstrate understanding of the importance of a polished portfolio website,1,,Building a Portfolio Website,,,,Building a Portfolio Website,,Career Readiness,1,0,0,1,0,0,,1/30/2019 11:23am,recRfYB0FOxpMZ8Rq
Java I - JDK and Java Classes,,,,"""craft multiple Java Classes which include comments, constructors, static and instance variables (fields), accessors, public and private methods and instantiate and use Objects of these classes."",""create and manipulate the base Java types which include Boolean, byte, char (including Strings), short, int, long, float, and double."",""using the standard Java Development Kit (JDK), enter source code, generate bytecode, prepare a shippable application (JAR file), execute that application and view the application’s output.""",3,,"Java I - JDK and Java Classes for JX1 w/ John Mitchell,JX JDK and Java Classes for WEB18 w/ John Mitchell,Java I JDK and Classes for Web19 w/ John Mitchell",,java-EmployeeAPP,Snack Bar,Java Fundamentals,,Java Backend Development,3,1,0,0,3,1,,1/30/2019 11:29am,recAGVTYNZyJbEFpu
Java II - Language Fundamentals,,,,"""craft and manipulate Arrays, and collections with initializers including ArrayList, HashSet, and HashMap."",""craft Java conditionals including if-then, if-then-else, and switch statements and branching statements including break, continue, and return."",""craft and use for loops, while loops, do while loops, and recursion""",3,,"Java II - IntelliJ and Language Fundamentals for JX1 w/ John Mitchell,Language Fundamentals for WEB18 w/ John Mitchell,Java II Language Fundamentals for WEB19 w/ John Mitchell",,java-Looping and Collections,WordCount,Java Fundamentals,,Java Backend Development,3,1,0,0,3,1,,1/30/2019 11:36am,recL7w1spe3C8pvcR
"Java III - Interfaces, Abstract Classes, Lambda Expression",,,,"use and implement Lambda Expressions.,use and implement abstract classes.,use and implement interfaces.",3,,"Java III - Interfaces and Closures for JX1 w/ John Mitchell,""Interfaces, Abstract Classes, Lambda Expression for WEB18 w/ John Mitchell"",""Java III Interfaces, Abstract Classes, Lambda Expression for WEB19 w/ John Mitchell""",,java-transportation,Animal Kingdom,Java Fundamentals,,Java Backend Development,3,1,0,0,3,1,,1/30/2019 11:37am,rec6Hrk77HupYeoN5
"Java IV - IntelliJ Deep Dive, Dependencies",,,,"""use and implement code annotations, dependencies, dependency injections, and Java libraries."",""use IntelliJ in the following areas: code entry, refactoring, debugging, application analysis, version control, IDE customization, production and distribution"",""download, commit and branch source control repositories.""",3,,"""Java IV - IntelliJ Deep Dive, Dependencies for JX1 w/ John Mitchell"",""IntelliJ Deep Dive, Dependencies for WEB18 w/ John Mitchell""",,java-messaging,java-athletes,Java Fundamentals,,Java Backend Development,3,1,0,0,3,1,,1/30/2019 11:37am,recRgxzhqKQqZ3BNV
"Intro to Maven, Spring, and Tomcat using REST Api",,,,"produce a complete application following the Maven Phases.,implement Beans throughout the Beans’ lifecycle controlling the Beans using annotations.,build a REST service using Spring Boot,""explain the uses of and differences between Maven, Spring, and Tomcat"",explain the fundamentals of REST API",5,,"""Intro to Maven, Spring, and Tomcat w/John Mitchell"",""Intro to Maven, Spring, and Tomcat using REST Api for WEB18 w/ John Mitchell"",JX Intro to Maven Spring Tomcat for WEB19 w/ John Mitchell",,java-webemployees,Java Country Search,Building Java Web APIs,,"Java Backend Development, Android Development Core",5,1,0,0,5,1,,1/30/2019 11:37am,recqtftA9E98qpbak
"Exception Handling, Java Front End",,,,"Implement exception handling using a variety of Java constructs,implement industry standard exception handling including user friendly exception messages,implement Java Front End for a Spring REST service",3,,"REST APIs for JX1 w/ John Mitchell,JX Java Exception Handling w/ John Mitchell,""Server-side routing, Exception Handling, Logging for WEB18 w/ John Mitchell"",JX Java Exceptions for WEB19 w/ John Mitchell",,java-restfulemps,Java REST Dogs Exceptions,Building Java Web APIs,,"Java Backend Development, Android Development Core",3,1,0,0,3,1,,1/30/2019 11:38am,rec5akoXByRdCDfK3
"Middleware, Logging, Message Queues",,,,"integrate a service with a message queue using RabbitMQ.,explain what middleware is and its different types.,troubleshoot running services using both system and programmatically generated logs",3,,"Middleware and Messsaging Queues for JX1 w/ John Mitchell,""Middleware, Logging, Message Queues using RabbitMQ for WEB18 w/ John Mitchell"",JX Java Logging and Message Queues for WEB19 w/ John Mitchell",,java-restfulemps,java-dogs-logging,Building Java Web APIs,,"Java Backend Development, Android Development Core",3,1,0,0,3,1,,1/30/2019 11:38am,rec3E1WYDyoiEF1e3
Deployment and Best Practices with Spring Cloud Config Server,,,,"perform calls to HTTP services using curl.,""deploy a full RESTful Web Services application with a JAR and WAR using Maven, Spring including Spring Boot, and Tomcat"",configure an application using Spring Cloud Config Server.",3,,"JX - Best Practices w/ John Mitchell,Deployment and Good Practices for Web17 ,Deployment and Best Practices with Spring Cloud Config Server for WEB18 w/ John Mitchell,JX Java Deployment and Best Practices for WEB19 w/ John Mitchell",,,java-dogs-deploy,Building Java Web APIs,,"Java Backend Development, Android Development Core",3,1,0,0,0,1,,1/30/2019 11:38am,rec7pCiBPzI4DkAJT
Java RDBMS I RDBMS and SQL Basics,,,,"""open an existing database, or create a new one, while adding tables to a PostgreSQL database"",query data from multiple tables.,query data from a single table,explain what a Relational Database is and its core components.,explain what SQL is and its advantages",5,,"RDBMS and SQL Basics for JX1 w/John Mitchell,JX RDBMS and SQL Basics w/ John Mitchell,Java RDBMS I and SQL Basics for WEB18 w/ John Mitchell",,java-rdbms,Java SQL,"""Java Backend Data Persistence with SQL, Hibernate""",,"Java Backend Development, Android Development Core",5,1,0,0,5,1,,1/30/2019 11:38am,recyJ663TrxVgpqY9
Java RDBMS II Inserting and Modifying Data using CRUD Operations,,,,"dynamically change levels of logging,perform CRUD operations on an RDBMS using JPA and Hibernate.,perform CRUD operations on an RDBMS using SQL.,""explain CRUD operations, HTTP methods, and how they are related""",4,,"JX1 - Inserting and Modifying Data - John Mitchell,Java RDBMS II Inserting and Modifying Data using CRUD Operations for WEB18 w/ John Mitchell",,java-restaurants,Java SQL Orders,"""Java Backend Data Persistence with SQL, Hibernate""",,"Java Backend Development, Android Development Core",4,1,0,0,0,1,,1/30/2019 11:38am,rec3THcdjv8BumGCt
"Java RDBMS III Querying, Migrations, and Seeding",,,,"use flyway migrations to build a schema,use JPA and Hibernate to perform advanced query operations on a RDBMS.,implement a data seeding class using JPA and Hibernate",3,,"SQLite with Restful Java App for JX w/ John Mitchell,""Java RDBMS III Querying, Migrations, and Seeding for WEB18 w/ John Mitchell""",,java-school,java-zoos,"""Java Backend Data Persistence with SQL, Hibernate""",,"Java Backend Development, Android Development Core",3,1,0,0,0,1,,1/30/2019 11:38am,recyVA2T9TSq6yetQ
Java RDBMS IV Data Modeling and Authentication,,,,"remote shutdown an application using an actuator.,implement Spring Security and OAuth2. to provide authentication for a project.,explain data normalization and normal forms.,add relationships between tables.",4,,"Swagger for JX w/ John Mitchell,Java RDBMS IV Data Modeling and Authentication for WEB18 w/ John Mitchell",,java-oauth2,java-savezoos,"""Java Backend Data Persistence with SQL, Hibernate""",,"Java Backend Development, Android Development Core",4,1,0,0,0,1,,1/30/2019 11:39am,rec2oQCFWOVShtxIx
Automated Testing using TDD,,,,"""use JUnit to write, run, and interpret the output of unit tests."",explain what automated testing is and why it is important.,""follow the TDD model using JUnit, RestAssured, mocks and stubs.""",3,,"JX Automated Testing and TDD w/ John Mitchell,Automated Testing using TDD for WEB18 w/ John Mitchell",,Restaurant API for TDD,java-schooltest,Java Testing and Continuous Integration,,"Java Backend Development, Android Development Core",3,1,0,0,0,1,,1/30/2019 11:39am,recDboXln5wm4aKJt
Paging and Sorting with Detailed Swagger Documentation,,,,"document a REST service using Swagger,integrate an application with the in-memory cache Redis,implement paging and sorting to display chunks of large dataset.",3,,"""Paging, Sorting, Redis with Detailed Swagger Documentation for WEB18 w/ John Mitchell""",,java-pages-swagger,java-schoolpagesswagger,Java Testing and Continuous Integration,,"Java Backend Development, Android Development Core",3,1,0,0,0,1,,1/30/2019 11:39am,rectsFbVqprkP0Zor
CI I  - Introduction and Spring Cloud Config Server,,,,"configure an application using Spring Cloud Config Server.,""articulate the benefits of, the principles behind, and the processes of CI.""",2,,,,,,,,,2,1,0,0,0,1,,1/30/2019 11:39am,rec706LelfTZsfQSH
Continuous Integration with Jenkins,,,,"implement CI using Jenkins.,create builds and pipelines using Jenkins.,Install and config Jenkins for CI",3,,Continuous Integration with Jenkins for WEB18 w/ John Mitchell,,java-deploy,java-schooldeploy,Java Testing and Continuous Integration,,"Java Backend Development, Android Development Core",3,1,0,0,0,1,,1/30/2019 11:40am,recoZtqrclQj3rHrw
Intro to Agile and JIRA,,,,"estimate story complexity using story points.,create and update stories in Jira.,explain the Scrum Agile Methodology including the 5 basic steps.",3,,JX Java Secured Deployment and Production w/ John Mitchell,,java-deploy,java-schoolsecurity,Java Testing and Continuous Integration,,"Java Backend Development, Android Development Core",3,1,0,0,0,1,,1/30/2019 11:40am,rec6vZMp6pDOO9pOd
Documenting APIs with Swagger,,,,"document their project’s APIs using Swagger integrated with Spring.,document a REST service using Swagger.",2,,Swagger for JX w/ John Mitchell,,,,,,,2,1,0,0,0,1,,1/30/2019 11:40am,recyuNqUxZsKW7E9m
Redux Middleware / Authentication,,We will continue building React/Redux apps that work with API's. ,,"implement protected routes using an authentication token and Redirect,handle authentication with tokens in a React app,build custom Redux Middleware for a Redux Store",3,,"Async Redux - Redux Thunk II for WEB16 w/ Dustin Myers,Async Redux - Redux Thunk II for WEBPT3 w/ Dan Frehner,Redux Middleware / Authentication for WEB17 w/ Dustin Myers,Redux Middleware / Authentication for WEB18 w/ Dustin Myers,Redux Middleware/Authentication for Webpt4 w/Brian Kirkby,Redux Middleware / Authentication for Web 19 w/ Dustin Myers",,,,Redux,,Full Stack Web Development Core,3,1,3,3,1,3,,1/30/2019 10:59pm,recQlbCZf9tOVgiXC
Intro to Visual Hierarchy,,"The foundation of any interface is its visual hierarchy. In the module, we’ll learn what a visual hierarchy is, why it matters, and how to design it in an interface.",,explain what a visual hierarchy is and why it matters,1,,"Intro to Visual Hierarchy for UX2 w/ Nick Basile ,Intro to Visual Hierarchy for UX3 w/ Nick Basile,Intro to Visual Hierarchy for UX4 w/ Melissa Kark,Intro to Visual Hierarchy for UXPT1 w/ Ann-Marie Sebastian,Intro to Visual Hierarchy for UX5 w/ Melissa Kark",,,Practicing Visual Hierarchy,Intro to Design Theory,Active,UX Design Core,1,0,1,1,0,0,,1/31/2019 12:52pm,recEq0ic0XbZQnqv2
Intermediate Android Development Project Week Kickoff,,"This week you will be building an application of your own choosing. You are to treat this week as if you are building this application at a company and the instructor is your client. The project managers (including section lead) will be your main support throughout the week.


The main objective of this week is to develop the MVP features of your application. There are a few requirements that you should do before starting this project:

- You must present your idea to your instructor and have them approve it. This idea can be anything you want, taking into account you will have from Monday through half of Thursday to work on it. Try to keep it feasible given the length of time you have!
- A solid project plan/research. More details on this below.


## Project Research and Planning

A vital part of any project is planning and research, and writing an application is no exception. This is especially true of a project that you have a deadline for, such as this one and any project you work on at your future job. 

Failure to do proper research can result in a significantly shorter amount of time spent working on your application. You may not be a much of a ""planner"", however being able to research and plan out any project including this one is extremely beneficial. We've been able to see hundreds of students build projects with similar time constraints to this one; the end result between a well-planned project and a poorly or not planned project is often staggering.

Once you know what kind of project you want to write, take time to do a bit of research. In order to facilitate this process, use the project planner [found here](https://user-images.githubusercontent.com/16965587/51573635-6c5cda00-1e67-11e9-93c8-66e73b034456.png). Please watch the video on how to effectively use this project planner as well.

In the past, students have wanted to use APIs that they had to email the maintainer for an API key instead of getting one immediately upon signing up to use the API. When researching APIs to use and come across one like this be wary. If you email them even over the weekend before this project week, there is no guarantee that they will respond. Consider finding another API that has similar information/functionality before resorting to using one like that.

This principle applies to anything you aren't absolutely sure about. Doing the research **before** you even make an Android Studio project and realize that something won't work the way you thought it would is going to save you time and frustration.

Project planning will provide you with a good roadmap to know how long you have to work on each feature and have a **solid** idea of what needs to be done before diving head-first into the project.",,,0,Project Planning,,,,,Android Unit 2 Project Week: Architecture and Design,,Android Development Core,0,0,0,0,0,0,,1/31/2019 1:05pm,recoKQQmtwQfNbMKI
Designing for the Human Mind,,"While it’s important that we always understand our users and the context we’re designing for, at the end of the day we’re all still human beings. By studying psychology and neuroscience, we can learn how our minds work in order to leverage that understanding to design better solutions for everyone.",,"explain what the Gestalt principles are and how to use them when designing,explain how the limits of our attention impact our designs,explain how short-term and long-term memory’s limitations impact our designs",3,,Designing for the Human Mind for UX4 w/ Melissa Kark,,,Analyze how other websites design for the human mind,Intro to Design Theory,Active,UX Design Core,3,1,3,1,1,2,,2/1/2019 9:50am,recBVF6yoWmh1uYZR
Tell Your Story: How to Create an Effective Elevator Pitch,,,,,0,,Tell Your Story: How to Create an Effective Elevator Pitch with Jeff Henriod,,,,Tell Your Story: How to Create an Effective Elevator Pitch,,Career Readiness,0,0,0,0,0,0,,2/2/2019 10:10am,recjOlkir00OYI1HB
"Python Modules, Packages, and Environments",,"Python Notebooks are a glorified REPL - read-eval-print loop. What if you want code that should live on and be reused in a variety of circumstances? Enter modules, packages, and environments!","This isn't a stated learning objective, but the *real* skill/insight for students to get is *distinguishing* between modules (in Python, basically a file), packages (organized directory of modules), and environments (dedicated bundle of Python packages for your code to depend on).

Also note that this will be the first sprint where students really *need* to deal with local git. Refer them to modules from the web program to get setup as needed, and Windows users should use WSL or https://gitforwindows.org/","create their own Python package and install dependencies in a dedicated environment,understand and follow Python namespaces and imports",2,,"""DS1: Python Modules, Packages, and Environments with Aaron Gallant"",""Python Modules, Packages, and Environments for DS2 w/ Aaron Gallant""",,,,Software Engineering and Reproducible Research,,DS - Data Engineering,2,1,2,2,0,3,,2/3/2019 6:58pm,recwEPR24pu5LCnA5
"OOP, Code Style and Reviews",,"When you're a software engineer, you're not just writing code for your own immediate needs - you're building a system that others will work on, from coworkers and open-source collaborators to future-you. To do this, we must write code based on shared principles of design and style.

In this module we will learn the basic principles of object-oriented programming, the most common paradigm for the design and building of large codebases. We will also learn about standard code style and tooling, and the code review process.","Use appropriate static code checking tools (Flake8, autopep8, yapf), integrated with an editor and git workflow, to enforce consistent pep8 styling on Python code.","""write stylistic (PEP 8) Python code, and give and receive a basic code review"",""create a basic Python class, with a constructor, methods, and fields""",2,,"""DS1: OOP, Code Style and Reviews with Aaron Gallant"",""OOP, Code Style and Reviews for DS2 w/ Aaron Gallant""",,,,Software Engineering and Reproducible Research,,DS - Data Engineering,2,1,2,2,0,3,,2/3/2019 6:59pm,recqeF16aJfb1UTWF
"Software Testing, Documentation, and Licensing",,"You've written your code using OOP, it runs and works, it's in a package, and you can even run it in a reproducible container. You're done, right?

Nope! To effectively share your code in a way that will be lastingly useful, you also need to *test* and *document*. These are not just ""overhead"" tasks - they are a core part of software engineering, and code that lacks these properties is essentially impossible to maintain or build on in the long term.

Last but not least, you need to choose an appropriate license for your code, and make sure you understand the licenses of your dependencies and the ecosystem in general. You don't need a law degree, but there are big differences between licenses you should understand, even ones that all count as ""open source.""","There's lots of testing tools out there - pytest is probably the most used in Python, but we'll use unittest because it's part of the standard library: https://docs.python.org/3.7/library/unittest.html

Also, the material focuses on teaching unit tests since they're the most tractable to get started with, but it's worth noting that obsessive coverage of a codebase with unit tests is generally less effective than fewer well-written integration and end-to-end (larger) tests. Unit tests in real codebases require lots of mocking and make lots of assumptions, and may not really test interactions/corner cases as much as integration tests.

Also, emphasize that unit tests are sometimes valuable not for the tests themselves but for them encouraging you to refactor your code into small units in the first place.","recognize major open-source licenses and their significance for personal and professional use,""read and write quality comments, Pydoc, and READMEs"",""understand purpose of and approaches towards software testing, and be able to write basic unit tests""",3,,"""DS1: Software Testing, Documentation, and Licensing with Aaron Gallant"",""Software Testing, Documentation, and Licensing for DS2 w/ Aaron Gallant"",Sprint Q & A for DS2 w/ Aaron Gallant",,,,Software Engineering and Reproducible Research,,DS - Data Engineering,3,1,3,3,0,3,,2/3/2019 7:00pm,recq9eVVCzZpgeH58
Introduction to SQL,,"Structured Query Language - the Lingua Franca of Data. Known (to varying degrees) by software engineers, data scientists, DevOps, and MBAs, SQL is the beginning (and sometimes entirety) of many data pipelines.

Why is it universal? One reason is it is relatively simple - an declarative language, demanding what it wants by mere description, not worrying about the details of ""how.""

SQL is a *standard* - all SQL distributions support a common core of functionality, and most add their own features or special syntax on top of it. For our purposes we will focus on PostgreSQL, but most of what we learn will be general.","Besides introducing, emphasize that SQL is about *practice* - if a student wants to go for a job that requires SQL, they should spend time with the various online SQL exercise sites and just sharpen their skills.

Useful image links:
https://2s7gjr373w3x22jf92z99mgm5w-wpengine.netdna-ssl.com/wp-content/uploads/2016/03/data-warehouse.png
https://www.w3resource.com/w3r_images/soccer-database.png","""understand the purpose of SQL join, and perform joins to access data from multiple tables"",""write basic SQL queries to get specific subsets of data from a database and answer basic """"business questions""""""",2,,"DS1: Introduction to SQL with Aaron Gallant,Introduction to SQL for DS2 w/ Aaron Gallant",,,,SQL and Databases,,DS - Data Engineering,2,1,2,2,0,3,,2/3/2019 7:01pm,recmwiPQG5zueKFCG
NoSQL and Document-oriented databases,,Need to deal with Big Data? You may need tools beyond standard SQL approaches. Enter NoSQL and document-oriented databases!,"Emphasize that *starting with SQL* is still a good idea - most people don't have as big data as they think.

Fun/useful images:
http://www.meetthebands.com/wp-content/uploads/2014/04/big-data.jpg
https://blogthinkbig.com/wp-content/uploads/2015/12/City-Big-Data.jpg
https://www.kovacorp.com/wp-content/uploads/2016/08/big-data.jpg

Basically, ways to start the lecture that are lighthearted and make a little bit of fun of the hype. Note the first one really is a band, and nothing really to do with big data. You can also just search for ""big data"" with your choice of image search live and find current silly things.","deploy and use a simple MongoDB instance,identify appropriate use cases for document-oriented databases",2,,"DS1: NoSQL and Document-oriented databases with Aaron Gallant,NoSQL and Document-oriented databases for DS2 w/ Aaron Gallant",,,,SQL and Databases,,DS - Data Engineering,2,1,2,2,0,3,,2/3/2019 7:02pm,rec3JRFsRH2yeALwS
Web Application Deployment,,"You've put together a nice application - time to get it out there! A GitHub repo is great, but a deployed application is more effective in your portfolio as *everyone* in the hiring process (not just technical people) can check it out.","Deploying will fairly reliably run into edge cases and issues for some students - use PMs as first line and don't debug deep in lecture, but do push people to all get to a baseline of deployed successfully.

Fun lecture kickoff image - https://www.abidibo.net/media/blog/main_img/deploy-button.jpg","securely connect a deployed web application to a relational database back-end,deploy a basic (single-server) web application to common cloud services",2,,DS1: Web Application Deployment with Aaron Gallant,,,,Productization and Cloud,,DS - Data Engineering,2,1,2,2,2,4,,2/3/2019 7:03pm,recpPYQdaOmZdBSYq
ACID and Database Scalability Tradeoffs,,"SQL or NoSQL? Why not both!

Picking the right database for a situation can be a tricky problem, with many tradeoffs. SQL gives us ACID (Atomicity Consistency Isolation Durability) guarantees and powerful analytical queries, and NoSQL gives us huge scale and usually ""good enough"" guarantees. But innovation is happening all the time, with NewSQL proposing to give us the best of both worlds.","Again - emphasize that good old single server SQL (or sharded if needed, PostgreSQL is pretty good at that) really is a reasonable place to start in most situations.


Playground for doing practice queries after discussion winds down: https://data.stackexchange.com/stackoverflow/query/new

Fun/useful images:
https://image.slidesharecdn.com/newsqldatabaseoverviewv1-0201211090-130226022813-phpapp01/95/newsql-database-overview-17-638.jpg?cb=1361951003
http://www.glennklockwood.com/data-intensive/hadoop/mapreduce-workflow.png","make informed decisions about alternative databases,understand and explain the advantages and disadvantages of traditional SQL databases",2,,"DS1: ACID and Database Scalability Tradeoffs with Aaron Gallant,ACID and Database Scalability Tradeoffs for DS2 w/ Aaron Gallant",,,,SQL and Databases,,DS - Data Engineering,2,1,2,2,0,3,,2/3/2019 7:05pm,rec9c9nW20Sn6TBAO
Consuming Data from an API,,"An easy but powerful way to make a web application interesting is to connect it to a web API - a service (that you may need to sign up for) that accepts requests and returns results, just like the servers you can build with Flask. What makes it interesting is the results they return can have all sorts of tasty data, from weather to tweets to pictures of space to information about pokemon.","The two APIs being built on in the weekly project (Tweetometer):
https://dev.twitter.com/

https://www.basilica.ai/ (free tier may be enough, but they're giving us 4 months credit).

1. Go to https://www.basilica.ai/accounts/register or go to basilica.ai and click on the ""Register"" button
2. Enter your email and a password with the referral code ""LAMBDA"". This referral code will get 4 months free of our ""Standard"" plan, valued at $400, with no credit card needed.
3. When you register, you will be automatically be redirected to the ""API Keys"" page.","connect to Basilica API and retrieve and manipulate embeddings for given entities,connect to the Twitter API and query for tweets by various parameters",2,,DS1: Consuming Data from an API with Aaron Gallant,,,,Productization and Cloud,,DS - Data Engineering,2,1,2,2,2,4,,2/3/2019 7:05pm,recVFIbE3mpjpVGrj
Adding Data Science to a Web Application,,"You have your application, you have your data - now it's time for science! Let's use what we've learned throughout the program to add some useful intelligent functionality to our web application.","Have a simple baseline (e.g. clustering embeddings or similar), but make it clear that there are stretch goals galore here for people who want to try any DS tool/model.","""run a more complicated offline model, and serialize the results for online use"",run and report simple online analysis of data from the user or an API",2,,DS1: Adding Data Science to a Web Application with Aaron Gallant,,,,Productization and Cloud,,DS - Data Engineering,2,1,2,2,2,4,,2/3/2019 7:06pm,recZOXl2H7Bbd1LMK
DS Project 2 - Predictive modeling challenge - Day 1,,,,,0,,"""DS1: Predictive Modeling Project with Ryan Herr, Day 1"",DS Project 2 - Predictive modeling challenge - Day 1 for DS2 w/ Ryan Herr",,,,DS Project 2 - Predictive modeling challenge,,,0,0,0,0,0,0,,2/4/2019 3:14am,recsvX65XKwaTXipe
DS Project 2 - Predictive modeling challenge - Day 2,,,,,0,,DS Project 2 - Predictive modeling challenge - Day 2  for DS2 w/ Ryan Herr,,,,DS Project 2 - Predictive modeling challenge,,,0,0,0,0,0,0,,2/4/2019 3:14am,recVR0TqgFGffrQia
DS Project 2 - Predictive modeling challenge - Day 3,,,,,0,,DS Project 2 - Predictive modeling challenge - Day 3 for DS2 w/ Darwin Johnson,,,,DS Project 2 - Predictive modeling challenge,,,0,0,0,0,0,0,,2/4/2019 3:14am,rectYWq284NLAn035
DS Project 2 - Predictive modeling challenge - Day 4,,,,,0,,DS Project 2 - Predictive modeling challenge - Day 4 for DS2 w/ Ryan Herr,,,,DS Project 2 - Predictive modeling challenge,,,0,0,0,0,0,0,,2/4/2019 3:14am,recKjy29CkdKuF7Qp
DS Project 2 - Predictive modeling challenge - Day 5,,,,,0,,DS Project 2 - Predictive modeling challenge - Day 5 for DS2 w/ Ryan Herr,,,,,,,0,0,0,0,0,0,,2/4/2019 3:14am,recYvpUU2F8anG5L9
Intro to Drawing,,"As designers, we need to be able to draw in order to design anything! But, this doesn’t mean that we have to become artistic savants overnight. Instead, with a basic understanding of simple principles, we can draw anything we need for UI design.",,"identify when to use paper and when to use a digital tool,draw elements using perspective and depth,use the concept of “simple shapes make complex shapes” to draw",3,,"Intro to Drawing for UX2 w/ Nick Basile ,Intro to Drawing for UX3 w/ Nick Basile,Intro to Drawing for UX4 w/ Melissa Kark,Intro to Drawing for UXPT1 w/ Ann-Marie Sebastian,Intro to Drawing for UX5 w/ Melissa Kark",,,Practicing Drawing,Intro to Design Theory,,UX Design Core,3,1,3,1,0,2,,2/5/2019 12:36pm,recOblJaoV1Y1qIET
"Apache Spark, day 2",,,,"apply map and filter operations to a Spark RDD,""use Spark SQL to read data, do transformations, run actions, explain execution plans, and show results""",2,,"""DS1: Apache Spark, Day 2 with Ryan Herr"",""Apache Spark, day  for DS2 w/ Ryan Herr""",,,,Big Data: AWS & Spark,,DS - Data Engineering,2,1,0,0,0,1,,2/6/2019 1:52pm,recbH4w2vPTpDMZlk
Just enough Scala for Spark,,,,"""explain the arguments for """"scale out"""" vs """"scale up"""""",describe how Spark in Scala improves upon MapReduce in Java,learn basic syntax of the Scala programming language",3,,"DS1: Just enough Scala for Spark with Ryan Herr,Just enough Scala for Spark for DS2 w/ Ryan Herr",,,,Big Data: AWS & Spark,,DS - Data Engineering,3,1,0,0,0,1,,2/6/2019 1:53pm,recSG2hyz8KCRSKL1
AWS SageMaker,,,,"use Dask,use Numba,install Python libraries for AWS SageMaker,start and stop AWS SageMaker Notebook instances",4,,"DS1: AWS SageMaker with Ryan Herr,AWS SageMaker for DS2 w/ Ryan Herr",,,,Big Data: AWS & Spark,,DS - Data Engineering,4,1,0,0,0,1,,2/6/2019 1:53pm,recGxPyMvtGASq6mY
Intro to Sketch,,"At the moment, Sketch is the leading user interface design tool. We’ll be learning how to use it to design user interfaces.",,"""use Sketch to manage, group, duplicate, and align layers"",""use Sketch to make basic shapes, add and manipulate text, and work with colors"",explain what Sketch is and why we use it as a design tool",3,,"Intro to Sketch for UX2 w/ Nick Basile ,Intro to Sketch for UX3 w/ Nick Basile,Intro to Sketch for UX4 w/ Melissa Kark,Intro to Sketch for UXPT1 w/ Ann-Marie Sebastian",,,Intro to Sketch Practice,UI Fundamentals,Active,UX Design Core,3,1,3,0,0,2,,2/7/2019 10:11am,rec46TDm0PHrXyyDl
Intro to InVision & Craft,,InVision is a powerful prototyping platform that we can use with Sketch to simulate product experiences.,,"use InVision’s Craft plugin to save time,""manually upload screens to InVision, add hot spots, and share the prototype"",explain what InVision is and why we use it as a design tool,""use Sketch to create artboards, shadows, rounded corners, and manipulate lines with vector editing""",4,,"Intro to InVision & Craft for UX2 w/ Nick Basile ,Intro to InVision & Craft for UX3 w/ Nick Basile,Intro to InVision & Craft for UX4 w/ Melissa Kark,Intro to InVision & Craft for UXPT1 w/ Ann-Marie Sebastian",,,InVision & Craft Practice,UI Fundamentals,Active,UX Design Core,4,1,4,0,0,2,,2/7/2019 10:11am,recauCTaMliyqCIh7
Designing User Interfaces,,"As a design specialization, UI design requires a specific set of knowledge and skills to master.",,"use InVision’s comments and history features,""use Sketch to manipulate opacity, create a mask, and use boolean operations"",design a user interface",3,,"Designing User Interfaces for UX2 w/ Nick Basile ,Designing User Interfaces for UX3 w/ Nick Basile,Designing User Interfaces for UX4 w/ Melissa Kark",,,UI Design Practice,UI Fundamentals,Active,UX Design Core,3,1,3,0,0,2,,2/7/2019 10:12am,reckwsDlBOI1ikC7P
Responsive Design,,"One of the fundamental details that separate UX/UI designers from other designers is that our medium is constantly shifting. Graphic designers can focus on the fixed size of a poster; print designers can be sure that paper sizes aren’t changing tomorrow; architects know that the building foundation won’t change, but our designs need to work across an incredible array of shapes and sizes - from tiny iWatches all the way up to digital billboards.

Fortunately, over the last 10 years or so, UX/UI designers have worked to solve this problem and have found ways to design for the infinite variety of screens. In this lesson, we’ll dive into this exciting world and learn how to embrace the shifting screens of our digital medium.",,"share designs with developers using InVision inspect,""use Sketch to create text styles, symbols, and libraries"",design using a “mobile-first” approach,design “responsively”",4,,"Practicing UI Design for UX2 w/ Nick Basile ,Responsive Design for UX3 w/ Nick Basile,Responsive Design for UX4 w/ Melissa Kark",,,Responsive Design Practice,UI Fundamentals,Active,UX Design Core,4,1,4,0,0,2,,2/7/2019 10:12am,recdKDMnJAAmtiJWq
Intro to the Product Design Cycle,,The Product Design Cycle is a solid conceptual framework for UX that you can apply in a variety of environments. Understanding what it is and how to use it will set you up for long-term UX success.,,"understand how UX designers use the Product Design Cycle’s techniques as building blocks towards a final product,explain what the Product Design Cycle is and why it is useful",2,,Intro to the Product Design Cycle for UX2 w/ Nick Basile,,,Intro to the Product Design Cycle Practice,UX Processes,Active,,2,1,2,0,0,2,,2/7/2019 10:13am,reciRPnKfLCiywr19
Intro to Lean UX,,Lean UX techniques help us deliver a great user experience in Agile or fast-paced environments. Understanding when and how to use Lean UX will allow you to work in a variety of settings.,,"explain the differences between Lean UX and the Product Design Cycle and when they overlap,explain what Lean UX is and why it is useful",2,,Intro to Lean UX for UX2 w/ Nick Basile,,,Intro to Lean UX Practice,UX Processes,Active,,2,1,2,0,0,2,,2/7/2019 10:14am,rechuYkwsU78T40Q7
Project and Design Briefs,,"Oftentimes the hardest part about working in a team is that it’s so easy for everyone to be misaligned. As Leah Buley explains in *The User Experience Team of One*,  “In team discussions, it’s possible for people to express their point of view and think they’re all saying the same thing, but actually have very different ideas of what they expect.”

Fortunately, we can use project and design briefs, in various contexts, to ensure our teams are moving in the same direction.",,"explain what a design brief is and create one,explain what a project brief is and create one",2,,Project and Design Briefs for UX2 w/ Nick Basile ,,,Project and Design Brief Practice,UX Processes,Active,,2,1,2,2,0,3,,2/7/2019 10:14am,recqFO6GxT9JRBL9i
UX Project Management,,"Organizing our day-to-day work activities requires a tremendous amount of thinking and planning. Fortunately, the design field has borrowed many of the most cutting-edge project management techniques from the software industry. In this module, we’ll take a look at how teams manage their work using Agile, Kanban, and Scrum.",,"explain what the Scrum approach is and how to use it,explain what the Kanban approach is and how to use it,explain what Agile project management is and how to use it",3,,UX Project Management,,,UX Project Management Practice,UX Processes,Active,,3,1,3,3,0,3,,2/7/2019 10:14am,rectkwJytmGCNbSRT
Discovery,,,,,0,,,,,,,Active,,0,0,0,0,0,0,,2/7/2019 10:41am,recAZfzgL6tm1HNW7
Lo-Fi Ideation/Rapid Iteration,,"There are several tools that designers can use to ideate when presented with everyday design tasks systematically. Ideation, in conjunction with rapid iteration, provides designers with the steps necessary to represent foundational UX work visually.",,"Sketch a user interface,Articulate why lo-fi ideation is a key component of the UX design process",2,,"Lo-Fi Ideation/Rapid Iteration,Lo-Fi Ideation/Rapid Iteration for UX3 w/ Glenn Ference",,,Lo-Fidelity User Interface Sketching,Ideation and Collaboration,,UX Design Core,2,1,2,0,0,2,,2/7/2019 10:44am,recEefW3IwBHnIULj
,,,,,0,,,,,,,,,0,0,0,0,0,0,,2/7/2019 10:44am,rec6m4P8UzUkcgDkx
Labs Debrief,,,,,0,,,,,,Cross-Functional Collaboration,Active,,0,0,0,0,0,0,,2/7/2019 10:47am,recvx8hkhWXQbUbwB
Design Sprints,,,,,0,,,,,,Cross-Functional Collaboration,Active,,0,0,0,0,0,0,,2/7/2019 10:47am,reciEjNlxuqZ0Hb3q
Design Handoff,,,,,0,,,,,,Cross-Functional Collaboration,Active,,0,0,0,0,0,0,,2/7/2019 10:47am,rec5s0dKrHwkCIi1x
How Does it Work in IRL?,,,,,0,,,,,,Cross-Functional Collaboration,Active,,0,0,0,0,0,0,,2/7/2019 10:48am,recnz4MENqyrLpSqA
"Analytics, HotJar, etc",,,,Unnamed record,1,,,,,,Quantitative User Research,Active,,1,0,0,0,0,0,,2/7/2019 10:48am,recJUyjz21TlJdxC1
Surveys,,,,,0,,,,,,Quantitative User Research,Active,,0,0,0,0,0,0,,2/7/2019 10:49am,rec7yx8JL0b9c8fEF
Steve Krug,,,,,0,,,,,,Quantitative User Research,Active,,0,0,0,0,0,0,,2/7/2019 10:49am,rec9UNQ5petZ9t1N6
Usability Heuristics,,,,,0,,,,,,Designing for the Human Mind,Active,,0,0,0,0,0,0,,2/7/2019 10:50am,recNoG3xU3TXhmbYi
Conducting a Heuristic Analysis,,,,,0,,,,,,Designing for the Human Mind,Active,,0,0,0,0,0,0,,2/7/2019 10:50am,recwjTXZwtV9lxvMW
Psychology of Persuasion,,,,,0,,,,,,Designing for the Human Mind,,,0,0,0,0,0,0,,2/7/2019 10:50am,recFPQxcf0Ed43xXR
Gamification,,,,,0,,,,,,Designing for the Human Mind,Active,,0,0,0,0,0,0,,2/7/2019 10:51am,recQqZXadem3xPgrP
Business Strategy,,,,,0,,,,,,Product and Business Considerations,Active,,0,0,0,0,0,0,,2/7/2019 10:51am,recp3cDCEK8miVeB6
Product Planning,,,,,0,,,,,,Product and Business Considerations,Active,,0,0,0,0,0,0,,2/7/2019 10:51am,recgEJKZz50rB6gtD
Lean/Product Validation,,,,,0,,,,,,Product and Business Considerations,Active,,0,0,0,0,0,0,,2/7/2019 10:52am,rec1uT1tLjPA0ZZPa
"Accounting, Marketing, Financial Modeling, ROI",,,,,0,,,,,,Product and Business Considerations,Active,,0,0,0,0,0,0,,2/7/2019 10:52am,recHR97EsbbKQ8B7C
Bait the Hook to Suit the Fish,,"Learn how to tailor your resume, cover letters, elevator pitches, and interview responses to the various types of people you will interact with throughout your job search process.",,"deliver a tailored elevator pitch to various types of people.,demonstrate understanding of the importance in adopting an employer's perspective during the job search process.",2,,Bait the Hook to Suit the Fish,,,,Bait the Hook to Suit the Fish,,Career Readiness,2,1,2,2,0,3,,2/18/2019 4:43pm,recI4ErlEUwmtVqC6
How to Use Social Media in Tech,,,,Social Media Check,1,,Social Media: The Lambda Way,,,,How to Use Social Media in Tech,,Career Readiness,1,0,0,0,0,0,,3/4/2019 11:51am,recpFvhJiHWoUxh36
Cold Outreach,,,,"send a cold outreach message via LinkedIn or email to someone they wish to connect with,identify opportunities for in-person networking that are of interest to them",2,Cold Outreach,,,,,Cold Outreach and In-person Networking,,Career Readiness,2,1,1,2,2,1,,3/4/2019 4:49pm,rechdcfTGbOVmefUO
Sourcing Opportunities,,,,"source job opportunities that apply to them in the tech industry,Recognize different types of recruiters and now how to best work with them,identify common scams and other things to watch out for in your search",3,,Sourcing Opportunties,,,,Sourcing Opportunities,,Career Readiness,3,1,1,1,1,1,,3/4/2019 4:58pm,recAsEkbGVdzxdtpm
Kotlin Part 1,,Introduction to programming principles in Kotlin.,,"use Kotlin constants,create Kotlin classes,use conditionals in Kotlin,use Kotlin String interpolation,create Kotlin variables,write Kotlin functions",6,,Kotlin Part 1 Guided Project for AND1 w/Chance Payne,,,Kotlin Snackbar,Kotlin,,Android Development Core,6,1,0,0,0,1,,3/6/2019 11:36am,recuUQgvinFC8mASo
Kotlin Part 2,,More advanced Kotlin topics,,"use Kotlin Extension Functions,work with Pairs and Maps in Kotlin,use special types of classes in Kotlin,""work with Interfaces, Abstract Classes and Inherited Classes in Kotlin"",use Loops in Kotlin,work with Lists in Kotlin",6,,"Kotlin Part 2 Guided Project for AND1 w/Chance Payne,Kotlin Part 2 for AND1 w/Chance Payne,Kotlin Part 2 for AND2 w/Josh Halvorson",,,Kotlin Animal Kingdom,Kotlin,,Android Development Core,6,1,0,0,0,1,,3/6/2019 11:38am,rectsdNCtgKSgmVIj
Kotlin in Android,,,,"encode and decode JSON,set up a class for Kotlin serialization,add the KotlinX Serialization library to an Android project,use Interface callbacks with Kotlin,create a new app using Kotlin,add Kotlin file to existing project,convert Java code to Kotlin",7,,"Kotlin in Android for AND1 w/Chance Payne,Kotlin in Android for AND2 w/Josh Halvorson",,,Kotlin Recycler View,Kotlin,,Android Development Core,7,1,0,0,0,1,,3/6/2019 11:44am,recpW9P4aTWmDyqAo
Kotlin Coroutines,,,,"move coroutine execution from one thread to another,spin up coroutine,prepare methods to be run on coroutines,use annotations to ensure proper threading,set up app to work with coroutines,explain the advantage of Coroutines other Async patterns",6,,"Kotlin Corouties for AND1 w/Chance Payne,Kotlin Coroutines for AND2 w/Josh Halvorson,Kotlin Coroutines for AND2 w/ Josh Halvorson",,,Kotlin RecyclerView Coroutines,Kotlin,,Android Development Core,6,1,0,0,0,1,,3/6/2019 11:44am,recOFvKINM5dDg6Gj
,,,,,0,,,,,,,,,0,0,0,0,0,0,,3/8/2019 4:58pm,recj8hTsAlHGSAXnl
In-Person Networking,,,,learn how to expand your network,1,,In-Person Networking,,,,In-Person Networking,,Career Readiness,1,0,0,0,0,0,,3/12/2019 4:21pm,rec0sNwxZ2psNs5Oz
Reviewing Code During Pull Requests,,,,"run code and test the new functionality as part of a code review,articulate the acceptance criteria of a story",2,,,,,,Labs I - Project Planning,,Lambda Labs,2,1,1,1,0,1,,3/12/2019 6:39pm,rec1sbIRRGQzeceHb
Everyone Should Feel Valued,,,,"work in pair programming effectively,understand how to help others feel valued,understand how they can maximize their contribution",3,,,,,,Labs II - Working with Other Developers,,Lambda Labs,3,1,2,2,0,1,,3/12/2019 6:58pm,recdnohBbgTahmwkd
Working Through Conflict,,,,"communicate disagreement without putting down another team members opinion,assume best intent by every team member,communicate the goal of a conversation clearly",3,,,,,,Labs II - Working with Other Developers,,Lambda Labs,3,1,1,2,0,1,,3/12/2019 7:06pm,recv38uFEQrmXVYSJ
Scoping Work,,Walking through the tasks as a team is important. In a Scrum environment you’ll typically see multiple meetings dedicated to this. You’ll have a “grooming” meeting where you review the backlog and make sure the stories are clear. You’ll have a “planning” meeting where you discuss what stories will make it into a sprint based on scope and what you can build in a week. Many teams will also have a “technical task” meeting where they write the task breakdown for each story. ,,"estimate what can be accomplished in a week,look at a list of requirements and break it down to tasks",2,,,,,,Labs III - Understanding Scope,,Lambda Labs,2,1,2,1,0,2,,3/12/2019 7:12pm,recG5TFgzGNTYw5DG
Planning out Work for a Sprint,,,,make a plan to accomplish the goals for the week,1,,,,,,Labs III - Understanding Scope,,Lambda Labs,1,0,0,1,0,0,,3/13/2019 12:54am,recZb5pQeQUtWefIZ
Test Cases and Test Data,,Most developers don’t understand testing. They don’t understand that it’s *their* responsibility. They don’t understand why they’re doing the *extra* work of testing after they already saw it working on their machine. Get over it now and you’ll be a better developer the rest of your career. ,"Tie back to major goals over the next 3 sprints:
- 100% Functionality and Responsive Views
- Professional user experience. (Consistency of Elements)
- Bug fixing and “Launchability”

Say: Over the next 3 weeks you should log bugs. Today we’ll talk about functional tests and regression tests. You’ll want to make sure you keep a meaningful list of bugs and track them so you know the big ones to go tackle in week 4 and 5. ","understand that there are a multitude of tests types that can be performed,can create and test cases for function and regression",2,,,,,,Labs I - Project Planning,,Lambda Labs,2,1,0,1,0,1,,3/13/2019 1:29am,recVGtNMTuqWfeo6d
"Categorization, Severity, Frequency and Edge Cases",,,,"""understand how to document, prioritize, and categorize a bug""",1,,,,,,Labs I - Project Planning,,Lambda Labs,1,0,0,1,0,0,,3/13/2019 1:31am,rec6n7jOWqyJvZ1O5
,,,,,0,,,,,,,,,0,0,0,0,0,0,,3/18/2019 7:16am,recTUeBfporl2LZxt
Android Model View Controller,,,,"explain the purpose of the repository in MVC,explain the purpose of the view layer in MVC,explain the purpose of the controller layer in MVC,explain the purpose of the model layer in MVC,explain the purpose of the MVC design pattern",5,,"Model View Controller for AND2 w/Chance Payne,MVC Architecture for AND2 w/ Chance Payne",,,Android MVC App List,Android Fundamentals I,,Android Development Core,5,1,0,0,0,1,,3/21/2019 2:13pm,recpvaDJnGsI9WoWh
 Exploratory Data Analysis - Data Storytelling Project Day 1,,"Begin to analyze and visualize your data. 

You should have finalized your topic and dataset _before_ the week begins. ",,"conduct exploratory data analysis on their selected dataset,select an appropriate dataset for their data storytelling project",2,,,,,,DS Project 1 - Data Storytelling Portfolio Project ,,DS - Statistics Fundamentals,2,1,2,0,0,2,,3/23/2019 8:15am,recjedjlDNYrssyuy
Summary and first Visualization - Data Storytelling Project Day 2,,,,"create a short summary (280 characters of less) describing their data storytelling project,create an initial annotated visualization based on their summary",2,,,,,,DS Project 1 - Data Storytelling Portfolio Project ,,DS - Statistics Fundamentals,2,1,2,0,0,2,,3/23/2019 8:15am,reccszefh90LnMfnh
Second Visualization and Blog Post Outline - Data Storytelling Project Day 3,,,,"write an outline for a blogpost that incorporates their visualizations (minimum of two),create a second annotated visualization based on their summary",2,,,,,,DS Project 1 - Data Storytelling Portfolio Project ,,DS - Statistics Fundamentals,2,1,2,0,0,2,,3/23/2019 8:15am,recgr46709bGkWTH4
Polish Blog Post and Refactor Notebook - Data Storytelling Project Day 4,,,,"refactor and clean up an ipython notebook with appropriate comments and markdown as part of their final project deliverable,solicit feedback about their work from fellow students and mentors,revise and polish a blog post to prepare it for publication",3,,,,,,DS Project 1 - Data Storytelling Portfolio Project ,,DS - Statistics Fundamentals,3,1,3,0,0,2,,3/23/2019 8:15am,recwdhMxxuyL3VOeT
Interaction Design,,"The interfaces we design are not static entities. Instead, they respond to user input and communicate changes in state to our users. Designing these various states is just as important as designing the interface itself.",,"design a splash/landing page,represent state in InVision with hovers and timing,design UI states,explain what Interaction Design is and why it is useful",4,,"Interaction Design for UX3 w/ Nick Basile,Interaction Design for UX4 w/ Melissa Kark",,,State Design Practice,Intermediate UI,Active,UX Design Core,4,1,4,0,0,2,,3/26/2019 9:13am,rec7Zla6VfJPtaofH
UI Patterns I,,"While we should always be designing for our users and business context, there are several UI paradigms that we will frequently design. Being familiar with their common features will help us design an externally consistent experience.",,"design a form,design for different user roles,design for CRUD,""distinguish between a website, web app, mobile app, and desktop app""",4,,UI Patterns I for UX4 w/ Melissa Kark,,,Design Paradigms I Practice,Intermediate UI,,UX Design Core,4,1,4,0,0,2,,3/26/2019 9:14am,rec9z3M210AvjAwHu
UI Patterns II,,"While we should always be designing for our users and business context, there are several UI paradigms that we will frequently design. Being familiar with their common features will help us design an externally consistent experience.",,"design a mobile app,design a Client-Relation Management (CRM) System,design a content management system (CMS)",3,,"UI Patterns II for UX3 w/ Nick Basile,UI Patterns II for UX4 w/ Melissa Kark",,,UI Patterns II Assignment,Intermediate UI,Active,UX Design Core,3,1,3,0,0,2,,3/26/2019 9:14am,recuLvxcybVevT70b
Design Communication,,"A crucial skill for designers is to be able to present and justify their own design work for employers, stakeholders, clients—anyone who has a say in how a project moves forward. Being able to ask for and receive feedback graciously is also the sign of a confident and competent designer. The ability to provide effective design feedback to other designers is also an important skill.",,"professionally and empathetically critique work,defend their design decisions,present their work in a professional and engaging manner",3,,"Design Communication for UX3 w/ Nick Basile,Design Communication for UX4 w/ Melissa Kark",,,Design Communication Practice,Intermediate UI,,UX Design Core,3,1,3,0,0,2,,3/26/2019 9:14am,recMHzueD9x6hKHep
Vector Representations,,"Explore Bag of Words analysis with NLTK! We'll start by tokenizing and cleaning documents of text, and then use Scikit-Learn's CountVectorizer and tfidfVectorizer to ""vectorize"" our tokenized documents. This is called a Bag of Words approach because it only considers the presence or lack of certain words within a document, all other grammatical context is discarded. ",,"represent a document as vector,describe the bag-of-words representation",2,,"DS1: Bag of Words with Ryan Allred,Bag of Words for DS2 w/ Jon-Cody Sokoll",,,,Natural Language Processing,,DS - Machine Learning,2,1,0,0,0,1,,3/26/2019 1:12pm,rec0O4tJizjI1C6EA
Document Classification,,,,"Benchmark and compare various vectorization methods in document classification tasks,Apply a vectorization method to a document classification problem,Tune a vectorizer within a document classification pipeline",3,,"DS1: Document Classification with Ryan Allred,Document Classification for DS2 w/ John-Cody Sokoll",,,,Natural Language Processing,,DS - Machine Learning,3,1,0,0,0,1,,3/26/2019 1:12pm,reciZkZiLkmYujcMp
Topic Modeling,,,,"interpret document topic distributions and summarize findings,implement a topic model using the gensim library,describe the latent dirichlet allocation process ",3,,"DS1: Word Embeddings with Ryan Allred,Word Embeddings for DS2 w/ Jon-Cody Sokoll",,,,Natural Language Processing,,DS - Machine Learning,3,1,0,0,0,1,,3/26/2019 1:12pm,recbYIWnPYs2J4AWC
,,,,,0,,,,,,,,,0,0,0,0,0,0,,3/26/2019 1:12pm,recgJzOgl2Z7EE6Mm
Artifacts,,"It’s important for students to know how to setup their artifacts in a way that convey their skills to potential employers. In this lesson, students will understand how Hiring Managers are using these platforms and how they can ensure their artifact supports their career goals.",, recall what Hiring Managers look for as artifacts of skill set while reviewing artifacts required for their curriculum track,1,Unnamed record,,,,,Artifacts,,Career Readiness,1,0,0,0,0,0,,3/29/2019 12:27pm,recOWWBYcSrT1GEAt
Intro to Neural Networks,,,,,0,,"DS1: Intro to Neural Networks with Ryan Allred,Intro to Neural Networks for DS2 w/ Aaron Gallant",,,,Neural Network Foundations,,DS - Machine Learning,0,0,0,0,0,0,,4/1/2019 10:24am,recrb8xiWVfMFRy9Z
Backpropagation,,,,,0,,,,,,Neural Network Foundations,,DS - Machine Learning,0,0,0,0,0,0,,4/1/2019 10:24am,recyjP2Tg7GnJgswE
Introduction to Keras,,,,,0,,"DS1: Introduction to Keras with Ryan Allred,Introduction to Keras for DS2 w/ Aaron Gallant",,,,Neural Network Foundations,,DS - Machine Learning,0,0,0,0,0,0,,4/1/2019 10:25am,recIQiPJwXIYNUkAI
Hyperparameter Tuning and Model Evaluation,,,,,0,,DS1: Hyperparameter Tuning and Model Evaluation with Ryan Allred,,,,Neural Network Foundations,,DS - Machine Learning,0,0,0,0,0,0,,4/1/2019 10:27am,recTADQcdez9Xv274
,,,,,0,,,,,,,,,0,0,0,0,0,0,,4/1/2019 10:28am,rec8tREQZjFVZ0i9P
cr,,,,,0,,,,,,,,,0,0,0,0,0,0,,4/1/2019 3:39pm,reczY2bfatZSRlSWD
Generative Adversarial Networks,,"Behold, the true purpose of the Internet:

<img src=""https://thiscatdoesnotexist.com"">

The above image looks (at least somewhat) like a cat - but it was generated by a computer! Specifically, a *generative adversarial network*, or GAN.

What is a GAN? It's actually *two* neural networks, competing with each other in a zero-sum game framework. The result - created content that at least eerily represents the input, regardless of structure and without any need for labels.

GANs are lots of fun, and can make for cool portfolio pieces. It is worth noting that, as they are an unsupervised learning technique, there are generally fewer direct business applications (unless you're in the business of counterfeiting cats) - so, make sure to understand their limitations, and still know your foundations and more broadly useful models.","As the description says - this is a fun near-the-end topic, not exactly the most employable skill, but can make flashy portfolio pieces. Pitch it is as such.","run a simple GAN to generate pictures based on training data,understand the structure and use cases of a Generative Adversarial Network",2,,"DS1: Generative Adversarial Networks with Aaron Gallant,Generative Adversarial Networks for DS2 w/ Jon-Cody Sokoll",,,,Major Neural Network Architectures,,DS - Machine Learning,2,1,0,0,0,1,,4/4/2019 1:40pm,recMPTgyBUlXXaFm4
Artificial General Intelligence and The Future,,"The year is 20XX - the place, Anywhere, Earth. Everything is hustling and bustling - and no homo sapiens are in sight.

The cars drive themselves - the drones fly themselves. Packages are delivered, bytes are sent over the Internet - but even the bytes are not written by humans.

AI does it all - drives our vehicles, writes our news and our entertainment, reads and summarizes what it writes, runs our farms, maintains our infrastructure. It even fixes and improves itself.

...

Or does it? Utopia or dystopia, the above imagery has driven many science fiction authors (and real scientists). But what will the future actually hold? Progress seems exponential, but is it really, and where is it going?

And - how will Data Science fit in?",Fun last day topic - encourage discussion and camraderie.,"""separate the AI hype from the reality, and offer an informed opinion on the direction of Data Science"",understand and use an AutoML system to train and tune a predictive model",2,,"DS1: Artificial General Intelligence and The Future with Aaron Gallant,Artificial General Intelligence and The Future DS2 w/ Jon-Cody Sokoll",,,,State of the Art Machine Learning,,DS - Machine Learning,2,1,0,0,0,1,,4/4/2019 1:41pm,rec1Q9iO0EbI3sUVE
,,,,,0,,,,,,,,,0,0,0,0,0,0,,4/8/2019 11:42am,recL3NbrDJuAnqHQy
Job Search Strategy,,,,"Identify jobs that you are a fit for,""Go through the steps required to search and apply for jobs, and feel confident starting the application process""",2,,,,,,Job Search Strategy,,Career Readiness,2,1,1,1,1,1,,4/9/2019 2:43pm,recXskxQzOkT3gL3v
"Financial Planning, Offers, and Negotiations",,"Financial planning directly ties into offers and negotiations; it's important to understand your financial commitments in order to feel confident about negotiating. While you shouldn’t negotiate based off your personal needs, you should always know your value and have a walk-away figure that you must surpass in order to consider accepting a role. By understanding what goes into financial planning, negotiations, and navigating offers, you will be able to feel more confident advocating for yourself during the offer stage.",,"create a realistic budget/financial plan for yourself,begin to research salary and benefits for a company/role,navigate salary conversations at any point in the interview process",3,,Money Moves: Financial Planning and Salary NegotiationsAll changes saved.,,,,"""Financial Planning, Offers, and Negotiations""",,Career Readiness,3,1,0,1,0,1,,4/9/2019 6:01pm,recKOrdkTvepLmU26
Design Handoffs and Dev Collaboration,,"Creating a great product takes more than great ideas and a beautiful design. The method in which you handoff your design deliverables will ultimately affect how the development team will implement your design. When you properly collaborate with your development, you empower them and yourselves to create the best product possible.",,"understand the design handoff process,understand how to prepare your designs for handoff,understand how to uplaod your designs to InVision to prepare for a proper handoff",3,,"Design Handoffs and Dev Collaboration,Design Handoffs and Dev Collaboration for UX3 w/ Glenn Ference",,,Design to Developer Handoff Using InVision,Prototyping,,UX Design Core,3,1,3,0,0,2,,4/11/2019 7:32am,recPXkdubzWFL0nLw
Delivering an Android Application,,"You will be building software when you get a job. Because there are many ways to build software, we're going to introduce you to three of them. ",,describe what Agile methodology is and outline the pros and cons of agile development,1,,"CS11 - FE Project week Demos,Software Development Methods for FSW14 w/ Dustin Myers",,,,Build Week: Android,,Android Development Core,1,0,0,0,0,0,,4/12/2019 11:16am,recXxquSVH6MwTVfo
Introduction and Software Installations,,"Welcome to the Java Back End Course! The introduction document tells a little more about the course.

The course requires several different software applications. Instructions are available on how to install them on your system.",,"install software on their Windows Based Computer.,feel welcomed to and informed about Lambda School's Java Back End course!",2,,Install JDK 11 on Windows,,,,,,,2,1,0,0,0,1,,4/12/2019 2:21pm,recB6bQH14gTlCcQ2
Java Back End Course Introduction,,,,understand what to expect in the Java Back End course,1,,,,,,Java Back End Introduction and Software Installations,,Java Backend Development,1,0,0,0,0,0,,4/12/2019 3:15pm,recnrg1dXwKC5VuQS
Software Installations for Windows 10,,,,"install Redis on a Windows 10 based computer,install PostgreSQL on a Windows 10 based computer,install Tomcat on a Windows 10 based computer,install Heroku CLI on a Windows 10 based computer,install RabbitMQ on a Windows 10 based computer,install Postman on a Windows 10 based computer,configure Jet Brains IntelliJ IDEA IDE to their preferences,install Git and Git Bash on a Windows 10 based computer,install the Sublime Text Editor on a Windows 10 based computer,install JDK version 11 on a Windows 10 based Computer",10,,,,,,Java Back End Introduction and Software Installations,,Java Backend Development,10,1,0,0,10,1,,4/12/2019 3:16pm,recZdFuil7J2Iu4tv
Software Installations for Mac,,,,"install Redis on a Mac Computer,install PostgreSQL on a Mac computer,install Tomcat on a Mac computer,Install Heroku CLI on a Mac computer,install RabbitMQ on a Mac computer,install Postman on a Mac computer,configure Jet Brains IntelliJ IDEA IDE to their preferences,install Sublime Text editor on a Mac computer,install the JDK 11 on a Mac computer,install Homebrew on a Mac computer",10,,,,,,Java Back End Introduction and Software Installations,,Java Backend Development,10,1,0,0,10,1,,4/12/2019 3:16pm,recPi3wySlgVCT1qX
Software Installations for Linux (Ubuntu 18),,,,"install Redis on a Linux (Ubuntu 18) based computer,install PostgreSQL on a Linux (Ubuntu 18) based computer,install Tomcat on a Linux (Ubuntu 18) based computer,install Heroku CLI on a Linux (Ubuntu 18) based computer,install RabbitMQ on a Linux (Ubuntu 18) based computer,install Postman on a Linux (Ubuntu 18) based computer,configure Jet Brains IntelliJ IDEA IDE to their preferences,install Git on a Linux (Ubuntu 18) based computer,install Sublime Text Editor on a Linux (Ubuntu 18) based computer,install JDK 11 on a Linux (Ubuntu 18) based computer",10,,,,,,Java Back End Introduction and Software Installations,,Java Backend Development,10,1,0,1,10,1,,4/12/2019 3:18pm,recDhn3oqj7xPUO41
DS Build Week 2,,,,,0,,,,,,DS Project 4 - Build Week 2,,DS - Machine Learning,0,0,0,0,0,0,,4/12/2019 6:42pm,recMeg3dppECHzgAY
Interviewing and STAR Stories,,,,"""Understand what the primary interviews formats are and the primary types of interview questions, and what each interview involves"",Use the STAR and FEB methods to respond to interview questions,Brainstorm 6-8 strong stories they can recycle when interviewing,Apply their transferable skills to careers in tech ,Map out a job description to help them know how to tailor their responses ",5,,,,,,Interview/Star Stories,,Career Readiness,5,1,1,1,1,1,,4/13/2019 1:57pm,recSBMTOMyj1bznVz
interview,,,,,0,,,,,,,,,0,0,0,0,0,0,,4/25/2019 12:46pm,recS20FCXsks5xQyt
Interviewing Etiquette,,"While how you prepare for an interview may vary greatly by field and company, there are some strategies that will help you make a strong impression regardless of where you're interviewing, or what point you're at in your career. Similarly, missing out on key opportunities to make an impression could send a message you don't want to send about you as a candidate, so knowing how to navigate the nuances of interviewing etiquette is key to securing your next opportunity! ",,"""research companies’ norms to assess for dress, communication, and culture prior to an interview, and talk fluently about a company’s history, values, and products prior to interview"",""present themself professionally via body language, eye contact, handshake, enthusiasm, and demeanor"",""prepare for a variety of interview formats, including phone, group, panel, 1:1, technical challenges, and executive/managerial interviews"",write a professional thank-you note",4,,,,,,Interview Etiquette/Strategies,,Career Readiness,4,1,4,4,4,4,,4/25/2019 12:47pm,recjh0EtOXblagTs5
Sharing Your Story and Networking Fundamentals,,"Knowing how to tell your story is an important part of starting to build your professional network in your field. In this sprint, we'll review how you can use your story to start building and maintain your network.",,"talk confidently and professionally about their journey to and through Lambda School,identify the right people to connect with,maintain and grow relationships",3,,,,,,Sharing Your Story and Networking Fundamentals,,Career Readiness,3,1,3,3,3,4,,4/25/2019 1:38pm,recnK9O5ulxu7CEJq
Intro to Careers and the Tech Landscape,,"**Welcome to Lambda School! Hopefully your first week was challenging, rewarding, and has you excited for all that is to come over the next several months that you’re learning with Lambda School! While you all joined Lambda School to build your tech skills, you’re also here to make a career change. Learning new skills for the sake of skills is great, but the majority of Lambda Students come to us to make a significant shift.

Some of you may be wondering, “Why are we starting careers in week 2?? I’m not going to be job searching for months!” We’ll answer this question, and get you ready to dive into your searches (yes, now!) in today’s kick-off lesson.**",,"""Understand how Lambda School approaches Careers,  what support we provide in the search, and what Lambda School expects of students"",set expectations for the job search/tech field*",2,,,,,,Intro to Careers and the Tech Landscape,,Career Development,2,1,2,2,2,4,,4/29/2019 10:37pm,rec4fpfnGP7SDWxDE
Data Structures,,,,,0,,,,,,,,,0,0,0,0,0,0,,5/6/2019 3:22pm,recG2vsZtWiWgAi5V
Imposter Syndrome and Diversity and Inclusion,,"**You may have heard the term “imposter syndrome” thrown around at Lambda School, or elsewhere. It’s a common term to hear in the tech field now, but was actually coined by two psychologists, Pauline Clance and Suzanne Imes, in 1978. While it’s not a “syndrome” in the clinical sense, they called it this after observing academics and professionals with pervasive self-doubt, even despite plenty of external evidence of their accomplishments, skills, intelligence, and capability.**

**While imposter syndrome might seem like an inconvenience or just a bad feeling, it can actually have a real impact on your career success; people who experience imposter syndrome may be less likely to be promoted, may have lower salaries, and may feel less overall job satisfaction. We do not want you to be held back by this after all your hard work to get to where you are, so today we’re going to review how to recognize imposter syndrome and overcome it.**",," develop an objective understanding of imposter syndrome and how it appears when learning and on the job,respond productively to imposter syndrome in a way that works through it,""Differentiate between diversity and inclusion, and reflect on the ways they can bring inclusive practices into their work relationships""",3,,"""Imposter Syndrome and Diversity and Inclusion, May 13 2019""",,,,Imposter Syndrome and Diversity and Inclusion,,Career Readiness,3,1,3,0,0,2,,5/6/2019 4:42pm,reccho1GUMGdFjsRe
Navigating Offers and Negotiations,,"**We cover this topic earlier than most of you will actually need to practice negotiating offers or salaries because often by the time you are facing and offer or opportunity to negotiate, you may not have a lot of time and flexibility to prepare or run through a practice conversation with somebody. Know what to expect and best practices for navigating offers and negotiations so that when the time comes, you're prepared to handle them professionally and in a way that benefits you!**",,"prepare for signing non-disclosure agreements (NDA) and understand their implications,manage multiple offers professionally and leverage them as a negotiation tool,conduct market research to accurately estimate their value as an employee,apply basic negotiation strategies to a variety of compensation conversations ranging from phone screens to the final stage",4,,Navigating Offers and Negotiations,,,,Navigating Offers and Negotiations,,Career Readiness,4,1,4,1,1,2,,5/6/2019 6:27pm,recNs5HRFoIRxVqNl
Forms,,,,,0,,Forms for UX3 w/Nick Basile,,,,Web for UX: Intro to HTML and CSS,,UX Web and Labs Prep Unit,0,0,0,0,0,0,,5/9/2019 12:26pm,recqfcnRtLyymCpSn
"Sharing Your Story, with Confidence!",,"We’ve talked about sharing your story before (also referred to as an elevator pitch), but now that we’re nearing the time when you should be actively applying for jobs, it’s extra important to set aside time to practice telling your story with confidence.

Understanding what differentiates Lambda School from university or other non-college training programs and why that makes your skill set and experience unique is key to highlighting the full value-add you bring to a team and company. 

It can also be tough to tell your story when you have a non-traditional path. How do you talk about your previous unrelated experience? What if you don’t have any previous experience? What if the other person doesn’t “get it” or care? These are all valid concerns, but you control how your story is told, not other people, and in today’s lesson we’re going to go over how to craft a powerful narrative that you feel confident relaying to others.",,tie in their previous experience to their career goals in order to craft a narrative that they feel confident sharing in an interview,1,,"""Sharing Your Story, with Confidence!""",,,,"""Sharing Your Story, with Confidence!""",,Career Readiness,1,0,1,1,0,0,,5/15/2019 1:49pm,recY3axPUxTLOgVtB
Team Dynamics and Feedback,,"You will do a lot of teamwork here at Lambda School. This isn’t just for the sake of it; working in teams is absolutely critical to nearly any field, but especially web/mobile development, data science, and design, where you frequently are working to execute broader company goals/meet other teams’ needs. Even freelancers who don’t work on a team still need to be able to effectively work with a client, so it’s just as critical for your long-term success to be able to work with others well as it is to have the technical skills to do the job.",,"manage a variety of team dynamics and challenging scenarios productively and empathetically,""deliver balanced, professional, conscientious feedback to a peer""",2,,Team Dynamics and Feedback,,,,Team Dynamics and Feedback,,Career Readiness,2,1,2,2,0,3,,5/17/2019 8:39pm,receKnmW6jOgdQdfQ
First iOS App: Navigation Controller,,,,"understand and implement the `prepare(for segue` method,implement a segue between a table view cell and a detail view controller,use UINavigationController to display data hierarchically ",3,,First iOS App: Navigation Controller for iOS7 w/ Ben Gohlke,,,SwiftVocabulary,Introduction to iOS Programming,,iOS Development Core,3,1,3,1,3,2,,5/20/2019 11:03am,recZLvMsYwMlewqNg
Xcode and Interface Builder Tour,,,,,0,,,,,,Introduction to iOS Programming,,iOS Development Core,0,0,0,0,0,0,,5/20/2019 11:03am,recfWlz9p9fJCCIkc
Swift Fundamentals I,,,,"understand how braces `{}` are used to group code into blocks and how scope affects the lifespan of a variable,group like instructions into a function and call that function to reuse/organize code,iterate over an array using a loop to accomplish some task,use conditional logic to execute various code paths,understand how to apply mutability to variables (`let` vs. `var`),""identify, use, and understand the difference between the basic data types: `Int`, `Double`, `Bool`, `String`)""",6,,Swift Fundamentals I for iOS7 w/ Ben Gohlke,,Groceries,NOC List,Introduction to iOS Programming,,iOS Development Core,6,1,4,5,5,1,,5/20/2019 11:03am,recRwYSRdJumh59XS
Swift Fundamentals II,,,,"force unwrap an optional type and understand the potential dangers and benefits,use an if let statement to unwrap an optional variable,understand and explain the purpose of optionals,understand and explain the difference between a method and a function,create custom initializers,show and explain the difference between value types vs. reference types,""define custom types using class, struct, and enum""",7,,Swift Fundamentals II for iOS7 w/ Ben Gohlke,,,Airport Departures Playground,Introduction to iOS Programming,,iOS Development Core,7,1,7,7,7,4,,5/20/2019 11:04am,recx4OSX1JIwT1h2S
Weeks 2-4 Recap and Goal-Setting,,"Over the past few weeks, we’ve talked about some introductory principles in job searching/understanding the tech field, navigating team dynamics, and knowing your worth/planning financially. Many of you are in your first Build Week right now, so this week is to revisit some of the main topics we’ve covered already without adding new concepts since we know Build Weeks are demanding. ",,"""recall the main principles of searching in the tech field, managing team dynamics, and knowing their worth"",set SMART goals to help them progress in their search",2,,Weeks 2-4 Recap and Goal-Setting,,,,Weeks 2-4 Recap and Goal-Setting,,Career Readiness,2,1,2,2,0,3,,5/20/2019 11:55am,recslnPKRCx3pvkTD
HTML,,Even the most complex web applications start with simple HTML elements. Knowing how to use HTML will let you build the foundation for web experiences.,,"describe and use semantic HTML tags to markup content,describe what HTML is and how to use it,set up their development environment,describe the differences between frontend and backend,understand how coding pertains to UX",5,,HTML for UX3 w/Nick Basile,,,HTML: Project - Sweet Eats Bakery Markup,Intro to HTML & CSS,,UX Design Core,5,1,5,1,1,2,,5/20/2019 12:09pm,recTAHYbi3RL93PQ4
CSS,,CSS allows us to take the structure of our HTML and present it as a compelling user interface. This is where design meets code.,,"demonstrate understanding of flex item properties in flexbox,demonstrate understanding of flex container properties in flex box,describe and understand that flexbox is a module,identify and use all properties in the box model,demonstrate CSS specificity and inheritance to create and update styles,demonstrate the use of CSS selectors to style markup",6,,CSS for UX3 w/Nick Basile,,,CSS: Project - Sweet Eats Bakery Styles,Intro to HTML & CSS,,UX Design Core,6,1,5,5,5,1,,5/20/2019 12:12pm,recAzP1dlrdfEiY3z
Forms,,Forms are how our users interact with our web experiences. Knowing how to create one will let you correctly gather information from users.,,"explain that basic HTML/CSS are not how most websites are developed today,create a form with HTML and CSS,identify the most common form elements",3,,,,,Forms: Project - Sweet Eats Bakery Form,Intro to HTML & CSS,,UX Design Core,3,1,3,0,0,2,,5/20/2019 12:13pm,recYAjis8IK3mDc91
Responsive Web I,,"Responsive design covers topics that range from fixed layouts to fully responsive websites. Responsive design addresses accessibility challenges and how developers can use flexible units to overcome them. On top of being accessible, fully responsive websites are a joy to use and push web development forward into the future.",,"build responsive layouts using an effective approach.,demonstrate knowledge of media queries by correctly implementing them in a project.,""describe the differences in fixed, fluid, adaptive, and responsive layouts.""",3,,Responsive Web I for UX3 w/Nick Basile,,,Responsive Web I: Project - Responsive Website,Responsive & Interactive Web Dev,,UX Design Core,3,1,3,2,3,2,,5/20/2019 12:18pm,recai9meMogJoYXvU
Responsive Web II,,Understanding the problem vs fixing a problem are two different things. We aim to fix the problems presented by the thousands of devices we are required to develop for. This module will address techniques that will push your ability to code a responsive website or app further.,,"build a percent based layout,describe why responsive design impacts accessibility,describe and use responsive units to create a fully responsive website",3,,Responsive Web II for UX3 w/Nick Basile,,,Responsive Web II: Project - Build Your Portfolio,Responsive & Interactive Web Dev,,UX Design Core,3,1,1,0,2,1,,5/20/2019 12:18pm,rec15Zd2yW9lxpghf
UX JavaScript I,,"JavaScript I will expose you to some of the fundamentals of the JavaScript programming language. These include:
- Variables
- Arrays
- Objects
- Functions

This particular module is designed to go quite deep into these subjects. We will also be covering these concepts quite rapidly, but each concept lends itself to the next, so you get a lot of exposure while combining some or all of these points.",,"create and use arrays as well as array properties and array methods,create and use object literals as well as describe object properties and methods,""use let, const, var and demonstrate their differences."",""use function declarations, expressions, and arrow functions and describe their differences""",4,,UX JavaScript I for UX3 w/Nick Basile,,,"""JavaScript I: Project - Object, Array, Arrow Function Practice""",Responsive & Interactive Web Dev,,UX Design Core,4,1,4,3,4,2,,5/20/2019 12:19pm,recDnJzbnPT71ZTSI
Interactive DOM,,"The first step in building vibrant dynamic web pages and applications is learning about the DOM. What it is, how it affects our page, and how to access and manipulate it.",,"""create a new element, manipulate it, and add it to the DOM"",Use different properties and methods to manipulate a selected element.,""Use DOM selectors, and describe the differences in the behavior of each."",""Explain what the DOM is, and how it relates to an html page""",4,,Interactive DOM for UX3 w/Nick Basile,,,Interactive DOM: Project - JS CMS,Responsive & Interactive Web Dev,,UX Design Core,4,1,4,3,4,2,,5/20/2019 12:20pm,recwG5weR76jd4HOi
Polya's Problem Solving Framework,,"Students learn and understand each of the four pillars of Polya's problem solving framework, which are:

1. Understand the problem
2. Devise a strategy for the problem
3. Carry out the strategy
4. Reflect on the strategy",,describe each step of Polya's problem solving framework,1,,,,,,Problem Solving Background and Context,,Technical Mastery,1,0,0,0,0,0,,5/23/2019 11:52am,recqeojOCK2iZhhh9
Applying Polya's,,"Students will practice applying the first two steps of Polya's problem solving framework to simple and relatable logic problems, in order to engrain and internalize these steps. ",,learn how to apply steps 1 and 2 of Polya's to a give problem,1,,,,,,Problem Solving Background and Context,,Technical Mastery,1,0,0,0,0,0,,5/23/2019 11:53am,recAMuCaonWdS31kQ
AutoEncoders & Recommendation Systems,,,,,0,,,,,,Major Neural Network Architectures,,DS - Machine Learning,0,0,0,0,0,0,,5/23/2019 1:46pm,recKXiakNPgwC4WWh
Genetic Evolution,,,,explain how genetic evolution strategies can be applied to training neural networks,1,,,,,,State of the Art Machine Learning,,DS - Machine Learning,1,0,0,0,0,0,Unnamed record,5/23/2019 4:30pm,reca2QYYJcnuJYHLQ
ML on Edge,,,,,0,,,,,,State of the Art Machine Learning,,DS - Machine Learning,0,0,0,0,0,0,,5/23/2019 4:30pm,recm4aznzh3d6eQxO
AutoML & Bayesian Optimization,,,,,0,,,,,,State of the Art Machine Learning,,DS - Machine Learning,0,0,0,0,0,0,,5/23/2019 4:31pm,recjuqUXj11KcBSAm
Making Forecasts,,,,"use Prophet to forecast time series,begin with baselines for time series,acquire time series data,distinguish between regression problems and classification problems,recognize examples of supervised learning with tabular data",5,,Making Forecasts for DS4 w/ Ryan Herr,,,,Regression 1,,DS - Predictive Modeling,5,1,0,3,0,1,,5/23/2019 11:08pm,rech65G0fq8VMPoPo
Evaluating Forecasts,,,,"""use time series metrics: MSE, RMSE, MAE, MAPE"",do time series cross-validation,do train/test split,explain why overfitting is a problem and model validation is important",4,,"DS1: Begin the Modeling Process with Ryan Herr,Begin the modeling process for DS2 w/ Ryan Herr,Baselines & Validation with Ryan Herr,Evaluating Forecasts for DS4 w/ Ryan Herr",,,,Regression 1,,DS - Predictive Modeling,4,1,0,0,0,1,,5/23/2019 11:08pm,recKYEc5a5goAfru2
Doing Linear Regression,,,,"use regression metric: MAE,do leave-one-out cross-validation,use scikit-learn for linear regression,begin with baselines for regression,arrange data into X features matrix and y target vector,acquire data for features",6,,"DS1: Linear Regression with Ryan Allred,Regression for DS2 w/ Ryan Allred,Ordinary Least Squares Regression w/ Ryan Herr,Doing Linear Regression for DS4 w/ Ryan Herr",,,,Regression 1,,DS - Predictive Modeling,6,1,0,0,0,1,,5/23/2019 11:08pm,recdqp83LGNMbMN7w
Understanding Ordinary Least Squares,,,,"""use regression metrics: MSE, RMSE, MAE, R^2"",""visualize a line of best fit in 2D, and hyperplane in 3D"",get and interpret coefficients of a linear model,understand how linear algebra can solve ordinary least squares regression,understand how ordinary least squares regression minimizes the sum of squared errors",5,,"DS1: Linear Regression with Ryan Allred,Regression for DS2 w/ Ryan Allred,Ordinary Least Squares Regression w/ Ryan Herr,Understanding OLS for DS4 w/ Ryan Herr",,,,Regression 1,,DS - Predictive Modeling,5,1,0,0,0,1,,5/23/2019 11:09pm,recYwM1CP20Rwioeq
"Logistic Regression, One-Hot Encoding",,,,"submit to predictive modeling competitions,scale features,do one-hot encoding,use scikit-learn for logistic regression,do train/validate/test split,use classification metric: accuracy,begin with baselines for classification",7,,"DS1: Logistic Regression with Aaron Gallant,Logistic Regression for DS2 w/ Ryan Allred,Logistic Regression for DS3 w/ Ryan Herr,""Logistic Regression, One-Hot Encoding for DS4 w/ Ryan Herr""",,,,Classification 1,,DS - Predictive Modeling,7,1,0,0,1,1,,5/23/2019 11:10pm,rectGzZ7cfZXGBbtF
"Decision Trees, Data Cleaning",,,,"get and interpret feature importances of a tree-based model,""understand why decision trees are useful to model non-linear, non-monotonic relationships and feature interactions"",use scikit-learn for decision trees,impute missing values,clean data with outliers",5,,"DS1: Decision Trees with Ryan Herr,Decision Trees for DS2 w/ Ryan Herr,Decision Trees for DS3 w/ Ryan Herr",,,,Classification 1,,DS - Predictive Modeling,5,1,0,0,0,1,,5/23/2019 11:10pm,recmVYXEuxSfFiK6m
"Random Forests, Ordinal Encoding",,,,"understand how categorical encodings affect trees differently compared to linear models,do ordinal encoding with high-cardinality categoricals,understand how tree ensembles reduce overfitting compared to a single decision tree with unlimited depth,use scikit-learn for random forests,do feature engineering with dates",5,,"DS1: Random Forests with Ryan Herr,Random Forests for DS2 w/ Ryan Herr,DS3: Random Forests & Gradient Boosting with Ryan Herr,Random Forests for DS4 w/ Ryan Herr",,,,Classification 1,,DS - Predictive Modeling,5,1,0,0,0,1,,5/23/2019 11:11pm,recUU5eye5i74ez09
"Confusion Matrix, Precision & Recall",,,,"understand how Precision@K can help make decisions and allocate budgets,""understand the relationships between precision, recall, thresholds, and predicted probabilities"",""use classification metrics: precision, recall"",get and interpret the confusion matrix for classification models",4,,"Validate classification problems for DS2 w/ Ryan Herr,DS3: Classification metrics & Imbalanced classes with Ryan Herr,""Confusion Matrix, Precision & Recall for DS4 w/ Ryan Herr""",,,,Classification 1,,DS - Predictive Modeling,4,1,0,0,0,1,,5/23/2019 11:11pm,rec4PHz3BGhOsQw2p
"Log-Linear Regression, Feature Engineering",,,,"do feature engineering with relational data,use scikit-learn for Lasso and Ridge Regression (L1 and L2 regularization),use regression metric: RMSLE,log-transform regression target with right-skewed distribution",4,,"DS1: Polynomial and Log-linear Regression with Ryan Allred,Polynomial Regression for DS2 w/ Ryan Allred,Polynomial & Log-Linear Regression for DS3 w/ Ryan Herr",,,,Regression 2,,DS - Predictive Modeling,4,1,0,0,0,1,,5/23/2019 11:12pm,recQGaK0cy4n5sZ5i
"Gradient Boosting, More Feature Engineering",,,,"use xgboost for gradient boosting,combine infrequent categories to reduce cardinality",2,,"DS1: Gradient Boosting with Ryan Herr,Gradient Boosting for DS2 w/ Ryan Herr,DS3: Random Forests & Gradient Boosting with Ryan Herr",,,,Regression 2,,DS - Predictive Modeling,2,1,0,0,0,1,,5/23/2019 11:12pm,recvDZb2pBkbnV1FM
"Hyperparameter Optimization, Cross-Validation",,,,"do cross-validation with independent test set,use scikit-learn for hyperparameter optimization",2,,"DS1: Select Models and Parameters with Ryan Herr,Select models and parameters for DS2 w/ Ryan Herr,DS3: Hyperparameter optimization & Categorical encoding with Ryan Herr",,,,Regression 2,,DS - Predictive Modeling,2,1,0,0,0,1,,5/23/2019 11:13pm,recMvFC7ZYtsxnCYU
"Permutation Importances, Partial Dependence Plots",,,,"visualize and interpret partial dependence plots,get and interpret permutation importances",2,,"DS1: Model Interpretation with Ryan Herr,Model interpretation for DS2 w/ Ryan Herr,DS3: Model Interpretation with Ryan Herr",,,,Regression 2,,DS - Predictive Modeling,2,1,0,0,0,1,,5/23/2019 11:13pm,recsiAKpXWors0Q98
"Making datasets, Avoiding leakage",,,,"begin with baselines: expected value of random decisions,remove features to avoid leakage,join real-world data to make a new dataset",3,,,,,,Classification 2,,DS - Predictive Modeling,3,1,0,0,0,1,,5/23/2019 11:14pm,reccEIbEKKZitADNJ
"Class Imbalance, ROC AUC",,,,"visualize the ROC curve by plotting true positive rate vs false positive rate at varying thresholds,use classification metric: ROC AUC,use the class_weight parameter in scikit-learn,understand why accuracy is a misleading metric when classes are imbalanced",4,,"DS1: Validate Classification Problems with Ryan Herr,Validate classification problems for DS2 w/ Ryan Herr,DS3: Classification metrics & Imbalanced classes with Ryan Herr",,,,Classification 2,,DS - Predictive Modeling,4,1,0,0,0,1,,5/23/2019 11:15pm,receyMXpill2KmoNJ
Making & explaining decisions,,,,"explain decisions with shapley value plots,make decisions with probability calibration and expected value calculations",2,,"DS1: Model Interpretation with Ryan Herr,Model interpretation for DS2 w/ Ryan Herr,DS3: Model Interpretation with Ryan Herr",,,,Classification 2,,DS - Predictive Modeling,2,1,0,0,0,1,,5/23/2019 11:16pm,rec8ZNymR7SYAE71J
"DS Project 2, Day 1",,,,,0,,,,,,DS Project 2 - Predictive Modeling portfolio project,,DS - Predictive Modeling,0,0,0,0,0,0,,5/23/2019 11:19pm,recUHOMi190QDQ3PN
"DS Project 2, Day 2",,,,,0,,,,,,DS Project 2 - Predictive Modeling portfolio project,,DS - Predictive Modeling,0,0,0,0,0,0,,5/23/2019 11:19pm,recyIE6Ao0nViqJh2
"DS Project 2, Day 3",,,,,0,,,,,,DS Project 2 - Predictive Modeling portfolio project,,DS - Predictive Modeling,0,0,0,0,0,0,,5/23/2019 11:19pm,rec6btCizov6uuoyz
"DS Project 2, Day 4",,,,,0,,,,,,DS Project 2 - Predictive Modeling portfolio project,,DS - Predictive Modeling,0,0,0,0,0,0,,5/23/2019 11:19pm,recKMllvh8yR40XQK
Swift Fundamentals III,,,,"walk through an app using a breakpoint and explain flow control,convert user input from `String` into a number from a `UITextField`,downcast types from super classes to subclasses using `as?` or `as!`,use class inheritance and composition,use optional chaining to short circuit evaluation when a value is nil,use the nil coalescing operator to provide a default value when an expression is nil,use a guard let statement to early exit",7,,Swift Fundamentals III for iOS7 w/ James Pacheco,,,Currency Converter,iOS Fundamentals I,,iOS Development Core,7,1,5,5,1,1,,5/29/2019 7:57pm,recMhoSaF3MqmoKox